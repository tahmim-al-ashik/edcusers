name: Endpoints
description: ''
endpoints:
  -
    httpMethods:
      - GET
    uri: api/v2/hello/plexus
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: 'Hello plexus'
        headers:
          content-type: 'text/html; charset=UTF-8'
          cache-control: 'no-cache, private'
          x-ratelimit-limit: '60'
          x-ratelimit-remaining: '59'
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v2/broadband/payment/bkash/create
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v2/broadband/payment/bkash/callback
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 500
        content: |-
          {
              "message": "Server Error"
          }
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          x-ratelimit-limit: '60'
          x-ratelimit-remaining: '58'
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v2/broadband/payment/bkash/refund
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 500
        content: |-
          {
              "message": "Server Error"
          }
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          x-ratelimit-limit: '60'
          x-ratelimit-remaining: '57'
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v2/hotspot/payment/bkash/create
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v2/hotspot/payment/bkash/callback
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 500
        content: |-
          {
              "message": "Server Error"
          }
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          x-ratelimit-limit: '60'
          x-ratelimit-remaining: '56'
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v2/hotspot/payment/bkash/refund
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 500
        content: |-
          {
              "message": "Server Error"
          }
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          x-ratelimit-limit: '60'
          x-ratelimit-remaining: '55'
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v2/graph/internet/user
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Internet User Barchart'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"results":{"total_by_month_and_status":{"1":{"total":0,"pending":0,"active":0,"year":2025,"month":1},"2":{"total":0,"pending":0,"active":0,"year":2025,"month":2},"3":{"total":0,"pending":0,"active":0,"year":2025,"month":3},"4":{"total":0,"pending":0,"active":0,"year":2025,"month":4},"5":{"total":0,"pending":0,"active":0,"year":2025,"month":5},"6":{"total":0,"pending":0,"active":0,"year":2025,"month":6}},"total":0},"status":"success","error_type":"","message":""}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          x-ratelimit-limit: '60'
          x-ratelimit-remaining: '54'
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v2/graph/internet/user/{uid}/{days}/{type}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Internet User line chart'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      uid:
        name: uid
        description: ''
        required: true
        example: enim
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      days:
        name: days
        description: ''
        required: true
        example: voluptatem
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      type:
        name: type
        description: ''
        required: true
        example: et
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      uid: enim
      days: voluptatem
      type: et
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 500
        content: |-
          {
              "message": "Server Error"
          }
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          x-ratelimit-limit: '60'
          x-ratelimit-remaining: '53'
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v2/graph/internet/user/{days}/{type}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Internet User line chart'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      days:
        name: days
        description: ''
        required: true
        example: modi
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      type:
        name: type
        description: ''
        required: true
        example: earum
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      days: modi
      type: earum
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 500
        content: |-
          {
              "message": "Server Error"
          }
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          x-ratelimit-limit: '60'
          x-ratelimit-remaining: '52'
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v2/graph/active/internet/user/{days}/{type}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Active Internet User line chart'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      days:
        name: days
        description: ''
        required: true
        example: earum
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      type:
        name: type
        description: ''
        required: true
        example: beatae
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      days: earum
      type: beatae
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 500
        content: |-
          {
              "message": "Server Error"
          }
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          x-ratelimit-limit: '60'
          x-ratelimit-remaining: '51'
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v2/{branch_id}/current/month/total/payment'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      branch_id:
        name: branch_id
        description: 'The ID of the branch.'
        required: true
        example: suscipit
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      branch_id: suscipit
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 500
        content: |-
          {
              "message": "Server Error"
          }
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          x-ratelimit-limit: '60'
          x-ratelimit-remaining: '50'
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v2/{branch_id}/gross/total/payment'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      branch_id:
        name: branch_id
        description: 'The ID of the branch.'
        required: true
        example: officia
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      branch_id: officia
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 500
        content: |-
          {
              "message": "Server Error"
          }
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          x-ratelimit-limit: '60'
          x-ratelimit-remaining: '49'
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v2/total/internet/user/summary/daily/{zone_id}/{days}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Internet User Day Wise Summary'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      zone_id:
        name: zone_id
        description: 'The ID of the zone.'
        required: true
        example: voluptates
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      days:
        name: days
        description: ''
        required: true
        example: rerum
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      zone_id: voluptates
      days: rerum
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v2/total/internet/user/summary/monthly/{zone_id}/{months}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Internet User Month Wise Summary'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      zone_id:
        name: zone_id
        description: 'The ID of the zone.'
        required: true
        example: officiis
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      months:
        name: months
        description: ''
        required: true
        example: saepe
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      zone_id: officiis
      months: saepe
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v2/total/internet/user/payments/summary/daily/{zone_id}/{days}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Internet User Payments Day Wise Summary'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      zone_id:
        name: zone_id
        description: 'The ID of the zone.'
        required: true
        example: molestiae
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      days:
        name: days
        description: ''
        required: true
        example: accusamus
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      zone_id: molestiae
      days: accusamus
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v2/total/internet/user/payments/summary/monthly/{zone_id}/{months}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Internet User Received Payments Month Wise Summary'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      zone_id:
        name: zone_id
        description: 'The ID of the zone.'
        required: true
        example: beatae
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      months:
        name: months
        description: ''
        required: true
        example: voluptatem
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      zone_id: beatae
      months: voluptatem
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v2/total/internet/user/receivable/payments/summary/monthly/{zone_id}/{months}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Internet User Receivable Payments Month Wise Summary'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      zone_id:
        name: zone_id
        description: 'The ID of the zone.'
        required: true
        example: blanditiis
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      months:
        name: months
        description: ''
        required: true
        example: qui
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      zone_id: blanditiis
      months: qui
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 500
        content: |-
          {
              "message": "Server Error"
          }
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          x-ratelimit-limit: '60'
          x-ratelimit-remaining: '48'
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v2/total/internet/user/monthly/record/list/{zone_id}/{from}/{to}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Internet User Monthly Record List With Date Filter'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      zone_id:
        name: zone_id
        description: 'The ID of the zone.'
        required: true
        example: consequuntur
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      from:
        name: from
        description: ''
        required: true
        example: et
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      to:
        name: to
        description: ''
        required: true
        example: id
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      zone_id: consequuntur
      from: et
      to: id
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 500
        content: |-
          {
              "message": "Server Error"
          }
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          x-ratelimit-limit: '60'
          x-ratelimit-remaining: '47'
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v2/total/internet/user/daily/record/list/{zone_id}/{from}/{to}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Internet User Daily Record List With Date Filter'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      zone_id:
        name: zone_id
        description: 'The ID of the zone.'
        required: true
        example: eaque
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      from:
        name: from
        description: ''
        required: true
        example: nostrum
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      to:
        name: to
        description: ''
        required: true
        example: placeat
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      zone_id: eaque
      from: nostrum
      to: placeat
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v2/graph/support/center/{days}/{type}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Sales Agent line chart'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      days:
        name: days
        description: ''
        required: true
        example: in
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      type:
        name: type
        description: ''
        required: true
        example: alias
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      days: in
      type: alias
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 500
        content: |-
          {
              "message": "Server Error"
          }
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          x-ratelimit-limit: '60'
          x-ratelimit-remaining: '46'
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v2/graph/support_center/user
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Support Center Count Bar chart.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v2/graph/sales/agent/{days}/{type}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Sales Agent line chart'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      days:
        name: days
        description: ''
        required: true
        example: esse
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      type:
        name: type
        description: ''
        required: true
        example: ipsa
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      days: esse
      type: ipsa
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 500
        content: |-
          {
              "message": "Server Error"
          }
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          x-ratelimit-limit: '60'
          x-ratelimit-remaining: '45'
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v2/graph/sales_agent/user
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Sales Agent User Count Bar Chart'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v2/graph/sales/point/{days}/{type}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Sales Point line chart'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      days:
        name: days
        description: ''
        required: true
        example: totam
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      type:
        name: type
        description: ''
        required: true
        example: quaerat
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      days: totam
      type: quaerat
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 500
        content: |-
          {
              "message": "Server Error"
          }
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          x-ratelimit-limit: '60'
          x-ratelimit-remaining: '44'
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v2/graph/sales_point/user
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Sales Point User Count Bar Chart.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v2/graph/{branch_id}/broadband_total/user'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Zone & month Wise Bar Chart For Total Wifi User'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      branch_id:
        name: branch_id
        description: 'The ID of the branch.'
        required: true
        example: saepe
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      branch_id: saepe
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 500
        content: |-
          {
              "message": "Server Error"
          }
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          x-ratelimit-limit: '60'
          x-ratelimit-remaining: '43'
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v2/graph/{branch_id}/total/broadband/payment'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Zone & month Wise Bar Chart For Total Payment of Broadband User'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      branch_id:
        name: branch_id
        description: 'The ID of the branch.'
        required: true
        example: qui
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      branch_id: qui
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 500
        content: |-
          {
              "message": "Server Error"
          }
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          x-ratelimit-limit: '60'
          x-ratelimit-remaining: '42'
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v2/{branch_id}/total/broadband/user'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Zone Wise Total Broadband User'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      branch_id:
        name: branch_id
        description: 'The ID of the branch.'
        required: true
        example: ratione
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      branch_id: ratione
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 500
        content: |-
          {
              "message": "Server Error"
          }
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          x-ratelimit-limit: '60'
          x-ratelimit-remaining: '41'
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v2/{branch_id}/total/broadband/payment'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Zone Wise Total Broadband Payment'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      branch_id:
        name: branch_id
        description: 'The ID of the branch.'
        required: true
        example: eos
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      branch_id: eos
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 500
        content: |-
          {
              "message": "Server Error"
          }
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          x-ratelimit-limit: '60'
          x-ratelimit-remaining: '40'
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v2/graph/{branch_id}/wifi_total/user'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Zone & month Wise Bar Chart For Total Wifi User'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      branch_id:
        name: branch_id
        description: 'The ID of the branch.'
        required: true
        example: ea
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      branch_id: ea
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 500
        content: |-
          {
              "message": "Server Error"
          }
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          x-ratelimit-limit: '60'
          x-ratelimit-remaining: '39'
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v2/graph/{branch_id}/total/wifi/payment'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Zone & month Wise Bar Chart For Total Payment of Wifi User'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      branch_id:
        name: branch_id
        description: 'The ID of the branch.'
        required: true
        example: optio
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      branch_id: optio
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 500
        content: |-
          {
              "message": "Server Error"
          }
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          x-ratelimit-limit: '60'
          x-ratelimit-remaining: '38'
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v2/graph/{branch_id}/total/wifi/payment/monthly'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Month Wise Line For Total Payment of Wifi User'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      branch_id:
        name: branch_id
        description: 'The ID of the branch.'
        required: true
        example: dolore
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      branch_id: dolore
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 500
        content: |-
          {
              "message": "Server Error"
          }
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          x-ratelimit-limit: '60'
          x-ratelimit-remaining: '37'
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v2/{branch_id}/total/wifi/user'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Zone Wise Total Wifi User'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      branch_id:
        name: branch_id
        description: 'The ID of the branch.'
        required: true
        example: impedit
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      branch_id: impedit
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 500
        content: |-
          {
              "message": "Server Error"
          }
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          x-ratelimit-limit: '60'
          x-ratelimit-remaining: '36'
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v2/{branch_id}/total/wifi/payment'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Zone Wise Total Wifi Payment'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      branch_id:
        name: branch_id
        description: 'The ID of the branch.'
        required: true
        example: numquam
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      branch_id: numquam
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 500
        content: |-
          {
              "message": "Server Error"
          }
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          x-ratelimit-limit: '60'
          x-ratelimit-remaining: '35'
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v2/shared/geo/division
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '[]'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          x-ratelimit-limit: '60'
          x-ratelimit-remaining: '34'
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v2/shared/geo/district
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '[]'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          x-ratelimit-limit: '60'
          x-ratelimit-remaining: '33'
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v2/shared/geo/upazila
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '[{"name":"not listed","id":1000000}]'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          x-ratelimit-limit: '60'
          x-ratelimit-remaining: '32'
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v2/shared/geo/union_pouroshova
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"results":[{"name":"not listed","id":1000000}],"area_types":["union","pouroshova"]}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          x-ratelimit-limit: '60'
          x-ratelimit-remaining: '31'
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v2/shared/geo/village
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"results":[{"name":"not listed","id":1000000}],"area_types":["village"]}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          x-ratelimit-limit: '60'
          x-ratelimit-remaining: '30'
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v2/shared/geo/total_count
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"division":0,"district":0,"upazila":0,"union_pouroshova":0,"village":0}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          x-ratelimit-limit: '60'
          x-ratelimit-remaining: '29'
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v2/shared/get_area_list/{area_type}/{pid}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      area_type:
        name: area_type
        description: ''
        required: true
        example: repellat
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      pid:
        name: pid
        description: ''
        required: true
        example: excepturi
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      area_type: repellat
      pid: excepturi
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"results":[],"status":"error","error_type":"","message":""}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          x-ratelimit-limit: '60'
          x-ratelimit-remaining: '28'
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v2/shared/geo/all_latitude_longitude
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '[{"lat":23.33755,"lng":88.9439},{"lat":23.65522,"lng":88.97393},{"lat":22.48639,"lng":89.86261},{"lat":23.03757,"lng":89.1444},{"lat":23.17109,"lng":89.08319},{"lat":23.25431,"lng":89.29887},{"lat":22.99024,"lng":88.92667},{"lat":23.04334,"lng":88.89553},{"lat":23.25028,"lng":88.78622},{"lat":23.58849,"lng":89.43078},{"lat":23.70484,"lng":88.68685},{"lat":23.68522,"lng":88.87685},{"lat":23.82513,"lng":88.86181},{"lat":22.65091,"lng":89.78805},{"lat":22.33455,"lng":89.81072},{"lat":22.33711,"lng":89.32136},{"lat":22.8661,"lng":89.5356},{"lat":22.90786,"lng":89.1389},{"lat":23.46804,"lng":89.48479},{"lat":22.88973,"lng":89.39572},{"lat":22.65694,"lng":89.57451},{"lat":22.64753,"lng":89.4235},{"lat":22.44658,"lng":89.8418},{"lat":23.1285,"lng":88.97131},{"lat":22.59018,"lng":89.69613},{"lat":22.34824,"lng":89.20214},{"lat":22.33489,"lng":89.03737},{"lat":22.44757,"lng":89.13118},{"lat":22.70407,"lng":89.07457},{"lat":23.54965,"lng":89.2261},{"lat":23.42401,"lng":88.81103},{"lat":23.4055,"lng":89.57251},{"lat":22.4493,"lng":89.271},{"lat":23.77873,"lng":88.63022},{"lat":23.1354,"lng":89.36954},{"lat":23.40625,"lng":89.3939},{"lat":23.06451,"lng":89.57176},{"lat":23.17884,"lng":89.20932},{"lat":22.96704,"lng":89.75516},{"lat":22.78028,"lng":89.03777},{"lat":22.3066,"lng":89.10623},{"lat":23.19084,"lng":89.61643},{"lat":23.49828,"lng":89.35755},{"lat":23.32338,"lng":88.90987},{"lat":23.38923,"lng":88.94557},{"lat":23.47502,"lng":88.83439},{"lat":22.94362,"lng":89.48496},{"lat":23.89929,"lng":89.14454},{"lat":22.8128,"lng":89.5678},{"lat":22.84009,"lng":89.57954},{"lat":22.74127,"lng":89.63683},{"lat":23.49903,"lng":89.43375},{"lat":23.90412,"lng":89.11937},{"lat":23.63741,"lng":88.83314},{"lat":22.79812,"lng":89.64445},{"lat":23.28353,"lng":89.48023},{"lat":22.54642,"lng":89.76453},{"lat":23.68611,"lng":89.24799},{"lat":22.26643,"lng":89.19475},{"lat":23.30532,"lng":88.77603},{"lat":22.79122,"lng":89.15325},{"lat":23.52698,"lng":88.79583},{"lat":22.36127,"lng":89.10015},{"lat":23.56175,"lng":89.01376},{"lat":23.77025,"lng":88.6356},{"lat":23.17372,"lng":89.50112},{"lat":22.4755,"lng":89.61021},{"lat":22.70936,"lng":89.07174},{"lat":23.54548,"lng":89.17249},{"lat":22.798448,"lng":89.553648},{"lat":24.033239,"lng":88.957028},{"lat":23.8011,"lng":90.355},{"lat":23.74657,"lng":90.4127},{"lat":23.8134,"lng":90.37384},{"lat":22.86415,"lng":89.94376},{"lat":23.90925,"lng":90.3042},{"lat":23.97734,"lng":90.38115},{"lat":23.95449,"lng":90.37477},{"lat":23.7197,"lng":90.41228},{"lat":23.69345,"lng":90.42361},{"lat":23.81201,"lng":90.41271},{"lat":23.81301,"lng":90.41063},{"lat":23.0235,"lng":89.89865},{"lat":23.90198,"lng":90.35734},{"lat":23.76112,"lng":90.43748},{"lat":23.76181,"lng":90.42131},{"lat":23.95113,"lng":90.06955},{"lat":23.96711,"lng":90.38483},{"lat":24.97417,"lng":90.14562},{"lat":23.99341,"lng":90.28585},{"lat":23.62353,"lng":90.49036},{"lat":23.99753,"lng":90.26483},{"lat":23.73423,"lng":90.40918},{"lat":24.46747,"lng":90.86866},{"lat":23.74591,"lng":90.3643},{"lat":23.76001,"lng":90.43748},{"lat":23.99385,"lng":90.38754},{"lat":23.79926,"lng":90.37064},{"lat":23.954,"lng":90.38315},{"lat":23.98837,"lng":90.37935},{"lat":23.7539,"lng":90.3783},{"lat":24.75987,"lng":90.43655},{"lat":23.16035,"lng":90.35606},{"lat":23.71186,"lng":90.39697},{"lat":23.79453,"lng":90.4226},{"lat":23.98318,"lng":90.38386},{"lat":23.98467,"lng":90.36577},{"lat":24.7799,"lng":90.57079},{"lat":23.96081,"lng":90.38381},{"lat":23.59609,"lng":90.45509},{"lat":23.63248,"lng":90.10846},{"lat":23.57317,"lng":90.16086},{"lat":24.0958,"lng":90.118},{"lat":23.62324,"lng":90.21539},{"lat":23.69534,"lng":90.58668},{"lat":23.72763,"lng":90.49754},{"lat":23.92416,"lng":90.38509},{"lat":23.82181,"lng":90.42554},{"lat":23.79003,"lng":90.63631},{"lat":23.54432,"lng":90.55101},{"lat":23.70697,"lng":90.39924},{"lat":24.00548,"lng":90.31094},{"lat":23.71795,"lng":90.48442},{"lat":23.92125,"lng":90.12643},{"lat":23.87481,"lng":90.4221},{"lat":23.50907,"lng":90.53327},{"lat":23.76004,"lng":90.35742},{"lat":23.96635,"lng":90.37595},{"lat":23.70677,"lng":90.46946},{"lat":23.79605,"lng":90.40571},{"lat":24.73388,"lng":89.87726},{"lat":23.86577,"lng":90.385},{"lat":24.89346,"lng":89.75363},{"lat":23.77917,"lng":89.5412},{"lat":23.91209,"lng":90.50708},{"lat":24.63403,"lng":90.19717},{"lat":24.06781,"lng":89.83845},{"lat":23.21775,"lng":89.96407},{"lat":25.31871,"lng":89.7927},{"lat":23.70876,"lng":89.36349},{"lat":24.81542,"lng":90.3961},{"lat":24.10752,"lng":90.36616},{"lat":23.78408,"lng":90.3287},{"lat":23.76461,"lng":89.48768},{"lat":24.688105,"lng":90.653952},{"lat":23.77636,"lng":90.37432},{"lat":23.80971,"lng":90.53217},{"lat":23.78657,"lng":90.42901},{"lat":25.11497,"lng":90.72169},{"lat":24.94514,"lng":89.76557},{"lat":23.92867,"lng":90.72115},{"lat":24.52099,"lng":90.75064},{"lat":23.62505,"lng":90.47205},{"lat":23.62403,"lng":90.13245},{"lat":23.72074,"lng":90.42693},{"lat":23.17175,"lng":90.50569},{"lat":25.21506,"lng":89.75634},{"lat":25.10892,"lng":89.77441},{"lat":25.17779,"lng":89.89736},{"lat":25.16111,"lng":89.98602},{"lat":24.57977,"lng":90.76344},{"lat":23.17645,"lng":90.28864},{"lat":23.945,"lng":90.2918},{"lat":24.73984,"lng":90.52558},{"lat":24.95836,"lng":90.17173},{"lat":25.10523,"lng":90.26171},{"lat":23.34832,"lng":90.29724},{"lat":24.08092,"lng":90.88145},{"lat":23.82998,"lng":90.41701},{"lat":23.70107,"lng":90.39867},{"lat":23.71261,"lng":90.37529},{"lat":23.75071,"lng":90.35855},{"lat":23.67314,"lng":89.5071},{"lat":23.949,"lng":90.39205},{"lat":23.97741,"lng":90.30305},{"lat":23.9159,"lng":90.22606},{"lat":23.79132,"lng":90.36156},{"lat":23.8279,"lng":90.35983},{"lat":23.45577,"lng":90.02089},{"lat":23.4116,"lng":90.17646},{"lat":23.81063,"lng":90.2252},{"lat":23.76697,"lng":90.35289},{"lat":23.85156,"lng":90.01163},{"lat":25.10562,"lng":90.15119},{"lat":23.94278,"lng":90.39217},{"lat":23.78553,"lng":90.40897},{"lat":24.00334,"lng":90.65435},{"lat":23.90107,"lng":90.42125},{"lat":23.96633,"lng":90.20511},{"lat":24.0177,"lng":90.39841},{"lat":23.71701,"lng":90.41995},{"lat":23.77867,"lng":90.3661},{"lat":23.7724,"lng":90.3959},{"lat":23.60448,"lng":90.45664},{"lat":23.85915,"lng":90.4216},{"lat":23.71237,"lng":90.41021},{"lat":23.74619,"lng":90.3938},{"lat":24.01013,"lng":90.07906},{"lat":23.93132,"lng":90.38137},{"lat":23.99267,"lng":90.31503},{"lat":23.73266,"lng":90.41791},{"lat":23.98182,"lng":90.31667},{"lat":23.80517,"lng":90.34874},{"lat":23.74446,"lng":90.43275},{"lat":23.7277,"lng":90.41473},{"lat":23.7451,"lng":90.39733},{"lat":23.77455,"lng":90.40388},{"lat":23.76714,"lng":90.29076},{"lat":23.9861,"lng":90.22503},{"lat":23.71086,"lng":89.51189},{"lat":23.71176,"lng":90.42276},{"lat":24.08032,"lng":90.733},{"lat":23.72185,"lng":90.41339},{"lat":23.74304,"lng":90.41162},{"lat":23.75054,"lng":90.43471},{"lat":23.23306,"lng":90.53187},{"lat":23.79194,"lng":90.43736},{"lat":24.26077,"lng":90.64327},{"lat":24.0059,"lng":90.32688},{"lat":23.7036,"lng":90.63477},{"lat":23.60301,"lng":90.54437},{"lat":23.7537,"lng":90.38529},{"lat":23.63168,"lng":90.30032},{"lat":23.51749,"lng":90.21853},{"lat":22.93954,"lng":89.83632},{"lat":23.1814,"lng":90.38992},{"lat":23.92677,"lng":90.71569},{"lat":23.88543,"lng":90.41033},{"lat":23.88979,"lng":90.4165},{"lat":23.78965,"lng":90.42838},{"lat":23.7059,"lng":90.41817},{"lat":23.93682,"lng":90.68705},{"lat":23.63555,"lng":90.50777},{"lat":23.81668,"lng":90.36668},{"lat":23.8834,"lng":89.91582},{"lat":23.99781,"lng":90.40916},{"lat":23.99386,"lng":90.38206},{"lat":23.70332,"lng":90.40792},{"lat":23.30849,"lng":90.40887},{"lat":23.8687,"lng":90.55272},{"lat":23.71703,"lng":90.42992},{"lat":23.66176,"lng":90.46442},{"lat":23.63789,"lng":90.4759},{"lat":23.8906,"lng":90.4054},{"lat":24.22055,"lng":90.55314},{"lat":23.70852,"lng":90.41254},{"lat":23.71479,"lng":90.39483},{"lat":23.71773,"lng":90.39816},{"lat":23.7152,"lng":90.43681},{"lat":23.65705,"lng":90.19437},{"lat":23.68855,"lng":90.43373},{"lat":23.12734,"lng":90.15871},{"lat":23.97889,"lng":90.26454},{"lat":23.74262,"lng":90.41448},{"lat":22.9955,"lng":89.8168},{"lat":23.07455,"lng":90.24198},{"lat":23.92633,"lng":90.72953},{"lat":23.63513,"lng":90.4853},{"lat":23.832724,"lng":90.461974},{"lat":23.49665,"lng":90.41314},{"lat":24.89889,"lng":90.87955},{"lat":24.66327,"lng":90.84378},{"lat":23.66384,"lng":90.48933},{"lat":23.75223,"lng":90.42763},{"lat":23.81986,"lng":90.3587},{"lat":23.86879,"lng":90.40281},{"lat":23.79416,"lng":90.38721},{"lat":23.87433,"lng":90.40222},{"lat":23.6136,"lng":90.52135},{"lat":23.64303,"lng":90.51378},{"lat":23.75318,"lng":90.37424},{"lat":23.67022,"lng":90.53607},{"lat":23.74572,"lng":90.37396},{"lat":23.62771,"lng":90.50096},{"lat":23.61118,"lng":90.48763},{"lat":23.73967,"lng":90.43743},{"lat":23.66374,"lng":90.51553},{"lat":23.64558,"lng":90.48296},{"lat":23.71431,"lng":90.40822},{"lat":23.71151,"lng":90.40786},{"lat":23.72238,"lng":90.41168},{"lat":23.813314,"lng":90.377523},{"lat":23.77143,"lng":90.42475},{"lat":23.90411,"lng":90.39639},{"lat":23.81705,"lng":90.41824},{"lat":23.34397,"lng":90.16833},{"lat":23.62523,"lng":90.46694},{"lat":23.74327,"lng":90.42044},{"lat":23.75561,"lng":90.36171},{"lat":23.78699,"lng":90.36507},{"lat":24.02022,"lng":90.32447},{"lat":23.73058,"lng":90.43859},{"lat":23.58491,"lng":89.83608},{"lat":23.77753,"lng":90.42911},{"lat":23.82492,"lng":90.3685},{"lat":23.806121,"lng":90.376821},{"lat":23.62012,"lng":90.50435},{"lat":23.60546,"lng":90.49617},{"lat":23.61728,"lng":90.49621},{"lat":23.76027,"lng":90.3842},{"lat":23.81831,"lng":90.42162},{"lat":23.76543,"lng":90.42569},{"lat":23.85217,"lng":90.42752},{"lat":23.74663,"lng":90.39133},{"lat":23.80804,"lng":90.41814},{"lat":23.63756,"lng":90.49102},{"lat":23.79488,"lng":90.40343},{"lat":23.74177,"lng":90.43449},{"lat":23.70989,"lng":90.41802},{"lat":23.78688,"lng":90.34795},{"lat":23.90981,"lng":90.40057},{"lat":23.79725,"lng":90.42455},{"lat":23.82785,"lng":90.37084},{"lat":22.98888,"lng":90.00755},{"lat":23.68226,"lng":89.45024},{"lat":23.29523,"lng":90.43102},{"lat":23.78846,"lng":90.65913},{"lat":23.72723,"lng":89.759},{"lat":24.46747,"lng":90.86866},{"lat":25.12258,"lng":90.36593},{"lat":24.95245,"lng":90.35235},{"lat":23.81712,"lng":90.14597},{"lat":23.58905,"lng":90.5005},{"lat":23.71109,"lng":90.42686},{"lat":23.78864,"lng":90.4317},{"lat":23.71003,"lng":90.44834},{"lat":23.91728,"lng":90.70825},{"lat":23.99553,"lng":90.32121},{"lat":24.04325,"lng":90.41429},{"lat":23.70332,"lng":90.43183},{"lat":23.94596,"lng":90.38269},{"lat":23.6999,"lng":90.42892},{"lat":23.70931,"lng":90.40482},{"lat":23.60965,"lng":90.50277},{"lat":23.72451,"lng":90.42484},{"lat":23.7213,"lng":90.40348},{"lat":23.72127,"lng":90.39292},{"lat":23.73653,"lng":90.36645},{"lat":23.73138,"lng":90.41552},{"lat":23.62719,"lng":90.49614},{"lat":23.65788,"lng":90.56511},{"lat":23.81147,"lng":90.3575},{"lat":23.77222,"lng":90.39034},{"lat":23.72892,"lng":90.42024},{"lat":23.79377,"lng":90.40918},{"lat":23.80192,"lng":90.37809},{"lat":23.79766,"lng":90.3673},{"lat":23.73907,"lng":90.37022},{"lat":23.76119,"lng":90.38808},{"lat":23.73395,"lng":90.37024},{"lat":23.76441,"lng":90.35301},{"lat":23.75643,"lng":90.40532},{"lat":23.7374,"lng":90.41338},{"lat":23.72196,"lng":90.41725},{"lat":23.71659,"lng":90.40852},{"lat":23.70911,"lng":90.4149},{"lat":23.87007,"lng":90.39639},{"lat":23.76872,"lng":90.3641},{"lat":23.79322,"lng":90.36466},{"lat":23.79867,"lng":90.41228},{"lat":23.01097,"lng":89.83086},{"lat":23.77405,"lng":90.36466},{"lat":23.78562,"lng":90.36108},{"lat":23.72756,"lng":90.41125},{"lat":23.79485,"lng":90.41488},{"lat":23.08503,"lng":90.20436},{"lat":23.40235,"lng":90.13611},{"lat":23.986487,"lng":90.432806},{"lat":23.909131,"lng":90.39125},{"lat":23.659372,"lng":90.108814},{"lat":23.65705,"lng":90.19437},{"lat":23.83555,"lng":90.352944},{"lat":23.7372,"lng":90.40722},{"lat":23.788732,"lng":90.383232},{"lat":23.648418,"lng":90.491959},{"lat":23.745631,"lng":90.460307},{"lat":23.692794,"lng":90.465906},{"lat":23.813509,"lng":90.39168},{"lat":23.734158,"lng":90.428664},{"lat":23.733348,"lng":90.38522},{"lat":23.707622,"lng":90.394078},{"lat":23.755842,"lng":90.386733},{"lat":23.70742,"lng":90.41044},{"lat":23.743696,"lng":90.370776},{"lat":22.354549,"lng":91.831147},{"lat":23.08206,"lng":91.95607},{"lat":22.32683,"lng":91.81647},{"lat":22.33223,"lng":91.83272},{"lat":22.39577,"lng":91.8248},{"lat":23.46251,"lng":91.19367},{"lat":23.22711,"lng":90.65994},{"lat":22.35063,"lng":91.79609},{"lat":22.38183,"lng":91.83252},{"lat":22.34425,"lng":91.79455},{"lat":22.36615,"lng":91.86734},{"lat":23.45728,"lng":91.18917},{"lat":23.4554,"lng":91.18253},{"lat":23.4646,"lng":91.20217},{"lat":23.47421,"lng":91.17451},{"lat":22.843017,"lng":91.097361},{"lat":22.06724,"lng":92.10604},{"lat":21.84684,"lng":92.06133},{"lat":21.57886,"lng":92.06533},{"lat":23.89149,"lng":91.13036},{"lat":22.70642,"lng":91.78294},{"lat":22.46564,"lng":92.054048},{"lat":21.0089,"lng":92.25184},{"lat":22.98102,"lng":90.9313},{"lat":24.03693,"lng":91.00995},{"lat":22.6618,"lng":91.09487},{"lat":23.23701,"lng":90.6725},{"lat":23.94907,"lng":91.09981},{"lat":23.74737,"lng":91.14554},{"lat":22.45683,"lng":91.83898},{"lat":22.94185,"lng":90.85516},{"lat":22.23312,"lng":91.87193},{"lat":23.97394,"lng":91.10464},{"lat":22.28556,"lng":91.91766},{"lat":22.57312,"lng":92.04286},{"lat":24.02029,"lng":91.11076},{"lat":23.94941,"lng":91.12727},{"lat":23.72533,"lng":90.80727},{"lat":23.49481,"lng":91.10632},{"lat":22.41345,"lng":91.75247},{"lat":23.2486,"lng":91.2635},{"lat":23.04238,"lng":90.89743},{"lat":22.94737,"lng":90.81334},{"lat":22.27922,"lng":91.78424},{"lat":22.38736,"lng":91.87138},{"lat":23.29636,"lng":90.69095},{"lat":23.58533,"lng":91.1562},{"lat":23.0641,"lng":91.04956},{"lat":22.33475,"lng":91.83598},{"lat":23.20755,"lng":90.85523},{"lat":23.23238,"lng":90.65997},{"lat":23.46428,"lng":91.17011},{"lat":23.46438,"lng":91.18993},{"lat":22.315,"lng":91.80473},{"lat":22.285172,"lng":91.779075},{"lat":22.35838,"lng":91.82195},{"lat":22.35011,"lng":91.82584},{"lat":22.37611,"lng":91.83817},{"lat":22.36199,"lng":91.83481},{"lat":22.32384,"lng":91.82111},{"lat":22.35565,"lng":91.822044},{"lat":22.65969,"lng":92.15958},{"lat":22.1977,"lng":92.21899},{"lat":23.22814,"lng":91.11842},{"lat":23.97221,"lng":91.11204},{"lat":23.11898,"lng":90.69617},{"lat":22.73544,"lng":90.86999},{"lat":23.89694,"lng":91.02648},{"lat":23.72313,"lng":90.84474},{"lat":23.14016,"lng":91.18221},{"lat":22.83871,"lng":91.50365},{"lat":23.06488,"lng":90.65778},{"lat":22.30422,"lng":91.78459},{"lat":22.39156,"lng":91.81651},{"lat":22.37344,"lng":91.82283},{"lat":23.20014,"lng":90.67856},{"lat":23.32808,"lng":90.9124},{"lat":22.35627,"lng":91.91154},{"lat":22.3554,"lng":91.78493},{"lat":22.29977,"lng":92.00632},{"lat":21.07621,"lng":92.22447},{"lat":22.08192,"lng":91.9279},{"lat":23.804198,"lng":90.409284},{"lat":23.724,"lng":90.40514},{"lat":23.68216,"lng":90.42714},{"lat":23.766872,"lng":90.400377},{"lat":23.99892,"lng":90.32182},{"lat":23.769858,"lng":90.410399},{"lat":23.85842,"lng":90.41233},{"lat":23.81015,"lng":90.36758},{"lat":23.74342,"lng":90.42177},{"lat":23.81019,"lng":90.3643},{"lat":23.775,"lng":90.56107},{"lat":23.76019,"lng":90.39693},{"lat":23.7923,"lng":90.4149},{"lat":23.722084,"lng":90.411736},{"lat":23.71907,"lng":90.4116},{"lat":23.7684,"lng":90.3528},{"lat":23.76525,"lng":90.35789},{"lat":23.750647,"lng":90.39216},{"lat":23.71919,"lng":90.41161},{"lat":22.12699,"lng":90.23286},{"lat":22.68601,"lng":90.36546},{"lat":25.043643,"lng":91.39095},{"lat":24.33995,"lng":88.74699},{"lat":25.8554,"lng":89.6721},{"lat":25.81118,"lng":89.63364},{"lat":23.501852,"lng":90.937552},{"lat":23.458029,"lng":90.940155},{"lat":23.46364,"lng":90.96529},{"lat":23.44832,"lng":90.95742},{"lat":23.43884,"lng":90.89816},{"lat":23.44618,"lng":91.0047},{"lat":23.35831,"lng":90.94109},{"lat":23.45132,"lng":91.03341},{"lat":23.4789,"lng":90.89404},{"lat":23.48748,"lng":90.97284},{"lat":23.41388,"lng":90.93131},{"lat":23.57761,"lng":90.87368},{"lat":23.51806,"lng":90.90573},{"lat":24.31922,"lng":88.94103},{"lat":24.33808,"lng":88.98176},{"lat":24.30197,"lng":88.9223},{"lat":24.17389,"lng":88.89522},{"lat":24.316965,"lng":88.928476},{"lat":24.16861,"lng":89.00403},{"lat":24.276513,"lng":89.00991},{"lat":24.259689,"lng":89.0909},{"lat":24.22715,"lng":89.09093},{"lat":24.17747,"lng":88.9606},{"lat":24.80028,"lng":89.04182},{"lat":24.74892281,"lng":89.13649166},{"lat":24.84700013,"lng":88.99074914},{"lat":24.79702916,"lng":89.13416225},{"lat":24.72711311,"lng":89.61741842},{"lat":24.62807755,"lng":89.53000168},{"lat":24.73743281,"lng":89.56594216},{"lat":24.67202,"lng":89.52768},{"lat":24.6989046,"lng":89.51331246},{"lat":24.60704157,"lng":89.5785374},{"lat":24.9226433,"lng":89.15850806},{"lat":24.87276659,"lng":89.18032537},{"lat":23.7032667,"lng":90.4550466},{"lat":24.89532956,"lng":89.11873253},{"lat":24.80114604,"lng":89.4944837},{"lat":24.99018451,"lng":89.42974881},{"lat":24.84190807,"lng":89.52476062},{"lat":24.85561974,"lng":89.44338355},{"lat":24.98406839,"lng":89.40212195},{"lat":24.81676986,"lng":89.47301508},{"lat":24.90238319,"lng":89.45945516},{"lat":24.78141191,"lng":89.4765838},{"lat":24.87921191,"lng":89.48756605},{"lat":24.866762,"lng":89.202461},{"lat":24.79441581,"lng":89.19644546},{"lat":24.75914266,"lng":89.2500828},{"lat":24.82537079,"lng":89.26961517},{"lat":24.89967807,"lng":89.22664005},{"lat":24.79445725,"lng":89.27994661},{"lat":24.85757117,"lng":89.29710863},{"lat":24.71561384,"lng":89.25929515},{"lat":24.68770939,"lng":89.18364123},{"lat":24.65992878,"lng":89.28818177},{"lat":24.64751115,"lng":89.24486602},{"lat":24.73933658,"lng":89.18715119},{"lat":24.72549149,"lng":89.42881921},{"lat":24.74044112,"lng":89.39636419},{"lat":24.80770958,"lng":89.35588236},{"lat":24.771556,"lng":89.397024},{"lat":24.77055,"lng":89.417111},{"lat":24.72662461,"lng":89.32073304},{"lat":24.73639045,"lng":89.33251679},{"lat":24.78131471,"lng":89.41815464},{"lat":24.55510239,"lng":89.43767906},{"lat":24.5894629,"lng":89.3849776},{"lat":24.69907517,"lng":89.41909889},{"lat":24.69848445,"lng":89.44144086},{"lat":24.62639,"lng":89.46128},{"lat":24.67623667,"lng":89.35944241},{"lat":23.68499,"lng":90.35633},{"lat":24.65333774,"lng":89.42382578},{"lat":24.55809255,"lng":89.50159414},{"lat":24.5963705,"lng":89.48686918},{"lat":25.01291614,"lng":89.25783673},{"lat":24.94699612,"lng":89.29788655},{"lat":24.97147049,"lng":89.23992574},{"lat":25.03644112,"lng":89.38794829},{"lat":25.04510892,"lng":89.27392484},{"lat":25.09471593,"lng":89.33140669},{"lat":24.94136584,"lng":89.23342351},{"lat":25.0139084,"lng":89.36850708},{"lat":24.97607664,"lng":89.22150806},{"lat":24.98213074,"lng":89.3365481},{"lat":25.02863,"lng":89.42501},{"lat":25.04985986,"lng":89.32569326},{"lat":25.01071395,"lng":89.5572136},{"lat":23.86661582,"lng":91.20619906},{"lat":23.84144847,"lng":91.14934261},{"lat":23.81994333,"lng":91.19867031},{"lat":23.83288884,"lng":91.19784426},{"lat":23.8675499,"lng":91.20674195},{"lat":23.78000021,"lng":90.77658687},{"lat":23.773328,"lng":90.797697},{"lat":23.8128654,"lng":90.79496919},{"lat":23.79781033,"lng":90.88115187},{"lat":23.74557165,"lng":90.88072222},{"lat":23.74439621,"lng":90.75165638},{"lat":23.83627933,"lng":90.81770312},{"lat":23.93338996,"lng":91.2363389},{"lat":24.07202239,"lng":91.2611312},{"lat":23.96949107,"lng":91.21262314},{"lat":24.03253323,"lng":91.23098733},{"lat":23.916339,"lng":91.214927},{"lat":24.01722327,"lng":91.30143013},{"lat":23.97311598,"lng":91.25857368},{"lat":23.95267274,"lng":91.2042675},{"lat":24.00184855,"lng":91.22801011},{"lat":23.79726349,"lng":91.09925088},{"lat":23.67239562,"lng":91.15499237},{"lat":23.78836546,"lng":91.15187021},{"lat":23.77126713,"lng":91.17747452},{"lat":23.70697528,"lng":91.1254429},{"lat":23.776235,"lng":91.108275},{"lat":23.81097,"lng":91.0881},{"lat":23.782072,"lng":91.070043},{"lat":23.78148,"lng":91.08119},{"lat":23.93880912,"lng":91.00843991},{"lat":23.852749,"lng":90.86423},{"lat":23.903532,"lng":91.036592},{"lat":23.95118,"lng":90.9732},{"lat":23.835375,"lng":91.036683},{"lat":23.83823,"lng":90.98625},{"lat":23.81538,"lng":90.99036},{"lat":23.81168,"lng":91.067373},{"lat":23.849482,"lng":91.076348},{"lat":25.08953039,"lng":88.710966},{"lat":23.811491,"lng":91.002299},{"lat":23.89968,"lng":91.065268},{"lat":23.88852044,"lng":90.97169596},{"lat":23.82292,"lng":90.93668},{"lat":23.778111,"lng":90.918872},{"lat":24.2667976,"lng":90.9934526},{"lat":24.15909386,"lng":91.04454041},{"lat":24.12059021,"lng":91.0851593},{"lat":24.069576,"lng":91.145668},{"lat":24.14348602,"lng":91.06649017},{"lat":24.07587433,"lng":91.11274719},{"lat":24.05159,"lng":91.170302},{"lat":24.067207,"lng":91.183289},{"lat":24.073678,"lng":91.058649},{"lat":24.010159,"lng":91.005112},{"lat":24.0259555,"lng":90.9886032},{"lat":24.0552202,"lng":91.050035},{"lat":23.985676,"lng":90.979317},{"lat":24.019178,"lng":91.036751},{"lat":23.987804,"lng":91.022103},{"lat":23.96082,"lng":91.1115},{"lat":23.08723068,"lng":90.74353027},{"lat":23.11759186,"lng":90.69537354},{"lat":22.91841695,"lng":91.35822775},{"lat":23.1340656,"lng":90.7865176},{"lat":23.201014,"lng":90.739632},{"lat":23.08159637,"lng":90.69985962},{"lat":23.1358223,"lng":90.82752991},{"lat":23.20194435,"lng":90.80029297},{"lat":23.1625892,"lng":90.77293252},{"lat":23.2741044,"lng":90.9647698},{"lat":23.4115396,"lng":90.8564066},{"lat":23.306393,"lng":90.947865},{"lat":23.34529587,"lng":90.89736864},{"lat":23.3160358,"lng":90.850969},{"lat":23.32778358,"lng":90.90910339},{"lat":23.3724,"lng":90.822},{"lat":23.433346,"lng":90.82991},{"lat":23.37835,"lng":90.83212},{"lat":23.435183,"lng":90.844267},{"lat":23.284,"lng":90.7363},{"lat":23.3667,"lng":90.750012},{"lat":23.37146111,"lng":90.77184167},{"lat":23.4151,"lng":90.7736},{"lat":23.3229,"lng":90.7366},{"lat":23.4682,"lng":90.6842},{"lat":25.54168695,"lng":89.27269972},{"lat":23.3707,"lng":90.5809},{"lat":23.350011,"lng":90.6484},{"lat":23.4261,"lng":90.6329},{"lat":23.41260719,"lng":90.72845459},{"lat":23.3513,"lng":90.6203},{"lat":23.4142,"lng":90.6153},{"lat":23.38888741,"lng":90.59832764},{"lat":22.4639,"lng":91.8193},{"lat":23.48563,"lng":90.013088},{"lat":23.19598889,"lng":90.97959167},{"lat":23.1632,"lng":90.929474},{"lat":23.16417222,"lng":91.00560833},{"lat":23.24123764,"lng":90.91641235},{"lat":23.24267578,"lng":90.96104431},{"lat":24.950606,"lng":88.20152},{"lat":24.88233,"lng":88.254691},{"lat":24.94523466,"lng":88.22597052},{"lat":24.833838,"lng":88.220998},{"lat":24.83985,"lng":88.30796},{"lat":24.85877,"lng":88.28442},{"lat":24.834202,"lng":88.288097},{"lat":24.779104,"lng":88.262809},{"lat":24.767463,"lng":88.279602},{"lat":24.876302,"lng":88.451961},{"lat":23.65483665,"lng":90.7312088},{"lat":24.836354,"lng":88.36875},{"lat":24.719797,"lng":88.342818},{"lat":24.77875183,"lng":88.3734318},{"lat":24.745109,"lng":88.452004},{"lat":24.68788,"lng":88.455422},{"lat":24.74034598,"lng":88.10349368},{"lat":24.721616,"lng":88.228558},{"lat":24.81066895,"lng":88.19385529},{"lat":24.691035,"lng":88.122047},{"lat":24.585526,"lng":88.206469},{"lat":24.7268873,"lng":88.1890405},{"lat":24.758746,"lng":88.187804},{"lat":24.6347047,"lng":88.1956528},{"lat":24.65742,"lng":88.12794},{"lat":24.636535,"lng":88.183469},{"lat":24.79483986,"lng":88.13381195},{"lat":24.661098,"lng":88.10762},{"lat":22.22412837,"lng":91.90213046},{"lat":22.22674875,"lng":91.84012828},{"lat":22.18017312,"lng":91.90961199},{"lat":22.19580774,"lng":91.84130065},{"lat":22.19594759,"lng":91.86140839},{"lat":22.160719,"lng":91.8930089},{"lat":22.23459166,"lng":91.88127633},{"lat":22.19151312,"lng":91.93403474},{"lat":22.14461663,"lng":91.87201591},{"lat":22.23740623,"lng":91.92919688},{"lat":22.15991211,"lng":91.84337616},{"lat":22.0689373,"lng":91.8977356},{"lat":22.04806864,"lng":91.93965591},{"lat":21.960741,"lng":91.958169},{"lat":22.0831232,"lng":91.93573993},{"lat":22.0432398,"lng":91.8998972},{"lat":22.36064305,"lng":91.9791409},{"lat":22.38124702,"lng":91.96922727},{"lat":22.42010336,"lng":91.93440705},{"lat":22.40440187,"lng":91.91792521},{"lat":22.37234764,"lng":91.89837987},{"lat":22.39541,"lng":91.94001},{"lat":22.35587,"lng":91.91435},{"lat":22.36218,"lng":91.94703},{"lat":22.40240508,"lng":91.97060377},{"lat":22.159883,"lng":92.007258},{"lat":22.18802452,"lng":91.98027802},{"lat":22.20149,"lng":91.96772},{"lat":22.173772,"lng":92.189497},{"lat":22.16249138,"lng":92.0656661},{"lat":22.94658336,"lng":91.68182814},{"lat":22.62000543,"lng":91.86712913},{"lat":22.75169745,"lng":91.73717512},{"lat":22.86939913,"lng":91.69780973},{"lat":22.654681,"lng":91.7990584},{"lat":25.5642676,"lng":88.53702746},{"lat":22.71755917,"lng":91.74659399},{"lat":21.98521974,"lng":92.08345463},{"lat":22.019171,"lng":92.099469},{"lat":22.327906,"lng":91.797081},{"lat":22.012233,"lng":92.1383974},{"lat":21.972264,"lng":92.068511},{"lat":22.87982178,"lng":91.50358582},{"lat":23.08203909,"lng":90.66108011},{"lat":22.713253,"lng":91.57703},{"lat":22.89676,"lng":91.5365},{"lat":22.82066538,"lng":91.47962308},{"lat":22.27769992,"lng":91.86674648},{"lat":22.30933737,"lng":91.86340144},{"lat":22.12882015,"lng":92.11782867},{"lat":22.45760648,"lng":92.10395981},{"lat":22.53807193,"lng":92.06424386},{"lat":22.50551782,"lng":92.07026362},{"lat":22.58354333,"lng":92.05633467},{"lat":22.42519951,"lng":91.94411469},{"lat":22.14053014,"lng":92.01001024},{"lat":22.12882015,"lng":92.11782867},{"lat":22.14617961,"lng":91.97165439},{"lat":25.5642676,"lng":88.53702746},{"lat":22.09619653,"lng":92.06051007},{"lat":22.5465,"lng":91.6898},{"lat":22.5781092,"lng":91.680868},{"lat":22.549265,"lng":91.689668},{"lat":22.57468109,"lng":91.68072487},{"lat":22.6006,"lng":91.6304},{"lat":22.5781092,"lng":91.680868},{"lat":22.5109247,"lng":91.7117114},{"lat":23.94165,"lng":88.95457},{"lat":22.640797,"lng":91.630782},{"lat":23.99361,"lng":88.81302},{"lat":23.88668,"lng":88.97207},{"lat":23.74534,"lng":88.85811},{"lat":23.72165,"lng":88.95277},{"lat":23.69361,"lng":88.80252},{"lat":23.74668,"lng":88.97037},{"lat":23.55354,"lng":88.79883},{"lat":23.56075,"lng":88.80074},{"lat":23.48062,"lng":88.8965},{"lat":23.40968513,"lng":88.86964417},{"lat":23.343875,"lng":90.981253},{"lat":23.2539,"lng":91.339},{"lat":23.3939,"lng":91.02325},{"lat":23.391643,"lng":90.982325},{"lat":23.403383,"lng":91.03449},{"lat":23.3800068,"lng":91.0249991},{"lat":23.310297,"lng":91.076917},{"lat":23.380793,"lng":90.985847},{"lat":23.43361,"lng":91.036635},{"lat":23.289832,"lng":90.999348},{"lat":23.2546,"lng":91.4445},{"lat":23.58265,"lng":91.157757},{"lat":23.5311373,"lng":91.0608394},{"lat":23.559128,"lng":91.136406},{"lat":23.492075,"lng":91.108445},{"lat":23.481816,"lng":91.058387},{"lat":23.545165,"lng":90.91098348},{"lat":23.559128,"lng":91.136406},{"lat":23.39845381,"lng":90.92745468},{"lat":23.478086,"lng":90.886179},{"lat":23.07294273,"lng":91.33641815},{"lat":23.1976,"lng":91.31409444},{"lat":23.08785629,"lng":91.29638672},{"lat":23.11409378,"lng":91.32614899},{"lat":22.34895706,"lng":90.32848358},{"lat":23.157523,"lng":91.266088},{"lat":23.31007385,"lng":91.22899628},{"lat":23.271996,"lng":91.237824},{"lat":23.335341,"lng":91.268909},{"lat":23.43354187,"lng":91.09473358},{"lat":23.6902497,"lng":91.0344157},{"lat":23.49139,"lng":91.01665},{"lat":23.505223,"lng":90.92132},{"lat":23.57011,"lng":90.97194},{"lat":23.3239,"lng":90.5849},{"lat":23.559372,"lng":91.017205},{"lat":23.60219,"lng":91.02232},{"lat":23.67195,"lng":91.02907},{"lat":23.396404,"lng":90.605095},{"lat":23.5480173,"lng":90.9186365},{"lat":22.07423973,"lng":90.68769836},{"lat":23.617106,"lng":91.009111},{"lat":23.50409,"lng":90.97941},{"lat":23.5952,"lng":90.96889},{"lat":23.68549737,"lng":90.82721283},{"lat":23.66047291,"lng":90.84751323},{"lat":23.723512,"lng":90.853732},{"lat":23.726888,"lng":90.806083},{"lat":23.668639,"lng":90.81611},{"lat":23.71737,"lng":90.797413},{"lat":23.648902,"lng":90.828722},{"lat":23.654097,"lng":90.789632},{"lat":23.665843,"lng":90.801596},{"lat":23.207103,"lng":91.150245},{"lat":23.27877235,"lng":91.10299683},{"lat":23.226338,"lng":91.10823},{"lat":23.24631123,"lng":91.09989265},{"lat":23.22063,"lng":91.14085},{"lat":23.26421165,"lng":91.04834747},{"lat":23.202088,"lng":91.131254},{"lat":23.14916,"lng":91.030897},{"lat":23.076731,"lng":91.107353},{"lat":23.129685,"lng":91.00912},{"lat":23.164583,"lng":91.036167},{"lat":23.198695,"lng":91.032215},{"lat":23.166175,"lng":91.128256},{"lat":23.22063,"lng":91.14085},{"lat":23.187623,"lng":91.066952},{"lat":23.105686,"lng":91.111504},{"lat":23.0933857,"lng":91.06678009},{"lat":23.63648657,"lng":90.70365235},{"lat":25.7453826,"lng":88.98736187},{"lat":23.769226,"lng":90.99102},{"lat":23.75616264,"lng":91.02531433},{"lat":23.413922,"lng":90.583791},{"lat":23.68916321,"lng":90.8903656},{"lat":23.60795784,"lng":90.91312408},{"lat":23.43505,"lng":90.53509},{"lat":23.373947,"lng":90.514364},{"lat":23.363824,"lng":90.542318},{"lat":23.413329,"lng":90.545252},{"lat":23.331432,"lng":90.542517},{"lat":23.425762,"lng":90.59627},{"lat":23.63174,"lng":90.97475},{"lat":23.425527,"lng":90.592395},{"lat":23.383746,"lng":90.562582},{"lat":23.64101028,"lng":90.97214508},{"lat":23.724731,"lng":91.02594},{"lat":23.46056,"lng":90.571877},{"lat":23.404187,"lng":90.58808},{"lat":23.71294975,"lng":90.88839722},{"lat":23.32071304,"lng":90.99626923},{"lat":23.05967712,"lng":91.24201965},{"lat":23.21577835,"lng":91.23845673},{"lat":23.07157135,"lng":91.20881653},{"lat":23.125167,"lng":91.2385784},{"lat":23.1625572,"lng":91.1634262},{"lat":23.10779381,"lng":91.18151855},{"lat":23.14118576,"lng":91.22871399},{"lat":23.191577,"lng":91.187183},{"lat":23.211324,"lng":91.1938185},{"lat":23.19220352,"lng":91.24533081},{"lat":22.1765995,"lng":92.02044678},{"lat":23.623183,"lng":90.807375},{"lat":23.606783,"lng":90.768787},{"lat":23.202088,"lng":91.131254},{"lat":23.618604,"lng":90.849443},{"lat":23.583012,"lng":90.788977},{"lat":23.550881,"lng":90.771688},{"lat":23.578141,"lng":90.833012},{"lat":23.616033,"lng":90.7684964},{"lat":21.76531,"lng":91.97208},{"lat":21.814813,"lng":91.85309439},{"lat":21.73065975,"lng":91.89307275},{"lat":21.58341,"lng":91.92947},{"lat":21.83999814,"lng":91.98255701},{"lat":21.8070231,"lng":91.91663004},{"lat":21.83190158,"lng":91.95771198},{"lat":21.82321,"lng":91.91985},{"lat":21.885735,"lng":91.974993},{"lat":21.77794,"lng":91.94256},{"lat":20.86282254,"lng":92.27559625},{"lat":21.07820186,"lng":92.21730714},{"lat":21.31049412,"lng":92.09742611},{"lat":21.28518756,"lng":92.06089551},{"lat":21.1689444,"lng":92.15369603},{"lat":21.24714794,"lng":92.13588853},{"lat":21.27644054,"lng":92.11523768},{"lat":25.71798984,"lng":88.58568546},{"lat":25.62373147,"lng":88.48654052},{"lat":25.60980943,"lng":88.58758001},{"lat":25.63142009,"lng":88.54913352},{"lat":25.69632249,"lng":88.56408708},{"lat":25.5642676,"lng":88.53702746},{"lat":25.6551292,"lng":88.60081181},{"lat":24.030591,"lng":91.3595},{"lat":25.59933747,"lng":88.53521171},{"lat":25.67311749,"lng":88.48252336},{"lat":25.37334318,"lng":88.88828263},{"lat":25.23243,"lng":89.12049},{"lat":25.3674002,"lng":88.92277312},{"lat":25.33256127,"lng":88.96147855},{"lat":24.64011381,"lng":89.46452272},{"lat":25.36309718,"lng":88.96989726},{"lat":25.39902723,"lng":88.96969137},{"lat":25.90490769,"lng":88.59781692},{"lat":25.92864505,"lng":88.64214357},{"lat":25.91183573,"lng":88.53414183},{"lat":25.93366061,"lng":88.69627531},{"lat":25.8943573,"lng":88.6963996},{"lat":25.63260415,"lng":88.95448375},{"lat":25.83966614,"lng":88.71066135},{"lat":25.94539902,"lng":88.57419382},{"lat":25.99581531,"lng":88.69179327},{"lat":25.98423523,"lng":88.5759363},{"lat":25.86067365,"lng":88.65568785},{"lat":25.70904904,"lng":88.45870351},{"lat":25.83740541,"lng":88.47656838},{"lat":25.79882332,"lng":88.47514868},{"lat":25.82375908,"lng":88.40235261},{"lat":25.75988445,"lng":88.41940342},{"lat":25.62301,"lng":88.701005},{"lat":25.77402968,"lng":88.7945769},{"lat":25.62239542,"lng":88.79057705},{"lat":25.64674668,"lng":88.7437431},{"lat":25.59167697,"lng":88.75464168},{"lat":25.76801444,"lng":88.81788686},{"lat":25.696326,"lng":88.814744},{"lat":25.77938538,"lng":88.78729215},{"lat":25.54192,"lng":88.780432},{"lat":25.70836961,"lng":88.77249974},{"lat":25.742187,"lng":88.794254},{"lat":24.65261323,"lng":88.66219149},{"lat":25.320299,"lng":89.193513},{"lat":25.25164346,"lng":89.23946613},{"lat":25.28720193,"lng":89.17487308},{"lat":25.29616642,"lng":89.22240456},{"lat":25.27341263,"lng":89.10094249},{"lat":25.31766702,"lng":89.03495454},{"lat":25.33856289,"lng":89.00195873},{"lat":25.85696892,"lng":88.51819676},{"lat":25.36309718,"lng":88.96989726},{"lat":25.76702848,"lng":88.6342397},{"lat":24.81237755,"lng":88.48757766},{"lat":25.79135368,"lng":88.6774453},{"lat":25.76002098,"lng":88.56913865},{"lat":25.92584701,"lng":88.7284016},{"lat":25.86626457,"lng":88.78270785},{"lat":25.805112,"lng":88.752707},{"lat":25.91299125,"lng":88.76496361},{"lat":25.825902,"lng":88.786933},{"lat":25.84843656,"lng":88.75197258},{"lat":25.32779658,"lng":89.1399352},{"lat":25.4407739,"lng":89.10048691},{"lat":25.39597,"lng":89.11722},{"lat":25.511482,"lng":89.04183},{"lat":25.516003,"lng":89.00819},{"lat":25.512588,"lng":89.043058},{"lat":25.373998,"lng":89.171828},{"lat":25.321528,"lng":89.072558},{"lat":25.358468,"lng":89.070748},{"lat":25.73919891,"lng":88.89036226},{"lat":25.625427,"lng":88.893632},{"lat":25.57760391,"lng":88.91158395},{"lat":25.57740072,"lng":88.99002141},{"lat":25.55450846,"lng":89.05314746},{"lat":25.66819954,"lng":88.85764078},{"lat":25.62983873,"lng":88.83494102},{"lat":25.57236179,"lng":88.8409656},{"lat":25.63260415,"lng":88.95448375},{"lat":25.67184229,"lng":88.93260239},{"lat":22.93999,"lng":91.51599666},{"lat":23.080057,"lng":91.5015424},{"lat":23.021114,"lng":91.273607},{"lat":23.11297,"lng":91.313627},{"lat":22.573545,"lng":91.314781},{"lat":22.936764,"lng":91.304474},{"lat":22.582767,"lng":91.203981},{"lat":22.9479,"lng":91.32998},{"lat":22.575753,"lng":91.18127},{"lat":22.80851364,"lng":90.63747406},{"lat":22.5559,"lng":91.16598},{"lat":23.15402,"lng":91.164595},{"lat":23.65718,"lng":91.295886},{"lat":23.62959,"lng":91.255622},{"lat":23.0643,"lng":91.2526},{"lat":23.42878,"lng":91.271151},{"lat":23.0714,"lng":91.2555},{"lat":23.93387,"lng":91.281152},{"lat":23.112853,"lng":91.253434},{"lat":23.141417,"lng":91.24526},{"lat":22.5501,"lng":91.2728},{"lat":22.920098,"lng":91.36148},{"lat":22.475682,"lng":91.2435},{"lat":22.50404,"lng":91.211144},{"lat":22.936037,"lng":91.375662},{"lat":22.5415,"lng":91.241491},{"lat":22.532579,"lng":91.23513},{"lat":22.5514,"lng":91.2724},{"lat":22.505635,"lng":91.233396},{"lat":25.273509,"lng":89.577957},{"lat":25.273905,"lng":89.603921},{"lat":25.363728,"lng":89.591302},{"lat":23.86764717,"lng":91.03878021},{"lat":25.19766045,"lng":89.40919495},{"lat":24.3390991,"lng":90.79881396},{"lat":24.71561384,"lng":89.25929515},{"lat":25.4432,"lng":89.457382},{"lat":25.359148,"lng":89.363243},{"lat":25.383092,"lng":89.388993},{"lat":25.438457,"lng":89.494652},{"lat":25.330331,"lng":89.423045},{"lat":23.44684219,"lng":89.17478943},{"lat":25.447322,"lng":89.420441},{"lat":25.188373,"lng":89.579431},{"lat":25.163141,"lng":89.525089},{"lat":25.10140591,"lng":89.57164062},{"lat":25.056565,"lng":89.562439},{"lat":25.11547,"lng":89.51722},{"lat":25.084321,"lng":89.522002},{"lat":25.192043,"lng":89.539299},{"lat":25.153108,"lng":89.57914},{"lat":25.572618,"lng":89.430095},{"lat":25.536029,"lng":89.555662},{"lat":25.500571,"lng":89.596658},{"lat":25.49497,"lng":89.552605},{"lat":25.56811155,"lng":89.52300348},{"lat":25.463565,"lng":89.510377},{"lat":25.519368,"lng":89.599381},{"lat":25.307106,"lng":89.598833},{"lat":25.46141,"lng":89.63785},{"lat":25.51377,"lng":89.517096},{"lat":25.516073,"lng":89.468846},{"lat":25.498897,"lng":89.575469},{"lat":25.54678535,"lng":89.48979187},{"lat":25.461576,"lng":89.584136},{"lat":25.59144783,"lng":89.52182007},{"lat":25.308358,"lng":89.46325},{"lat":25.254348,"lng":89.32798},{"lat":24.50343794,"lng":91.29152262},{"lat":24.3443976,"lng":91.53932337},{"lat":24.31533003,"lng":91.55370354},{"lat":24.325467,"lng":91.4858},{"lat":24.29857325,"lng":91.51469293},{"lat":24.4056767,"lng":91.56484},{"lat":24.36233217,"lng":91.54198198},{"lat":24.41858094,"lng":91.53592049},{"lat":24.51990608,"lng":91.48065126},{"lat":24.2540105,"lng":91.48205637},{"lat":24.304716,"lng":91.387313},{"lat":24.3119001,"lng":91.30411074},{"lat":24.31213428,"lng":91.31861317},{"lat":24.28526,"lng":91.20705},{"lat":24.23743653,"lng":91.24233979},{"lat":24.25961,"lng":91.2737},{"lat":24.09087011,"lng":91.29366452},{"lat":24.12838712,"lng":91.31992385},{"lat":24.24656739,"lng":91.36073031},{"lat":24.06786677,"lng":91.34550857},{"lat":24.3119001,"lng":91.30411074},{"lat":24.20164309,"lng":91.31756451},{"lat":24.030591,"lng":91.3595},{"lat":23.9991624,"lng":91.35493584},{"lat":24.15824177,"lng":91.35252556},{"lat":24.49727932,"lng":88.76265093},{"lat":24.12945982,"lng":91.36588587},{"lat":24.61190408,"lng":91.62912678},{"lat":24.55699796,"lng":91.54121119},{"lat":24.57477,"lng":91.6029},{"lat":24.63440583,"lng":91.61417061},{"lat":24.50956786,"lng":91.59655311},{"lat":24.64777948,"lng":91.57929343},{"lat":24.48916971,"lng":91.47387175},{"lat":24.59752,"lng":91.49926},{"lat":24.5749758,"lng":91.55739032},{"lat":24.46895932,"lng":91.57492866},{"lat":24.6524,"lng":91.4444797},{"lat":24.66105,"lng":91.53681},{"lat":22.6145169,"lng":90.1985961},{"lat":22.35384,"lng":90.08021},{"lat":23.5380858,"lng":90.2819025},{"lat":22.428261,"lng":90.0683298},{"lat":22.42653595,"lng":90.10464905},{"lat":22.37475777,"lng":90.04719543},{"lat":22.42779922,"lng":90.13593292},{"lat":22.65381847,"lng":90.24642941},{"lat":22.63593102,"lng":90.35398102},{"lat":22.523297,"lng":90.17961},{"lat":22.52013016,"lng":90.1088562},{"lat":22.56729205,"lng":90.16930105},{"lat":22.549588,"lng":90.127364},{"lat":22.56242561,"lng":90.08132172},{"lat":22.59223545,"lng":90.12614965},{"lat":23.723499,"lng":89.075389},{"lat":23.59593,"lng":89.14535},{"lat":23.61674,"lng":89.02145},{"lat":23.72165,"lng":88.95277},{"lat":23.59945,"lng":89.08647},{"lat":23.63959,"lng":89.07466},{"lat":23.65056,"lng":89.12608},{"lat":23.70265,"lng":89.0465},{"lat":23.305939,"lng":89.15935},{"lat":23.408819,"lng":89.21775},{"lat":23.32293435,"lng":89.10021687},{"lat":23.39805,"lng":89.215861},{"lat":23.336103,"lng":89.208439},{"lat":23.383839,"lng":89.159561},{"lat":23.345339,"lng":89.101961},{"lat":23.381311,"lng":89.157331},{"lat":23.393881,"lng":89.113361},{"lat":23.447269,"lng":89.120811},{"lat":23.3782,"lng":89.07489},{"lat":23.431622,"lng":88.989539},{"lat":23.487864,"lng":88.987992},{"lat":23.40185,"lng":89.046928},{"lat":23.461061,"lng":89.01265},{"lat":23.459152,"lng":88.958672},{"lat":23.360642,"lng":89.002936},{"lat":23.281639,"lng":88.817811},{"lat":23.387369,"lng":88.893869},{"lat":23.251789,"lng":88.879319},{"lat":23.247369,"lng":88.817811},{"lat":23.32065,"lng":88.944181},{"lat":23.32477,"lng":88.87987},{"lat":23.294219,"lng":88.753061},{"lat":23.366211,"lng":88.85425},{"lat":23.387181,"lng":88.944139},{"lat":23.346631,"lng":88.7864},{"lat":23.371,"lng":88.8047},{"lat":23.61385,"lng":89.32815},{"lat":23.625408,"lng":89.303286},{"lat":23.660036,"lng":89.335764},{"lat":23.685981,"lng":89.194639},{"lat":23.64639,"lng":89.22223},{"lat":23.680647,"lng":89.247036},{"lat":23.687467,"lng":89.295847},{"lat":23.737461,"lng":89.205781},{"lat":23.679581,"lng":89.255097},{"lat":23.67915,"lng":89.156014},{"lat":23.608294,"lng":89.243194},{"lat":23.741661,"lng":89.2544},{"lat":23.7039,"lng":89.157269},{"lat":23.659528,"lng":89.250192},{"lat":24.9663022,"lng":89.0828542},{"lat":24.90664961,"lng":89.08581592},{"lat":25.02768046,"lng":89.02448209},{"lat":24.92135036,"lng":89.02127139},{"lat":24.87796869,"lng":89.00471489},{"lat":24.96820064,"lng":89.15642527},{"lat":25.08445549,"lng":89.14042664},{"lat":25.03455925,"lng":89.1252594},{"lat":24.99529003,"lng":89.08523637},{"lat":25.196733,"lng":89.168765},{"lat":25.20099449,"lng":89.0657959},{"lat":25.15258,"lng":88.967976},{"lat":25.23583221,"lng":89.01378632},{"lat":25.18471718,"lng":89.02175903},{"lat":25.22314644,"lng":88.97769165},{"lat":25.180315,"lng":89.075642},{"lat":25.2247715,"lng":89.14356995},{"lat":25.06033953,"lng":89.16486528},{"lat":25.13169169,"lng":89.19373415},{"lat":25.04524653,"lng":89.21823268},{"lat":25.10694299,"lng":89.23162104},{"lat":25.0087934,"lng":89.17987864},{"lat":22.84518739,"lng":91.83566748},{"lat":24.233365,"lng":90.92091},{"lat":24.41909,"lng":90.65232},{"lat":24.4598623,"lng":90.70488575},{"lat":24.4771899,"lng":90.59398778},{"lat":24.123122,"lng":90.914416},{"lat":24.44379094,"lng":90.88997681},{"lat":24.50107453,"lng":90.85057047},{"lat":24.40922167,"lng":90.91237443},{"lat":24.44717541,"lng":90.85049413},{"lat":24.2843231,"lng":90.77795463},{"lat":24.38856,"lng":90.79848},{"lat":24.28977,"lng":90.84808},{"lat":24.22189486,"lng":90.80639537},{"lat":24.41414945,"lng":90.83616618},{"lat":24.12291,"lng":90.914321},{"lat":24.11273,"lng":90.8647},{"lat":24.17026,"lng":90.84024},{"lat":24.301442,"lng":90.905267},{"lat":24.24988086,"lng":90.70144133},{"lat":24.36372921,"lng":90.71285528},{"lat":24.2535748,"lng":90.6839677},{"lat":24.31364,"lng":90.70217},{"lat":24.53815416,"lng":90.9177934},{"lat":24.58657374,"lng":90.9099272},{"lat":24.5492702,"lng":90.8918925},{"lat":24.57490244,"lng":90.92032482},{"lat":24.58772087,"lng":90.860466},{"lat":24.51853512,"lng":90.82875172},{"lat":23.99141,"lng":88.77998},{"lat":23.95265,"lng":88.87794},{"lat":23.953099,"lng":88.81281},{"lat":24.012499,"lng":88.845937},{"lat":24.031249,"lng":88.9064},{"lat":23.88955116,"lng":88.87943268},{"lat":24.040779,"lng":88.859749},{"lat":24.031289,"lng":88.80869},{"lat":24.00101,"lng":88.94328},{"lat":24.07463,"lng":88.83674},{"lat":24.005509,"lng":88.765569},{"lat":24.003718,"lng":88.894519},{"lat":23.78374,"lng":89.28033},{"lat":23.8197,"lng":89.16426},{"lat":23.243102,"lng":90.681999},{"lat":23.85651779,"lng":89.17735291},{"lat":23.83458,"lng":89.22661},{"lat":23.87855,"lng":89.27122},{"lat":23.92178,"lng":89.16173},{"lat":23.87245,"lng":89.21508},{"lat":23.77114,"lng":89.21022},{"lat":23.851427,"lng":89.264495},{"lat":23.95971,"lng":89.21827},{"lat":23.914833,"lng":89.229782},{"lat":23.87992,"lng":89.09175},{"lat":23.80588,"lng":88.97912},{"lat":23.90419,"lng":88.92898},{"lat":23.98104,"lng":89.01725},{"lat":23.928624,"lng":89.046691},{"lat":23.88668633,"lng":89.00024414},{"lat":23.867314,"lng":89.035715},{"lat":23.828051,"lng":88.954309},{"lat":23.83973694,"lng":88.90788269},{"lat":23.86681,"lng":89.03105},{"lat":23.90163,"lng":88.91387},{"lat":23.95883,"lng":89.07494},{"lat":24.189169,"lng":90.309166},{"lat":22.726587,"lng":90.858517},{"lat":22.751468,"lng":90.903695},{"lat":22.79486,"lng":90.80804},{"lat":22.816744,"lng":90.853497},{"lat":22.795002,"lng":90.832779},{"lat":22.735445,"lng":90.869933},{"lat":22.876204,"lng":90.785998},{"lat":22.891969,"lng":90.889455},{"lat":23.115468,"lng":90.884377},{"lat":23.106004,"lng":90.908823},{"lat":23.071726,"lng":90.813364},{"lat":23.109099,"lng":90.831406},{"lat":23.115773,"lng":90.884891},{"lat":23.074962,"lng":90.84713},{"lat":23.134565,"lng":90.887975},{"lat":22.58549118,"lng":90.99676514},{"lat":23.019982,"lng":90.782552},{"lat":23.00658226,"lng":90.75196075},{"lat":23.057986,"lng":90.768035},{"lat":23.050746,"lng":90.803655},{"lat":23.017884,"lng":90.681997},{"lat":22.981594,"lng":90.701323},{"lat":23.009476,"lng":90.762782},{"lat":23.010338,"lng":90.749845},{"lat":22.948831,"lng":90.725063},{"lat":23.11149,"lng":90.26401},{"lat":23.1195488,"lng":90.18688202},{"lat":23.1018486,"lng":90.3351593},{"lat":23.04426193,"lng":90.2695694},{"lat":23.09450083,"lng":90.14706661},{"lat":23.09120941,"lng":90.28224945},{"lat":23.0842806,"lng":90.20388838},{"lat":23.00166702,"lng":90.28955078},{"lat":23.09389687,"lng":90.17515564},{"lat":23.13150406,"lng":90.29963684},{"lat":23.08494178,"lng":90.1287479},{"lat":22.99790246,"lng":90.23151013},{"lat":23.01831,"lng":90.28773},{"lat":23.0582843,"lng":90.28281685},{"lat":23.17467035,"lng":90.04938484},{"lat":23.21001269,"lng":90.0520466},{"lat":23.17579149,"lng":90.08285612},{"lat":23.2603743,"lng":90.06167829},{"lat":25.25434753,"lng":89.32797964},{"lat":23.23675409,"lng":90.08770447},{"lat":23.28266903,"lng":90.08219079},{"lat":23.22073699,"lng":90.00689903},{"lat":23.2980467,"lng":90.02530686},{"lat":23.209731,"lng":90.049266},{"lat":23.4552345,"lng":90.12647154},{"lat":23.27964783,"lng":90.17531586},{"lat":23.29892258,"lng":90.14074122},{"lat":23.31411591,"lng":90.15148861},{"lat":23.322592,"lng":90.22907332},{"lat":23.28911781,"lng":90.20912933},{"lat":22.97738457,"lng":90.93038177},{"lat":23.35078049,"lng":90.18508911},{"lat":24.98984178,"lng":88.9864816},{"lat":25.03419564,"lng":88.97117432},{"lat":24.83903022,"lng":88.91025407},{"lat":24.89185028,"lng":88.70379024},{"lat":24.90190672,"lng":88.85100283},{"lat":24.9808773,"lng":88.76825238},{"lat":23.41529465,"lng":90.11759949},{"lat":24.92580936,"lng":88.71210494},{"lat":24.91676216,"lng":88.75059654},{"lat":24.97910755,"lng":88.84022974},{"lat":24.61086467,"lng":88.96372565},{"lat":24.97110509,"lng":88.93250026},{"lat":24.91823928,"lng":88.91043254},{"lat":24.93234231,"lng":88.972118},{"lat":24.96795045,"lng":88.96459503},{"lat":24.031289,"lng":88.80869},{"lat":24.98984178,"lng":88.9864816},{"lat":25.03419564,"lng":88.97117432},{"lat":25.17840234,"lng":88.70480023},{"lat":24.83903022,"lng":88.91025407},{"lat":24.89185028,"lng":88.70379024},{"lat":24.90190672,"lng":88.85100283},{"lat":24.9808773,"lng":88.76825238},{"lat":24.95022392,"lng":88.72779846},{"lat":24.92580936,"lng":88.71210494},{"lat":24.91676216,"lng":88.75059654},{"lat":24.97910755,"lng":88.84022974},{"lat":24.85227893,"lng":88.74093317},{"lat":24.87329483,"lng":88.79438782},{"lat":24.84478266,"lng":88.69563268},{"lat":24.70474953,"lng":88.64972587},{"lat":23.93338996,"lng":91.2363389},{"lat":24.79711133,"lng":88.72442182},{"lat":22.34895706,"lng":90.32848358},{"lat":24.7412,"lng":88.78515},{"lat":24.71704,"lng":88.80156},{"lat":24.74884476,"lng":88.68437255},{"lat":24.844761,"lng":88.68455},{"lat":24.71704,"lng":88.80156},{"lat":24.71927408,"lng":88.74383054},{"lat":24.80618346,"lng":88.66944138},{"lat":24.7632,"lng":88.74429},{"lat":24.65261323,"lng":88.66219149},{"lat":23.757587,"lng":88.87990688},{"lat":24.74295,"lng":88.561965},{"lat":24.86738537,"lng":88.62700218},{"lat":24.90829648,"lng":88.62479072},{"lat":24.90305632,"lng":88.54899516},{"lat":24.83008821,"lng":88.57097564},{"lat":24.77950624,"lng":89.05766212},{"lat":25.82082978,"lng":88.56683312},{"lat":24.79822296,"lng":88.56559905},{"lat":25.08326605,"lng":88.68103436},{"lat":24.83008821,"lng":88.57097564},{"lat":25.09389687,"lng":88.63385773},{"lat":25.02766228,"lng":88.82090759},{"lat":25.08953039,"lng":88.71096068},{"lat":25.04795493,"lng":88.75414525},{"lat":25.16787136,"lng":88.61625718},{"lat":25.0819947,"lng":88.7936197},{"lat":25.06155452,"lng":88.73278914},{"lat":25.15748594,"lng":88.67192363},{"lat":25.13729019,"lng":88.47013249},{"lat":24.95464497,"lng":88.54758822},{"lat":25.02474662,"lng":88.61281091},{"lat":25.02437071,"lng":88.45292397},{"lat":25.7730617,"lng":88.74677775},{"lat":24.68817354,"lng":89.01464076},{"lat":24.70679441,"lng":89.10182166},{"lat":24.6941994,"lng":88.9255835},{"lat":24.7191,"lng":89.05808},{"lat":24.72922021,"lng":88.93898377},{"lat":24.77950624,"lng":89.05766212},{"lat":24.74029615,"lng":88.96713625},{"lat":25.1742842,"lng":88.48825362},{"lat":25.09205706,"lng":88.50651067},{"lat":25.13729019,"lng":88.47013249},{"lat":25.12453803,"lng":88.59177635},{"lat":25.14556979,"lng":88.55988061},{"lat":25.04003311,"lng":88.59954351},{"lat":23.05081543,"lng":89.59730229},{"lat":24.52707672,"lng":91.10037994},{"lat":23.21707077,"lng":89.658858},{"lat":23.19388301,"lng":89.61546306},{"lat":23.13469368,"lng":89.67196718},{"lat":23.30824,"lng":89.59365},{"lat":23.18016497,"lng":89.64615776},{"lat":23.17943357,"lng":89.64548555},{"lat":23.16507417,"lng":89.65351811},{"lat":23.24028111,"lng":89.53571328},{"lat":23.250452,"lng":89.612085},{"lat":23.272748,"lng":89.620627},{"lat":24.31989,"lng":89.174041},{"lat":25.5005708,"lng":89.59665847},{"lat":24.165962,"lng":89.1459},{"lat":24.26435089,"lng":89.23092651},{"lat":24.30609,"lng":89.11129},{"lat":24.22657,"lng":89.12276},{"lat":24.44191,"lng":89.3150978},{"lat":24.36354,"lng":89.13437},{"lat":24.34663,"lng":89.23224},{"lat":23.74668,"lng":88.97037},{"lat":24.343106,"lng":89.301826},{"lat":24.39674,"lng":89.67111},{"lat":24.23272,"lng":88.940267},{"lat":24.17575,"lng":89.046591},{"lat":24.17919,"lng":88.95276},{"lat":24.12009,"lng":89.0427},{"lat":24.249715,"lng":89.038502},{"lat":22.942753,"lng":90.999733},{"lat":22.942927,"lng":90.999958},{"lat":22.93147,"lng":91.096811},{"lat":22.897679,"lng":91.01495},{"lat":22.960259,"lng":91.141882},{"lat":22.909915,"lng":91.113611},{"lat":22.926267,"lng":91.150188},{"lat":22.926,"lng":91.051569},{"lat":22.90776,"lng":91.166231},{"lat":22.963685,"lng":91.172397},{"lat":22.926267,"lng":91.150188},{"lat":22.886535,"lng":91.166419},{"lat":22.887551,"lng":91.057659},{"lat":22.951782,"lng":91.183042},{"lat":22.89826,"lng":91.144775},{"lat":23.084121,"lng":90.964861},{"lat":23.0503,"lng":90.952055},{"lat":23.012655,"lng":90.971153},{"lat":22.941611,"lng":91.250263},{"lat":23.029974,"lng":90.973914},{"lat":23.059804,"lng":90.993871},{"lat":23.066826,"lng":90.933561},{"lat":22.981635,"lng":90.98708},{"lat":23.050034,"lng":90.916441},{"lat":22.741571,"lng":91.249108},{"lat":22.817318,"lng":91.243639},{"lat":22.869035,"lng":91.307549},{"lat":22.834325,"lng":91.278151},{"lat":22.78618,"lng":91.24796},{"lat":22.824115,"lng":91.305788},{"lat":22.821897,"lng":91.291749},{"lat":22.87174,"lng":91.27229},{"lat":22.15941811,"lng":90.1259613},{"lat":22.86718,"lng":91.216896},{"lat":22.767157,"lng":91.209567},{"lat":22.8514011,"lng":91.0841457},{"lat":22.81584549,"lng":91.19794464},{"lat":22.97114,"lng":91.113054},{"lat":22.816349,"lng":91.177992},{"lat":23.00618,"lng":91.198766},{"lat":22.929614,"lng":91.240486},{"lat":23.03733,"lng":91.150281},{"lat":23.042202,"lng":91.237537},{"lat":22.979365,"lng":91.902666},{"lat":23.000054,"lng":91.248808},{"lat":23.03922,"lng":91.187562},{"lat":22.954935,"lng":91.23429},{"lat":22.63174,"lng":90.97475},{"lat":22.998163,"lng":91.181773},{"lat":23.003214,"lng":91.038117},{"lat":23.025221,"lng":91.123288},{"lat":22.991091,"lng":91.100186},{"lat":23.068338,"lng":91.108128},{"lat":23.0204,"lng":91.028546},{"lat":23.0653916,"lng":91.01066672},{"lat":23.06745,"lng":91.076104},{"lat":22.972687,"lng":91.128746},{"lat":22.45331764,"lng":90.84326172},{"lat":22.633385,"lng":91.133379},{"lat":23.097868,"lng":90.987388},{"lat":22.59738,"lng":91.143248},{"lat":22.647853,"lng":91.181374},{"lat":22.63647,"lng":91.097517},{"lat":22.689408,"lng":91.087271},{"lat":22.659719,"lng":91.092624},{"lat":24.12702998,"lng":89.23335704},{"lat":24.098311,"lng":89.26557983},{"lat":24.0693014,"lng":89.33699},{"lat":24.05915155,"lng":89.37318172},{"lat":24.1504208,"lng":89.18261995},{"lat":24.03323221,"lng":89.61206977},{"lat":24.28361,"lng":89.40836},{"lat":24.21759871,"lng":89.3809194},{"lat":24.24212154,"lng":89.45341166},{"lat":24.28646652,"lng":89.4070255},{"lat":24.18338806,"lng":89.38883014},{"lat":24.226836,"lng":89.302409},{"lat":24.32132,"lng":89.312432},{"lat":24.15887699,"lng":89.44763264},{"lat":24.192542,"lng":89.448305},{"lat":24.14269932,"lng":89.49773364},{"lat":24.17594878,"lng":89.41200984},{"lat":24.12272309,"lng":89.36335359},{"lat":24.18122311,"lng":89.47935363},{"lat":24.05655727,"lng":89.45200907},{"lat":24.07461388,"lng":89.52573153},{"lat":24.101491,"lng":89.47756},{"lat":24.0180315,"lng":89.5296089},{"lat":24.035211,"lng":89.5969},{"lat":23.99737641,"lng":89.47544842},{"lat":24.09181446,"lng":89.56491231},{"lat":24.05037,"lng":89.48738},{"lat":23.953438,"lng":89.547558},{"lat":23.86799,"lng":89.48056},{"lat":23.95550496,"lng":89.52114177},{"lat":23.86188858,"lng":89.5414141},{"lat":23.869538,"lng":89.481132},{"lat":23.89472211,"lng":89.57437428},{"lat":23.85549291,"lng":89.60126621},{"lat":25.960904,"lng":89.68895886},{"lat":22.3451,"lng":90.45903},{"lat":22.6820222,"lng":90.7027917},{"lat":26.2639979,"lng":88.39251655},{"lat":26.25712,"lng":88.71061},{"lat":26.28392694,"lng":88.58637465},{"lat":26.19330025,"lng":88.56002045},{"lat":26.18247838,"lng":88.58876878},{"lat":26.24292789,"lng":88.51679566},{"lat":26.259527,"lng":88.657487},{"lat":26.255928,"lng":88.55856},{"lat":26.21829224,"lng":88.68249512},{"lat":26.11999177,"lng":88.62984311},{"lat":26.18082719,"lng":88.6313737},{"lat":26.08373012,"lng":88.69262541},{"lat":26.11836857,"lng":88.75618737},{"lat":26.03357,"lng":88.6937},{"lat":26.05236,"lng":88.7409},{"lat":26.12776,"lng":88.70023},{"lat":26.22499,"lng":88.677507},{"lat":26.05462384,"lng":88.68914695},{"lat":25.72039604,"lng":89.68595886},{"lat":26.51204491,"lng":88.40507507},{"lat":26.553231,"lng":88.398387},{"lat":22.36262,"lng":90.45883},{"lat":22.42720222,"lng":90.46427917},{"lat":22.25972,"lng":90.50861},{"lat":22.289118,"lng":90.56148},{"lat":22.320517,"lng":90.588653},{"lat":22.334942,"lng":90.514689},{"lat":22.285489,"lng":90.561068},{"lat":22.19838,"lng":90.47731},{"lat":22.19838,"lng":90.47731},{"lat":22.454678,"lng":90.341475},{"lat":22.24167,"lng":90.39546},{"lat":21.947523,"lng":90.17677},{"lat":21.98869,"lng":90.26413},{"lat":24.25413704,"lng":88.82045746},{"lat":24.25255,"lng":88.77662},{"lat":24.31000137,"lng":88.80323029},{"lat":24.3368124,"lng":88.7735834},{"lat":24.29382896,"lng":88.73942566},{"lat":24.34088,"lng":88.70084},{"lat":24.47352256,"lng":88.72038067},{"lat":24.44838723,"lng":88.8108435},{"lat":24.42107043,"lng":88.71978532},{"lat":24.48745955,"lng":88.68332519},{"lat":24.48944,"lng":88.80386},{"lat":24.44449178,"lng":88.76184708},{"lat":24.49639,"lng":88.76264},{"lat":24.53215,"lng":88.31471},{"lat":24.4076,"lng":88.48946},{"lat":24.50314,"lng":88.41007},{"lat":24.45201772,"lng":88.41516969},{"lat":24.45201772,"lng":88.41516969},{"lat":24.50333,"lng":88.41014},{"lat":24.53700066,"lng":88.48488617},{"lat":24.50165558,"lng":88.50258636},{"lat":24.54561681,"lng":88.602951},{"lat":24.5448084,"lng":88.6070179},{"lat":24.5910116,"lng":88.6321555},{"lat":24.54938316,"lng":88.68203735},{"lat":24.49104,"lng":88.61197},{"lat":24.595172,"lng":88.655352},{"lat":24.48139,"lng":88.64727},{"lat":24.41944,"lng":88.53182},{"lat":24.47205353,"lng":88.53088379},{"lat":24.40649,"lng":88.56564},{"lat":24.35939217,"lng":88.67858124},{"lat":24.11281204,"lng":91.26200867},{"lat":24.4367466,"lng":88.56240082},{"lat":24.420376,"lng":88.662129},{"lat":24.60733,"lng":88.47263},{"lat":24.51854109,"lng":88.56027984},{"lat":22.36338997,"lng":90.74607086},{"lat":24.90178299,"lng":90.50068665},{"lat":24.60401,"lng":88.49412},{"lat":24.5449518,"lng":88.54690155},{"lat":24.61048182,"lng":88.56964739},{"lat":23.06178312,"lng":92.24090088},{"lat":23.14308,"lng":92.22227},{"lat":22.49072,"lng":92.13373},{"lat":22.54448,"lng":91.99832},{"lat":22.3758,"lng":92.15291},{"lat":22.96836178,"lng":92.19926078},{"lat":25.44320031,"lng":89.45738232},{"lat":24.16855744,"lng":89.1420614},{"lat":23.77124796,"lng":91.1774754},{"lat":25.63837147,"lng":89.08081034},{"lat":25.60735,"lng":89.07901},{"lat":25.60564613,"lng":89.11262512},{"lat":24.05037,"lng":89.48738},{"lat":25.74556,"lng":88.98726},{"lat":25.66183662,"lng":89.00299072},{"lat":25.9177,"lng":89.14858},{"lat":25.86049791,"lng":89.17853017},{"lat":25.86080752,"lng":89.14267862},{"lat":25.85424911,"lng":89.22020564},{"lat":25.85424911,"lng":89.22020564},{"lat":25.82229614,"lng":89.12947845},{"lat":25.90312536,"lng":89.19700581},{"lat":25.86156082,"lng":89.25647703},{"lat":25.81981277,"lng":89.30935669},{"lat":25.78692055,"lng":89.35939026},{"lat":25.77177,"lng":89.4162},{"lat":25.764418,"lng":89.355021},{"lat":25.76953282,"lng":89.3211635},{"lat":25.74849,"lng":89.45065},{"lat":25.5897809,"lng":89.35635403},{"lat":25.54438529,"lng":89.167649},{"lat":25.53376713,"lng":89.32492676},{"lat":25.53406702,"lng":89.12330926},{"lat":25.62730576,"lng":89.36142976},{"lat":25.5684888,"lng":89.19670869},{"lat":25.54168695,"lng":89.27269972},{"lat":25.51245987,"lng":89.39784255},{"lat":22.97154427,"lng":91.06018066},{"lat":25.60069656,"lng":89.32303619},{"lat":25.64590777,"lng":89.16194795},{"lat":25.5919713,"lng":89.2510366},{"lat":25.59138828,"lng":89.17024747},{"lat":25.47244146,"lng":89.1436701},{"lat":25.52114016,"lng":89.37209928},{"lat":25.66074323,"lng":89.27296249},{"lat":25.59933747,"lng":88.53521171},{"lat":25.454678,"lng":89.341475},{"lat":25.67454052,"lng":89.48594902},{"lat":25.69899915,"lng":89.3893903},{"lat":25.61198125,"lng":89.41164875},{"lat":25.72210884,"lng":89.33158875},{"lat":25.60368665,"lng":89.46277251},{"lat":25.66522357,"lng":89.3565594},{"lat":25.6528,"lng":89.40317},{"lat":25.64351771,"lng":89.49060136},{"lat":25.700145,"lng":89.244235},{"lat":25.78402842,"lng":89.25207236},{"lat":25.76935996,"lng":89.19493264},{"lat":24.825266,"lng":88.579164},{"lat":25.671989,"lng":89.057314},{"lat":25.7765457,"lng":89.27939959},{"lat":25.79863702,"lng":89.19600542},{"lat":24.96820064,"lng":89.15642527},{"lat":25.81375486,"lng":89.0711198},{"lat":25.77407837,"lng":89.08457947},{"lat":23.82788389,"lng":88.95428745},{"lat":25.76015,"lng":89.03382},{"lat":26.10916519,"lng":88.19622803},{"lat":26.09961549,"lng":88.22614449},{"lat":26.039138,"lng":88.227597},{"lat":26.0282383,"lng":88.28003693},{"lat":26.14088,"lng":88.29293},{"lat":26.16594,"lng":88.319173},{"lat":26.072617,"lng":88.301905},{"lat":26.14728,"lng":88.24459},{"lat":25.9210445,"lng":88.14251619},{"lat":25.86574936,"lng":88.14694977},{"lat":25.71104431,"lng":88.41175079},{"lat":25.92236328,"lng":88.36367035},{"lat":25.813067,"lng":88.344897},{"lat":24.14269,"lng":89.497733},{"lat":24.17594,"lng":89.41200984},{"lat":24.1223085,"lng":89.36386},{"lat":24.212,"lng":89.48251},{"lat":25.871223,"lng":88.3388},{"lat":25.03714787,"lng":89.41775399},{"lat":24.61191,"lng":89.77756},{"lat":24.080315,"lng":89.96089},{"lat":25.99892266,"lng":88.20124967},{"lat":23.99737641,"lng":89.47842},{"lat":23.19388301,"lng":89.61546306},{"lat":23.19388301,"lng":89.61546306},{"lat":23.953438,"lng":89.547558},{"lat":25.90854218,"lng":88.22574289},{"lat":23.95550496,"lng":89.1141767},{"lat":22.081789,"lng":90.229586},{"lat":22.058929,"lng":90.113308},{"lat":22.163472,"lng":90.251217},{"lat":22.102999,"lng":90.304528},{"lat":22.025761,"lng":90.164542},{"lat":22.313775,"lng":90.098131},{"lat":22.308975,"lng":90.054339},{"lat":22.259369,"lng":90.027781},{"lat":22.416742,"lng":90.183383},{"lat":22.4565,"lng":90.211531},{"lat":22.31915,"lng":90.143169},{"lat":22.35865,"lng":90.180139},{"lat":22.375163,"lng":90.135712},{"lat":22.238889,"lng":90.09615},{"lat":22.939837,"lng":90.077395},{"lat":22.977533,"lng":90.1477},{"lat":23.015417,"lng":90.163267},{"lat":22.913639,"lng":90.199083},{"lat":22.78728,"lng":90.332254},{"lat":22.830964,"lng":90.283308},{"lat":22.911133,"lng":90.331617},{"lat":22.808256,"lng":90.303064},{"lat":22.503989,"lng":90.343361},{"lat":22.635572,"lng":90.417942},{"lat":22.496286,"lng":90.305486},{"lat":22.525727,"lng":90.31551},{"lat":22.7735,"lng":90.15255},{"lat":22.810044,"lng":90.191669},{"lat":22.788822,"lng":90.180881},{"lat":22.712811,"lng":90.43415},{"lat":23.022067,"lng":90.214283},{"lat":22.906706,"lng":90.251677},{"lat":22.979183,"lng":90.197425},{"lat":23.068667,"lng":90.169267},{"lat":22.936659,"lng":90.235364},{"lat":22.965689,"lng":90.263664},{"lat":22.932275,"lng":90.318062},{"lat":22.876219,"lng":90.25975},{"lat":22.843472,"lng":90.196214},{"lat":22.782644,"lng":90.261027},{"lat":22.85315,"lng":90.108278},{"lat":22.903628,"lng":90.151494},{"lat":22.850336,"lng":90.157973},{"lat":22.843917,"lng":90.25985},{"lat":22.893672,"lng":90.197289},{"lat":22.536825,"lng":90.718306},{"lat":22.507742,"lng":90.678375},{"lat":22.156903,"lng":90.7017},{"lat":22.205258,"lng":90.696114},{"lat":22.056931,"lng":90.630183},{"lat":22.238886,"lng":90.783094},{"lat":22.109828,"lng":90.638703},{"lat":22.126728,"lng":90.721831},{"lat":22.163367,"lng":90.756703},{"lat":22.589939,"lng":90.752958},{"lat":22.60615,"lng":90.713942},{"lat":22.634147,"lng":90.691542},{"lat":22.394183,"lng":90.688739},{"lat":22.337294,"lng":90.772258},{"lat":22.32585,"lng":90.825289},{"lat":22.354917,"lng":90.828744},{"lat":23.786086,"lng":90.426392},{"lat":23.787208,"lng":90.445614},{"lat":23.095542,"lng":89.062557},{"lat":23.171053,"lng":89.027752},{"lat":23.005493,"lng":89.034979},{"lat":23.161678,"lng":89.05278},{"lat":23.062831,"lng":89.013467},{"lat":23.05778,"lng":89.08232},{"lat":22.953393,"lng":88.988537},{"lat":23.108312,"lng":89.029066},{"lat":22.851035,"lng":89.21361},{"lat":22.839901,"lng":89.32515},{"lat":22.8862,"lng":89.20928},{"lat":22.863172,"lng":89.259296},{"lat":22.90359,"lng":89.29225},{"lat":22.905698,"lng":89.1387},{"lat":23.07062,"lng":89.23331},{"lat":22.95452,"lng":89.18048},{"lat":23.0662,"lng":89.27981},{"lat":22.958858,"lng":89.300244},{"lat":23.03056,"lng":89.273985},{"lat":23.02997,"lng":89.1016},{"lat":22.984149,"lng":89.161954},{"lat":23.06303,"lng":89.19654},{"lat":22.9999,"lng":89.261379},{"lat":23.02012,"lng":89.181631},{"lat":22.99662,"lng":89.31346},{"lat":23.037574,"lng":89.216438},{"lat":22.938631,"lng":89.329353},{"lat":22.969931,"lng":89.320556},{"lat":23.06579,"lng":89.15056},{"lat":22.95882,"lng":89.23049},{"lat":23.1694,"lng":90.52686},{"lat":23.18983,"lng":90.55299},{"lat":23.17188,"lng":90.50659},{"lat":23.1912042,"lng":90.39919},{"lat":23.21911,"lng":90.56748},{"lat":23.186517,"lng":90.505567},{"lat":23.191074,"lng":90.43207},{"lat":23.186402,"lng":90.455307},{"lat":23.22208,"lng":90.46141},{"lat":23.230473,"lng":90.530499},{"lat":23.24264,"lng":90.567861},{"lat":23.1593185,"lng":90.4228264},{"lat":23.140575,"lng":90.387726},{"lat":23.16619,"lng":90.39366},{"lat":23.150212,"lng":90.414687},{"lat":23.13923,"lng":90.44794},{"lat":23.1217563,"lng":90.4075033},{"lat":23.16832,"lng":90.44328},{"lat":23.139539,"lng":90.513153},{"lat":23.0826333,"lng":90.45198},{"lat":23.065355,"lng":90.437913},{"lat":23.0963982,"lng":90.478128},{"lat":23.065085,"lng":90.467133},{"lat":23.077033,"lng":90.380383},{"lat":23.102197,"lng":90.420001},{"lat":23.250908,"lng":90.382706},{"lat":23.28955,"lng":90.427667},{"lat":23.2365361,"lng":90.4111293},{"lat":23.263753,"lng":90.471804},{"lat":23.2604429,"lng":90.4050812},{"lat":23.274487,"lng":90.381226},{"lat":23.3063395,"lng":90.4259499},{"lat":23.313781,"lng":90.381809},{"lat":23.2628,"lng":90.350184},{"lat":23.3025009,"lng":90.3457328},{"lat":23.3238,"lng":90.2423},{"lat":23.33994,"lng":90.2739},{"lat":23.34537,"lng":90.3448},{"lat":24.460007,"lng":92.148542},{"lat":24.60135,"lng":92.122949},{"lat":24.28467106,"lng":91.86013894},{"lat":24.341937,"lng":91.868659},{"lat":24.225747,"lng":91.859842},{"lat":24.353149,"lng":91.832153},{"lat":24.288962,"lng":91.83602},{"lat":24.400541,"lng":91.870938},{"lat":24.431045,"lng":91.900739},{"lat":24.421457,"lng":91.83841},{"lat":24.38583,"lng":91.897944},{"lat":24.59266,"lng":91.983935},{"lat":24.623202,"lng":91.989359},{"lat":24.592427,"lng":92.028173},{"lat":24.517096,"lng":91.97268},{"lat":24.418214,"lng":91.941982},{"lat":24.536768,"lng":92.072162},{"lat":24.533483,"lng":92.01625},{"lat":24.44183,"lng":92.033459},{"lat":24.444756,"lng":91.993507},{"lat":24.473609,"lng":91.999817},{"lat":24.362773,"lng":91.955445},{"lat":24.442718,"lng":91.9531},{"lat":24.649143,"lng":91.832351},{"lat":24.481905,"lng":91.887342},{"lat":24.507334,"lng":91.832768},{"lat":24.58226,"lng":91.89355},{"lat":24.556684,"lng":91.850235},{"lat":24.527983,"lng":91.855395},{"lat":24.51784,"lng":91.8784},{"lat":24.630532,"lng":91.903233},{"lat":25.121395,"lng":91.268075},{"lat":25.149441,"lng":91.320229},{"lat":25.057932,"lng":91.260541},{"lat":25.120116,"lng":91.33346},{"lat":25.125808,"lng":91.366974},{"lat":24.853406,"lng":91.552796},{"lat":24.950212,"lng":91.556335},{"lat":25.050405,"lng":91.675029},{"lat":25.04117,"lng":91.65619},{"lat":24.931432,"lng":91.447986},{"lat":24.926708,"lng":91.496197},{"lat":24.9359,"lng":91.31551},{"lat":24.87205,"lng":91.2692},{"lat":24.78048,"lng":91.268129},{"lat":24.794908,"lng":91.431859},{"lat":24.829859,"lng":91.327908},{"lat":24.727359,"lng":91.369077},{"lat":25.019774,"lng":91.567373},{"lat":25.070119,"lng":91.477252},{"lat":24.997638,"lng":91.263393},{"lat":24.953221,"lng":91.278604},{"lat":25.03608,"lng":91.341308},{"lat":25.147763,"lng":91.222745},{"lat":24.658148,"lng":91.821884},{"lat":24.674413,"lng":91.77656},{"lat":24.672291,"lng":91.744738},{"lat":24.77464,"lng":91.78282},{"lat":24.70657,"lng":91.73336},{"lat":24.719139,"lng":91.696727},{"lat":24.724432,"lng":91.805104},{"lat":24.706509,"lng":91.8588},{"lat":24.656411,"lng":91.711153},{"lat":24.66506,"lng":91.90164},{"lat":24.72388,"lng":91.75075},{"lat":24.88528,"lng":92.07912},{"lat":24.91203856,"lng":92.17094821},{"lat":24.88145,"lng":92.21027},{"lat":24.85284,"lng":92.13335},{"lat":24.773952,"lng":92.156478},{"lat":24.82363,"lng":92.12001},{"lat":24.797861,"lng":92.154335},{"lat":24.809561,"lng":92.182574},{"lat":24.86764694,"lng":92.17546621},{"lat":24.89471,"lng":92.10139},{"lat":24.85113,"lng":91.78375},{"lat":24.811588,"lng":91.752537},{"lat":24.78834,"lng":91.68186},{"lat":24.83062,"lng":91.70924},{"lat":24.76182,"lng":91.70486},{"lat":24.87771,"lng":91.77161},{"lat":24.90949,"lng":91.73239},{"lat":24.85967,"lng":91.73023},{"lat":24.88453,"lng":91.85494},{"lat":24.819786,"lng":91.925842},{"lat":24.799246,"lng":91.853545},{"lat":24.873919,"lng":91.895876},{"lat":24.831212,"lng":91.818811},{"lat":24.78025299,"lng":91.91498597},{"lat":24.88699,"lng":91.83596},{"lat":24.831597,"lng":91.863287},{"lat":24.86005,"lng":91.84889},{"lat":24.699714,"lng":91.945619},{"lat":24.682108,"lng":91.951964},{"lat":24.84117,"lng":92.05205},{"lat":24.869679,"lng":92.007275},{"lat":24.75611,"lng":92.01852},{"lat":24.82966,"lng":92.07525},{"lat":24.85167,"lng":91.97223},{"lat":24.884099,"lng":92.052721},{"lat":24.80228,"lng":91.99583},{"lat":24.82554818,"lng":91.95805458},{"lat":24.730862,"lng":92.019913},{"lat":24.7571,"lng":92.04953},{"lat":25.065253,"lng":92.109736},{"lat":24.938603,"lng":92.193817},{"lat":25.009258,"lng":92.263828},{"lat":24.99225,"lng":92.340957},{"lat":25.001146,"lng":92.289762},{"lat":24.89234,"lng":92.48137},{"lat":24.913151,"lng":92.30778},{"lat":24.96261,"lng":92.37639},{"lat":24.92635331,"lng":92.45811136},{"lat":24.90267886,"lng":92.34089636},{"lat":24.94592047,"lng":92.40909216},{"lat":24.89357084,"lng":92.42294916},{"lat":24.86250374,"lng":92.41846796},{"lat":24.273183,"lng":90.00582},{"lat":24.185054,"lng":90.008},{"lat":24.195397,"lng":90.060722},{"lat":24.287173,"lng":90.04585},{"lat":24.238665,"lng":90.0118},{"lat":24.441313,"lng":89.86726},{"lat":24.527548,"lng":89.842028},{"lat":24.512213,"lng":89.85533},{"lat":24.449735,"lng":89.826046},{"lat":24.44982,"lng":89.827266},{"lat":24.42598,"lng":89.824312},{"lat":24.173321,"lng":89.910288},{"lat":24.165967,"lng":89.972636},{"lat":24.159963,"lng":89.887752},{"lat":24.164765,"lng":89.989425},{"lat":24.13912,"lng":89.901598},{"lat":24.106246,"lng":89.958326},{"lat":24.203938,"lng":89.937771},{"lat":24.648935,"lng":89.890334},{"lat":24.733036,"lng":89.927986},{"lat":24.702223,"lng":89.890434},{"lat":24.638401,"lng":89.96837},{"lat":24.671571,"lng":89.899562},{"lat":24.679216,"lng":89.94503},{"lat":24.429546,"lng":89.91589},{"lat":24.536093,"lng":89.984387},{"lat":24.540428,"lng":89.8977},{"lat":24.58278,"lng":89.973625},{"lat":24.607222,"lng":89.89125},{"lat":24.596828,"lng":89.87231},{"lat":24.521015,"lng":89.92498},{"lat":24.613962,"lng":89.916962},{"lat":24.335756,"lng":90.02701},{"lat":24.374065,"lng":89.96516},{"lat":24.39443,"lng":90.043823},{"lat":24.343086,"lng":90.004974},{"lat":24.406605,"lng":89.911223},{"lat":24.369196,"lng":89.8852},{"lat":24.067965,"lng":90.120168},{"lat":24.096212,"lng":90.116492},{"lat":24.116026,"lng":90.116931},{"lat":24.025944,"lng":89.99286},{"lat":24.324556,"lng":90.098172},{"lat":24.316081,"lng":90.218177},{"lat":24.2122279,"lng":90.175641},{"lat":24.253424,"lng":90.16196},{"lat":24.40166,"lng":90.1267},{"lat":24.368052,"lng":90.198701},{"lat":26.053176,"lng":89.688408},{"lat":26.102083,"lng":89.757417},{"lat":26.11089,"lng":89.668166},{"lat":26.071691,"lng":89.78112},{"lat":25.817506,"lng":89.730044},{"lat":25.974386,"lng":89.727378},{"lat":25.955123,"lng":89.731507},{"lat":25.890361,"lng":89.706806},{"lat":25.915537,"lng":89.662793},{"lat":25.917333,"lng":89.749139},{"lat":26.029644,"lng":89.778643},{"lat":25.9556336,"lng":89.653452},{"lat":26.035864,"lng":89.641007},{"lat":26.02816,"lng":89.699176},{"lat":26.000267,"lng":89.656882},{"lat":25.9062822,"lng":89.5789036},{"lat":25.918248,"lng":89.623058},{"lat":25.985756,"lng":89.606379},{"lat":25.990771,"lng":89.520215},{"lat":25.951539,"lng":89.55394676},{"lat":25.9509,"lng":89.543183},{"lat":25.764173,"lng":89.512012},{"lat":25.790872,"lng":89.560667},{"lat":25.857621,"lng":89.567549},{"lat":25.801121,"lng":89.488026},{"lat":25.730002,"lng":89.55222},{"lat":25.79598,"lng":89.543075},{"lat":25.91020059,"lng":89.35286555},{"lat":26.0019493,"lng":89.4149871},{"lat":25.96606635,"lng":89.34754604},{"lat":25.88027514,"lng":89.32467634},{"lat":25.934137,"lng":89.304764},{"lat":25.9297625,"lng":89.41570039},{"lat":25.92282335,"lng":89.38173855},{"lat":26.205624,"lng":89.119768},{"lat":26.036429,"lng":89.239931},{"lat":26.052451,"lng":89.155231},{"lat":26.223897,"lng":89.092216},{"lat":26.205637,"lng":89.119779},{"lat":26.09555475,"lng":89.23379357},{"lat":26.07885515,"lng":89.1930764},{"lat":26.077959,"lng":89.135919},{"lat":26.2199422,"lng":89.0515827},{"lat":26.1417499,"lng":89.127771},{"lat":26.121053,"lng":89.139123},{"lat":26.1261732,"lng":89.1427972},{"lat":25.987667,"lng":89.18134},{"lat":25.979314,"lng":89.27992},{"lat":26.002323,"lng":89.267177},{"lat":25.991311,"lng":89.241481},{"lat":26.040131,"lng":89.197442},{"lat":25.968066,"lng":89.224956},{"lat":25.84994521,"lng":89.36400714},{"lat":25.85049,"lng":89.50935},{"lat":25.819925,"lng":89.40275081},{"lat":26.258106,"lng":89.078563},{"lat":26.38616983,"lng":88.94484394},{"lat":26.19336285,"lng":88.90176039},{"lat":26.1521,"lng":88.92117},{"lat":26.182046,"lng":88.992774},{"lat":26.116763,"lng":89.042808},{"lat":26.156774,"lng":89.021694},{"lat":26.205375,"lng":88.928264},{"lat":26.130721,"lng":88.977883},{"lat":26.255271,"lng":88.882931},{"lat":26.242654,"lng":88.932533},{"lat":26.195348,"lng":88.984711},{"lat":26.05953,"lng":89.01728},{"lat":26.052451,"lng":89.155231},{"lat":26.085221,"lng":88.898818},{"lat":26.07165,"lng":89.03682},{"lat":26.0945326,"lng":88.9227638},{"lat":25.96462,"lng":89.09421},{"lat":26.0107547,"lng":88.9767121},{"lat":25.9690933,"lng":88.9695634},{"lat":26.0175443,"lng":88.9453665},{"lat":26.00344,"lng":89.08851},{"lat":25.9509,"lng":89.543183},{"lat":25.883466,"lng":89.006084},{"lat":25.952165,"lng":89.027509},{"lat":25.876038,"lng":89.028985},{"lat":25.89765,"lng":89.08777},{"lat":25.8990877,"lng":89.0166566},{"lat":25.879651,"lng":89.096777},{"lat":25.88987939,"lng":88.97480055},{"lat":25.930699,"lng":88.971084},{"lat":25.9292896,"lng":89.0558916},{"lat":24.30939,"lng":89.67841},{"lat":24.25724,"lng":89.6816},{"lat":24.244,"lng":89.6503},{"lat":24.3568,"lng":89.71068},{"lat":24.40309,"lng":89.67575},{"lat":24.66258,"lng":89.60581},{"lat":24.54417,"lng":89.59224},{"lat":24.55478,"lng":89.50535},{"lat":24.51897,"lng":89.546029},{"lat":24.50572,"lng":89.52547},{"lat":24.45205,"lng":89.48791},{"lat":24.46849,"lng":89.53223},{"lat":24.42736,"lng":89.59538},{"lat":24.48686,"lng":89.60797},{"lat":24.47913,"lng":89.44643},{"lat":24.53552,"lng":89.61788},{"lat":24.49969,"lng":89.40062},{"lat":24.37254,"lng":89.41124},{"lat":24.52692,"lng":89.35746},{"lat":24.36023,"lng":89.46351},{"lat":24.27522,"lng":89.48363},{"lat":24.42966,"lng":89.54783},{"lat":24.26183,"lng":89.49824},{"lat":24.31841,"lng":89.61542},{"lat":24.39374,"lng":89.43808},{"lat":24.40668,"lng":89.50512},{"lat":24.28553,"lng":89.61646},{"lat":24.31222,"lng":89.57075},{"lat":23.543281,"lng":90.604585},{"lat":23.586135,"lng":90.597023},{"lat":23.528929,"lng":90.640136},{"lat":23.593221,"lng":90.618545},{"lat":23.465698,"lng":90.307999},{"lat":23.47684,"lng":90.380283},{"lat":23.477919,"lng":90.301678},{"lat":23.451856,"lng":90.405405},{"lat":23.473464,"lng":90.310087},{"lat":23.49711,"lng":90.409505},{"lat":23.474921,"lng":90.259071},{"lat":23.468586,"lng":90.335198},{"lat":23.474921,"lng":90.259071},{"lat":23.606821,"lng":90.421602},{"lat":23.600998,"lng":90.35478},{"lat":23.578868,"lng":90.415153},{"lat":23.640079,"lng":90.281276},{"lat":23.530728,"lng":90.387157},{"lat":23.55854,"lng":90.343458},{"lat":23.607998,"lng":90.38753},{"lat":23.5372,"lng":90.405611},{"lat":23.626037,"lng":90.294946},{"lat":23.57435,"lng":90.368429},{"lat":23.619144,"lng":90.274015},{"lat":23.545978,"lng":90.468457},{"lat":23.520035,"lng":90.433761},{"lat":23.547251,"lng":90.460058},{"lat":23.48833,"lng":90.465387},{"lat":23.432367,"lng":90.485749},{"lat":23.444455,"lng":90.450522},{"lat":23.448877,"lng":90.4803},{"lat":23.499641,"lng":90.489658},{"lat":23.484022,"lng":90.469404},{"lat":23.510736,"lng":90.46745},{"lat":23.785672,"lng":90.730131},{"lat":23.780073,"lng":90.632251},{"lat":23.789822,"lng":90.606056},{"lat":23.784692,"lng":90.665781},{"lat":23.747922,"lng":90.666403},{"lat":23.712127,"lng":90.688139},{"lat":23.777046,"lng":90.69118},{"lat":23.847693,"lng":90.629558},{"lat":23.74945,"lng":90.672449},{"lat":23.632993,"lng":90.536275},{"lat":23.667812,"lng":90.537342},{"lat":23.595745,"lng":90.534064},{"lat":23.699374,"lng":90.55012},{"lat":23.65011,"lng":90.564533},{"lat":23.876018,"lng":90.580207},{"lat":23.785144,"lng":90.562351},{"lat":23.878159,"lng":90.568259},{"lat":23.780513,"lng":90.569889},{"lat":23.773298,"lng":90.509063},{"lat":23.780711,"lng":90.532091},{"lat":23.822866,"lng":90.523014},{"lat":23.66675,"lng":90.626528},{"lat":23.704279,"lng":90.752908},{"lat":23.736764,"lng":90.634186},{"lat":23.70016,"lng":90.522386},{"lat":23.63412,"lng":90.5888299},{"lat":23.706764,"lng":90.634186},{"lat":23.633497,"lng":90.598704},{"lat":23.719326,"lng":90.572908},{"lat":23.603348,"lng":90.547461},{"lat":23.707266,"lng":90.450113},{"lat":23.741772,"lng":90.493078},{"lat":23.729253,"lng":90.435318},{"lat":23.701915,"lng":90.44292},{"lat":23.68421,"lng":90.437383},{"lat":23.29389,"lng":89.70372},{"lat":23.32442,"lng":89.63252},{"lat":23.297461,"lng":89.677307},{"lat":23.2745,"lng":89.67509},{"lat":23.3628,"lng":89.62705},{"lat":23.37167,"lng":89.94929},{"lat":23.350559,"lng":90.075515},{"lat":23.35377,"lng":90.0006},{"lat":23.36083,"lng":90.00872},{"lat":23.40447,"lng":89.94659},{"lat":23.308475,"lng":90.077763},{"lat":23.407733,"lng":90.040883},{"lat":23.424623,"lng":90.06248},{"lat":23.40804,"lng":90.00575},{"lat":23.44478,"lng":89.70802},{"lat":23.4667,"lng":89.636539},{"lat":23.378111,"lng":89.652604},{"lat":23.40353,"lng":89.654561},{"lat":23.363081,"lng":89.753911},{"lat":23.31953,"lng":89.74247},{"lat":23.46184,"lng":89.674617},{"lat":23.35413,"lng":89.71544},{"lat":23.55914,"lng":89.99434},{"lat":23.55896,"lng":89.94098},{"lat":23.34456,"lng":89.89563},{"lat":23.46016,"lng":89.92997},{"lat":23.41906,"lng":89.92725},{"lat":23.3996,"lng":89.88773},{"lat":23.450175,"lng":89.876362},{"lat":23.44627,"lng":89.92331},{"lat":23.52631,"lng":89.90562},{"lat":23.48849,"lng":89.87571},{"lat":23.528642,"lng":90.021735},{"lat":23.48172,"lng":90.02485},{"lat":23.44069,"lng":90.08221},{"lat":23.48602,"lng":90.05201},{"lat":23.50803,"lng":89.93404},{"lat":23.3527,"lng":89.83154},{"lat":23.47745,"lng":89.81502},{"lat":23.34502,"lng":89.79944},{"lat":23.39538,"lng":89.83504},{"lat":23.449334,"lng":89.757584},{"lat":23.39055,"lng":89.79549},{"lat":23.44507,"lng":89.49798},{"lat":23.57452,"lng":89.41442},{"lat":23.444619,"lng":89.497996},{"lat":23.452502,"lng":89.569221},{"lat":23.33475,"lng":89.51496},{"lat":23.34286085,"lng":89.5835068},{"lat":23.37257,"lng":89.52097},{"lat":23.36448,"lng":89.37378},{"lat":23.29879,"lng":89.40568},{"lat":23.388769,"lng":89.293608},{"lat":23.29015,"lng":89.4371},{"lat":23.298527,"lng":89.405845},{"lat":23.30923,"lng":89.33868},{"lat":23.385289,"lng":89.334778},{"lat":23.640252,"lng":89.402713},{"lat":23.614894,"lng":89.451065},{"lat":23.64255,"lng":89.38444},{"lat":23.559688,"lng":89.465814},{"lat":23.556965,"lng":89.493766},{"lat":23.574401,"lng":89.414419},{"lat":23.59161,"lng":89.38948},{"lat":23.662,"lng":89.5659},{"lat":23.633966,"lng":89.549551},{"lat":23.599517,"lng":89.608749},{"lat":23.6108486,"lng":89.5104432},{"lat":23.642313,"lng":89.47715},{"lat":23.672,"lng":89.506782},{"lat":23.7538,"lng":89.7232},{"lat":23.751,"lng":89.7702},{"lat":23.747362,"lng":89.759477},{"lat":23.69902,"lng":89.765156},{"lat":23.75315,"lng":89.45846},{"lat":23.78428,"lng":89.45644},{"lat":23.75252555,"lng":89.52450831},{"lat":23.7246,"lng":89.5106},{"lat":23.67985,"lng":89.45021},{"lat":23.767385,"lng":89.484696},{"lat":23.689495,"lng":89.403253},{"lat":23.785959,"lng":89.387895},{"lat":23.872833,"lng":89.376397},{"lat":23.841841,"lng":89.413684},{"lat":23.838515,"lng":89.384757},{"lat":23.771732,"lng":89.348241},{"lat":23.716694,"lng":89.355374},{"lat":23.80336,"lng":89.35757},{"lat":23.73848,"lng":89.42063},{"lat":23.71594,"lng":89.38908},{"lat":23.737827,"lng":89.367751},{"lat":25.180684,"lng":89.866111},{"lat":25.280067,"lng":89.86408},{"lat":25.212503,"lng":89.824283},{"lat":25.318755,"lng":89.793299},{"lat":25.031382,"lng":89.858537},{"lat":25.05245,"lng":89.906569},{"lat":25.011883,"lng":89.72852},{"lat":25.080949,"lng":89.718699},{"lat":25.080362,"lng":89.846083},{"lat":25.123299,"lng":89.716756},{"lat":25.105072,"lng":89.803879},{"lat":25.099583,"lng":89.76138},{"lat":24.844706,"lng":89.787296},{"lat":24.882688,"lng":89.710845},{"lat":24.954047,"lng":89.718057},{"lat":24.89327,"lng":89.753261},{"lat":24.954438,"lng":89.748326},{"lat":24.823829,"lng":89.798949},{"lat":24.936659,"lng":89.821851},{"lat":24.919071,"lng":89.891605},{"lat":25.041542,"lng":89.825704},{"lat":24.925045,"lng":89.824788},{"lat":24.888623,"lng":89.825456},{"lat":24.891313,"lng":89.875407},{"lat":25.027744,"lng":89.821867},{"lat":24.994829,"lng":89.752363},{"lat":24.977142,"lng":89.805364},{"lat":24.977471,"lng":89.853316},{"lat":24.99205,"lng":89.848475},{"lat":24.649086,"lng":89.82738},{"lat":24.813233,"lng":89.856285},{"lat":24.712053,"lng":89.87259},{"lat":24.772639,"lng":89.826802},{"lat":24.771345,"lng":89.893958},{"lat":24.70965,"lng":89.81803},{"lat":24.77314,"lng":89.794249},{"lat":24.385588,"lng":90.406097},{"lat":24.432984,"lng":90.40805},{"lat":24.405505,"lng":90.477538},{"lat":24.364116,"lng":90.275532},{"lat":24.44405,"lng":90.3402},{"lat":24.35595,"lng":90.4578},{"lat":24.453068,"lng":90.278156},{"lat":25.032456,"lng":90.587154},{"lat":24.531218,"lng":90.277083},{"lat":24.615957,"lng":90.256828},{"lat":24.677594,"lng":90.272609},{"lat":24.509928,"lng":90.288045},{"lat":24.512814,"lng":90.231664},{"lat":24.631542,"lng":90.306629},{"lat":24.545942,"lng":90.252455},{"lat":24.648517,"lng":90.245422},{"lat":24.59958,"lng":90.184482},{"lat":24.629337,"lng":90.197153},{"lat":24.608123,"lng":90.336443},{"lat":24.553194,"lng":90.201599},{"lat":24.501967,"lng":90.494683},{"lat":24.355094,"lng":90.581103},{"lat":24.421401,"lng":90.56425},{"lat":24.46621,"lng":90.503104},{"lat":24.371367,"lng":90.5637},{"lat":24.400878,"lng":90.517271},{"lat":24.395192,"lng":90.623664},{"lat":24.45235,"lng":90.493017},{"lat":24.513355,"lng":90.467279},{"lat":24.466631,"lng":90.528996},{"lat":24.308152,"lng":90.628985},{"lat":24.37188,"lng":90.58819},{"lat":24.756936,"lng":90.656751},{"lat":24.842445,"lng":90.533506},{"lat":25.025465,"lng":90.347634},{"lat":25.183545,"lng":90.303763},{"lat":25.054383,"lng":90.336817},{"lat":25.043233,"lng":90.2644},{"lat":25.138967,"lng":90.385767},{"lat":25.143462,"lng":90.342357},{"lat":25.122467,"lng":90.285583},{"lat":25.087911,"lng":90.32037},{"lat":25.081794,"lng":90.349379},{"lat":25.007233,"lng":90.434267},{"lat":25.011883,"lng":90.37725},{"lat":24.644008,"lng":90.718161},{"lat":24.641067,"lng":90.58095},{"lat":24.676767,"lng":90.6028},{"lat":24.637279,"lng":90.634157},{"lat":24.630382,"lng":90.610717},{"lat":24.599583,"lng":90.599849},{"lat":24.668283,"lng":90.6679},{"lat":24.689434,"lng":90.654613},{"lat":24.600466,"lng":90.54734},{"lat":24.63024,"lng":90.531134},{"lat":24.797884,"lng":90.176538},{"lat":24.747087,"lng":90.236912},{"lat":24.653466,"lng":90.165174},{"lat":24.773382,"lng":90.162774},{"lat":24.710653,"lng":90.160527},{"lat":24.707716,"lng":90.205016},{"lat":24.718354,"lng":90.267256},{"lat":24.774102,"lng":90.220662},{"lat":24.8238,"lng":90.228281},{"lat":24.54955,"lng":90.6961},{"lat":24.562883,"lng":90.5529},{"lat":24.593967,"lng":90.70855},{"lat":24.494929,"lng":90.65278},{"lat":24.56435,"lng":90.62315},{"lat":24.541,"lng":90.747517},{"lat":24.57945,"lng":90.661833},{"lat":24.523183,"lng":90.635518},{"lat":24.519467,"lng":90.730867},{"lat":24.961434,"lng":90.439122},{"lat":24.89865,"lng":90.423717},{"lat":24.969563,"lng":90.478385},{"lat":24.93681,"lng":90.31418},{"lat":24.802367,"lng":90.515817},{"lat":24.952199,"lng":90.469617},{"lat":24.863667,"lng":90.454116},{"lat":24.903331,"lng":90.392273},{"lat":24.901281,"lng":90.499884},{"lat":24.784661,"lng":90.480869},{"lat":24.924948,"lng":90.355669},{"lat":24.969557,"lng":90.383511},{"lat":24.87701,"lng":90.33126},{"lat":24.853467,"lng":90.502466},{"lat":24.9736002,"lng":90.3944082},{"lat":24.99332,"lng":90.252541},{"lat":24.95727,"lng":90.305251},{"lat":24.836591,"lng":90.42897},{"lat":24.809477,"lng":90.86535},{"lat":24.769428,"lng":90.918911},{"lat":24.817156,"lng":90.813476},{"lat":24.813578,"lng":90.863585},{"lat":24.735844,"lng":90.945529},{"lat":24.762725,"lng":90.859773},{"lat":24.948236,"lng":90.906261},{"lat":24.89908,"lng":90.882788},{"lat":24.939199,"lng":90.833919},{"lat":24.945381,"lng":90.93803},{"lat":24.969334,"lng":90.797882},{"lat":24.881893,"lng":90.838543},{"lat":24.878426,"lng":90.964638},{"lat":25.014214,"lng":90.647341},{"lat":24.993395,"lng":90.876661},{"lat":24.602911,"lng":90.844056},{"lat":24.72471077,"lng":90.81006532},{"lat":24.637612,"lng":90.829549},{"lat":24.757268,"lng":90.716993},{"lat":24.674146,"lng":90.715688},{"lat":24.727358,"lng":90.768879},{"lat":24.662043,"lng":90.840562},{"lat":24.599903,"lng":90.869747},{"lat":24.602901,"lng":90.844016},{"lat":24.623783,"lng":90.78817},{"lat":24.652884,"lng":90.747188},{"lat":24.784155,"lng":90.750601},{"lat":24.928068,"lng":90.695028},{"lat":24.896116,"lng":90.68446},{"lat":24.874425,"lng":90.734124},{"lat":25.199732,"lng":90.018339},{"lat":25.150297,"lng":90.084991},{"lat":25.118594,"lng":90.058676},{"lat":25.169411,"lng":90.06399},{"lat":25.24238,"lng":90.009443},{"lat":25.105228,"lng":90.054318},{"lat":25.213258,"lng":90.082761},{"lat":24.960949,"lng":90.148249},{"lat":24.913411,"lng":90.146989},{"lat":24.910248,"lng":90.214542},{"lat":24.968263,"lng":90.224069},{"lat":24.996002,"lng":90.181719},{"lat":24.936451,"lng":90.17672},{"lat":24.933507,"lng":90.228639},{"lat":25.004055,"lng":90.211859},{"lat":25.105639,"lng":90.153317},{"lat":25.085696,"lng":90.18979},{"lat":25.139071,"lng":90.248818},{"lat":25.070443,"lng":90.131333},{"lat":25.07861,"lng":90.217414},{"lat":25.1085,"lng":90.205248},{"lat":25.162302,"lng":90.132774},{"lat":25.188242,"lng":90.143812},{"lat":25.12039,"lng":90.085873},{"lat":25.178272,"lng":90.245351},{"lat":25.087194,"lng":90.258916},{"lat":22.77946,"lng":89.87562},{"lat":22.80907,"lng":89.87744},{"lat":22.76006,"lng":89.89256},{"lat":22.82313,"lng":89.86321},{"lat":22.788406,"lng":89.673679},{"lat":22.707434,"lng":89.623371},{"lat":22.773168,"lng":89.711052},{"lat":22.747416,"lng":89.630298},{"lat":22.777549,"lng":89.718798},{"lat":22.781751,"lng":89.708468},{"lat":22.731558,"lng":89.662353},{"lat":22.678994,"lng":89.622227},{"lat":22.639139,"lng":89.903108},{"lat":22.616711,"lng":89.872711},{"lat":22.682164,"lng":89.856095},{"lat":22.714986,"lng":89.845307},{"lat":22.653718,"lng":89.878338},{"lat":22.664625,"lng":89.874923},{"lat":22.623166,"lng":89.884427},{"lat":22.90934,"lng":89.81686},{"lat":22.607667,"lng":89.845078},{"lat":22.84675,"lng":89.75813},{"lat":22.85072,"lng":89.81088},{"lat":22.86839,"lng":89.74741},{"lat":22.492691,"lng":89.819937},{"lat":22.856722,"lng":89.755901},{"lat":22.868233,"lng":89.747063},{"lat":22.464915,"lng":89.618592},{"lat":22.485054,"lng":89.682785},{"lat":22.507219,"lng":89.665047},{"lat":22.459815,"lng":89.85382},{"lat":22.560742,"lng":89.860638},{"lat":22.589343,"lng":89.906614},{"lat":22.457869,"lng":89.835182},{"lat":22.449959,"lng":89.852851},{"lat":22.409906,"lng":89.760132},{"lat":22.566855,"lng":89.941824},{"lat":22.560123,"lng":89.70002},{"lat":22.395488,"lng":89.859744},{"lat":22.553227,"lng":89.65366},{"lat":22.54824,"lng":89.74054},{"lat":22.615411,"lng":89.6884},{"lat":22.581207,"lng":89.676739},{"lat":22.583813,"lng":89.67223},{"lat":22.649665,"lng":89.578477},{"lat":22.645377,"lng":89.642774},{"lat":22.54824,"lng":89.74054},{"lat":22.548561,"lng":89.651211},{"lat":22.5998159,"lng":89.588014},{"lat":22.587969,"lng":89.648642},{"lat":22.657167,"lng":89.638079},{"lat":22.3191,"lng":89.85412},{"lat":23.15997,"lng":89.80712},{"lat":23.15178,"lng":89.76885},{"lat":23.16385,"lng":89.88315},{"lat":23.236972,"lng":89.718312},{"lat":23.282542,"lng":89.773606},{"lat":23.23578,"lng":89.82372},{"lat":23.11257,"lng":89.8018},{"lat":23.184131,"lng":89.804395},{"lat":23.231885,"lng":89.791348},{"lat":23.14804,"lng":89.83202},{"lat":23.18484,"lng":89.84752},{"lat":23.219216,"lng":89.773906},{"lat":23.21919,"lng":89.77412},{"lat":23.143465,"lng":89.889365},{"lat":23.093778,"lng":89.994422},{"lat":23.235,"lng":89.85012},{"lat":23.24926,"lng":89.89087},{"lat":23.31634,"lng":89.95872},{"lat":23.27434,"lng":89.88893},{"lat":23.30277,"lng":90.00486},{"lat":23.27791,"lng":89.83017},{"lat":23.25356,"lng":89.99119},{"lat":23.22407,"lng":89.95929},{"lat":23.24463,"lng":89.92692},{"lat":23.26458,"lng":89.85168},{"lat":23.303261,"lng":89.920339},{"lat":23.29235,"lng":89.93245},{"lat":23.2384,"lng":89.95114},{"lat":23.31209,"lng":89.80901},{"lat":23.24547,"lng":90.01618},{"lat":23.210039,"lng":89.897378},{"lat":22.743884,"lng":89.596597},{"lat":22.717,"lng":89.572},{"lat":22.673,"lng":89.531},{"lat":22.661,"lng":89.51},{"lat":22.664713,"lng":89.438285},{"lat":22.917,"lng":89.533},{"lat":22.917,"lng":89.533},{"lat":22.884,"lng":89.529},{"lat":22.936,"lng":89.581},{"lat":22.86,"lng":89.561},{"lat":22.833,"lng":89.32},{"lat":22.785,"lng":89.4},{"lat":22.896,"lng":89.371},{"lat":22.800846,"lng":89.441262},{"lat":22.822,"lng":89.243},{"lat":22.813,"lng":89.269},{"lat":22.86718,"lng":89.40375},{"lat":22.8,"lng":89.461},{"lat":22.859,"lng":89.37},{"lat":22.755,"lng":89.415},{"lat":22.703,"lng":89.463},{"lat":22.81,"lng":89.401},{"lat":22.913,"lng":89.502},{"lat":22.925829,"lng":89.503694},{"lat":22.897,"lng":89.504},{"lat":22.47,"lng":89.285},{"lat":22.24,"lng":89.321},{"lat":22.24,"lng":89.321},{"lat":22.384674,"lng":89.281846},{"lat":22.535,"lng":89.25},{"lat":22.626,"lng":89.302},{"lat":22.492,"lng":89.413},{"lat":22.689,"lng":89.3058},{"lat":22.68237,"lng":89.277425},{"lat":22.55385,"lng":89.30564},{"lat":22.628,"lng":89.265},{"lat":22.524,"lng":89.398},{"lat":22.826,"lng":89.568},{"lat":22.811,"lng":89.641},{"lat":22.833,"lng":89.61},{"lat":22.798,"lng":89.643},{"lat":22.86812,"lng":89.65792},{"lat":22.924388,"lng":89.578509},{"lat":22.877,"lng":89.57},{"lat":22.925,"lng":89.726},{"lat":22.877,"lng":89.695},{"lat":22.521778,"lng":90.048396},{"lat":22.633731,"lng":90.062538},{"lat":22.741721,"lng":90.132119},{"lat":22.421,"lng":89.197},{"lat":22.546,"lng":89.18},{"lat":22.608,"lng":89.172},{"lat":22.558,"lng":89.239},{"lat":22.616,"lng":89.167},{"lat":22.472,"lng":89.26},{"lat":22.624,"lng":89.164},{"lat":22.385628,"lng":89.221302},{"lat":22.576,"lng":88.952},{"lat":22.640522,"lng":88.986807},{"lat":22.549833,"lng":89.01069},{"lat":22.607559,"lng":89.000631},{"lat":22.5888,"lng":88.998},{"lat":22.912,"lng":88.925},{"lat":22.923247,"lng":89.096872},{"lat":22.884,"lng":89.026},{"lat":22.8567,"lng":89.0654},{"lat":22.894378,"lng":89.098284},{"lat":22.878274,"lng":89.110883},{"lat":22.8585,"lng":89.053},{"lat":22.82,"lng":88.991},{"lat":22.927,"lng":89.003},{"lat":22.882713,"lng":89.040134},{"lat":22.845,"lng":89.024},{"lat":22.878,"lng":88.982},{"lat":22.472,"lng":89.015},{"lat":22.444904,"lng":89.116236},{"lat":22.511,"lng":89.14},{"lat":22.457,"lng":89.072},{"lat":22.407,"lng":89.023},{"lat":22.389769,"lng":89.119627},{"lat":22.432,"lng":89.037},{"lat":22.433,"lng":89.027},{"lat":22.404,"lng":89.066},{"lat":22.512,"lng":89.015},{"lat":22.352166,"lng":89.027636},{"lat":22.495593,"lng":89.067756},{"lat":22.354,"lng":89.201},{"lat":22.368,"lng":89.073},{"lat":22.282,"lng":89.202},{"lat":22.304,"lng":89.123},{"lat":22.228,"lng":89.052},{"lat":22.334713,"lng":89.036931},{"lat":22.242845,"lng":89.088467},{"lat":22.805,"lng":89.118},{"lat":22.746,"lng":89.232},{"lat":22.711,"lng":89.257},{"lat":22.737,"lng":89.308},{"lat":22.72401,"lng":89.23294},{"lat":22.666,"lng":89.262},{"lat":22.770664,"lng":89.182361},{"lat":22.768103,"lng":89.164601},{"lat":22.782014,"lng":89.109108},{"lat":22.751996,"lng":89.257524},{"lat":22.797,"lng":89.229},{"lat":23.96894,"lng":89.828909},{"lat":23.862522,"lng":89.91813},{"lat":23.847618,"lng":89.937592},{"lat":23.887833,"lng":89.866519},{"lat":23.806672,"lng":89.962911},{"lat":23.930424,"lng":89.864015},{"lat":23.911602,"lng":89.913873},{"lat":23.769855,"lng":89.874812},{"lat":23.749419,"lng":89.982776},{"lat":23.770923,"lng":89.914859},{"lat":23.768792,"lng":89.918008},{"lat":23.739109,"lng":90.00058},{"lat":23.993679,"lng":90.04216},{"lat":23.994454,"lng":89.957876},{"lat":23.972795,"lng":89.987479},{"lat":23.916876,"lng":90.050221},{"lat":24.009296,"lng":89.974403},{"lat":23.931983,"lng":90.013052},{"lat":23.952761,"lng":90.013161},{"lat":23.973478,"lng":90.038722},{"lat":23.923638,"lng":89.977456},{"lat":23.76224,"lng":89.864349},{"lat":23.84655,"lng":89.884147},{"lat":23.8372894,"lng":89.7859063},{"lat":23.8146004,"lng":89.8745611},{"lat":23.7960151,"lng":89.8325916},{"lat":23.870026,"lng":89.805027},{"lat":23.780296,"lng":90.109855},{"lat":23.828928,"lng":90.089443},{"lat":23.73928,"lng":90.210139},{"lat":23.771997,"lng":90.129144},{"lat":23.811167,"lng":90.225735},{"lat":23.771707,"lng":90.204748},{"lat":23.7348875,"lng":90.1018733},{"lat":23.807163,"lng":90.181257},{"lat":23.764407,"lng":90.16472},{"lat":23.840949,"lng":90.131188},{"lat":24.080664,"lng":90.84975},{"lat":24.113539,"lng":90.817505},{"lat":24.09746,"lng":90.858955},{"lat":24.145992,"lng":90.839806},{"lat":24.06504,"lng":90.88571},{"lat":24.201281,"lng":90.780806},{"lat":24.18905,"lng":90.73159},{"lat":24.173224,"lng":90.698611},{"lat":24.080631,"lng":90.707472},{"lat":24.12811,"lng":90.7553},{"lat":24.15915,"lng":90.75105},{"lat":24.21411,"lng":90.72492},{"lat":24.19597,"lng":90.68606},{"lat":24.1228,"lng":90.70167},{"lat":24.01436,"lng":90.66367},{"lat":23.96524,"lng":90.704614},{"lat":23.93174,"lng":90.67496},{"lat":23.959459,"lng":90.771915},{"lat":23.97137,"lng":90.7554},{"lat":24.05843,"lng":90.68672},{"lat":24.01614,"lng":90.8251},{"lat":24.06394,"lng":90.81134},{"lat":24.04207,"lng":90.71212},{"lat":23.964883,"lng":90.733971},{"lat":24.00932,"lng":90.70615},{"lat":23.97147,"lng":90.755256},{"lat":23.98975,"lng":90.38089},{"lat":23.93421,"lng":90.365571},{"lat":23.99192,"lng":90.38201},{"lat":24.011803,"lng":90.322007},{"lat":23.923584,"lng":90.448031},{"lat":24.017594,"lng":90.198807},{"lat":24.11736,"lng":90.2984},{"lat":24.10596,"lng":90.23922},{"lat":24.030825,"lng":90.167471},{"lat":24.043786,"lng":90.295493},{"lat":24.067122,"lng":90.21078},{"lat":23.97721,"lng":90.54442},{"lat":23.89925,"lng":90.48302},{"lat":24.18973,"lng":90.63529},{"lat":24.15821,"lng":90.66112},{"lat":24.108128,"lng":90.641663},{"lat":24.12934,"lng":90.62234},{"lat":24.108128,"lng":90.641663},{"lat":24.232135,"lng":90.545857},{"lat":24.13999,"lng":90.576026},{"lat":24.24398,"lng":90.522067},{"lat":24.18065,"lng":90.538918},{"lat":24.233303,"lng":90.465954},{"lat":23.619779,"lng":90.098199},{"lat":23.63153,"lng":90.07795},{"lat":23.619372,"lng":90.084925},{"lat":23.53793,"lng":90.172983},{"lat":23.619372,"lng":90.149815},{"lat":23.64872,"lng":90.044096},{"lat":23.636608,"lng":90.106078},{"lat":23.597955,"lng":90.138408},{"lat":23.703654,"lng":90.399705},{"lat":23.733492,"lng":90.240811},{"lat":23.7315752,"lng":90.3231385},{"lat":23.707781,"lng":90.397271},{"lat":23.637031,"lng":90.454569},{"lat":23.719947,"lng":90.347662},{"lat":23.695112,"lng":90.414208},{"lat":23.670545,"lng":90.411466},{"lat":23.6441335,"lng":90.2064389},{"lat":23.643642,"lng":90.174956},{"lat":23.656874,"lng":90.112694},{"lat":23.653792,"lng":90.195422},{"lat":23.68000138,"lng":90.0663217},{"lat":23.6153202,"lng":90.2241777},{"lat":23.6244231,"lng":90.205008},{"lat":23.667368,"lng":90.138538},{"lat":23.7111053,"lng":90.0487598},{"lat":23.678904,"lng":90.233509},{"lat":23.658985,"lng":90.160889},{"lat":23.7111053,"lng":90.0487598},{"lat":23.693834,"lng":90.070394},{"lat":23.644395,"lng":90.21396},{"lat":24.888425,"lng":91.470075},{"lat":24.90026,"lng":91.01789},{"lat":24.96856,"lng":90.97811},{"lat":24.94566,"lng":90.99854},{"lat":25.118617,"lng":91.606728},{"lat":25.151289,"lng":91.570575},{"lat":25.048281,"lng":91.558242},{"lat":25.078269,"lng":91.548369},{"lat":25.122592,"lng":91.537706},{"lat":25.100289,"lng":91.650719},{"lat":24.7203,"lng":91.631222},{"lat":24.828808,"lng":91.512542},{"lat":24.787147,"lng":91.636239},{"lat":24.794911,"lng":91.586089},{"lat":24.751544,"lng":91.587656},{"lat":24.998344,"lng":91.236225},{"lat":24.971656,"lng":91.351578},{"lat":25.008042,"lng":91.379281},{"lat":24.99313,"lng":91.308807},{"lat":25.103542,"lng":91.211736},{"lat":25.097006,"lng":91.175469},{"lat":25.168389,"lng":91.231639},{"lat":26.087638,"lng":89.667766},{"lat":26.094878,"lng":89.707205},{"lat":25.988495,"lng":89.313275},{"lat":26.301928,"lng":89.083662},{"lat":26.315302,"lng":89.02361},{"lat":26.360331,"lng":88.997804},{"lat":26.419247,"lng":88.977394},{"lat":24.302729,"lng":89.722031},{"lat":24.41073,"lng":89.59728},{"lat":24.36013,"lng":89.66301},{"lat":24.37943,"lng":89.36369},{"lat":24.27343,"lng":89.57257},{"lat":23.614539,"lng":90.640733},{"lat":23.547019,"lng":90.668228},{"lat":23.616294,"lng":90.326744},{"lat":23.804058,"lng":90.704058},{"lat":22.303253,"lng":89.307251},{"lat":22.541156,"lng":89.236587},{"lat":22.561037,"lng":89.094746},{"lat":24.189111,"lng":90.30927},{"lat":24.077445,"lng":90.31815},{"lat":23.964668,"lng":90.615593},{"lat":23.966894,"lng":90.615705},{"lat":24.01948,"lng":90.530224},{"lat":24.031076,"lng":90.616844},{"lat":24.053604,"lng":90.544865},{"lat":24.26185,"lng":90.642961},{"lat":24.267781,"lng":90.335678},{"lat":24.311389,"lng":90.511536},{"lat":24.211471,"lng":90.379477},{"lat":24.055052,"lng":90.47598},{"lat":24.106601,"lng":90.496191},{"lat":23.863483,"lng":90.455787},{"lat":22.129636,"lng":90.231125},{"lat":22.307106,"lng":90.093119},{"lat":22.158714,"lng":90.111983},{"lat":22.4133,"lng":90.167594},{"lat":22.968525,"lng":90.161981},{"lat":22.820164,"lng":90.325814},{"lat":22.538331,"lng":90.338111},{"lat":22.782606,"lng":90.158008},{"lat":22.701239,"lng":90.363339},{"lat":22.971586,"lng":90.22795},{"lat":22.817047,"lng":90.245428},{"lat":22.67785,"lng":90.644836},{"lat":22.499942,"lng":90.717636},{"lat":22.18645,"lng":90.760061},{"lat":22.597897,"lng":90.747253},{"lat":22.336897,"lng":90.732475},{"lat":22.412903,"lng":90.852272},{"lat":23.165132,"lng":89.213527},{"lat":23.103419,"lng":89.103426},{"lat":22.906137,"lng":89.215751},{"lat":23.020806,"lng":89.233151},{"lat":23.194217,"lng":90.447567},{"lat":23.140583,"lng":90.440183},{"lat":23.06625,"lng":90.43868},{"lat":23.304133,"lng":90.406033},{"lat":23.215385,"lng":90.348414},{"lat":23.332689,"lng":90.3214},{"lat":24.59132,"lng":92.1153},{"lat":24.35398,"lng":91.85172},{"lat":24.52224,"lng":92.03432},{"lat":24.48986,"lng":91.76665},{"lat":24.53286,"lng":91.854},{"lat":25.104087,"lng":91.304906},{"lat":25.03068,"lng":91.65954},{"lat":24.939827,"lng":91.411143},{"lat":24.78948,"lng":91.35451},{"lat":24.99682,"lng":91.23602},{"lat":24.887193,"lng":91.883425},{"lat":24.65611,"lng":91.82172},{"lat":24.826241,"lng":92.157885},{"lat":24.81571,"lng":91.75391},{"lat":24.82877,"lng":91.90211},{"lat":24.70017,"lng":91.9398},{"lat":24.8569,"lng":92.01435},{"lat":25.00666,"lng":92.2602},{"lat":24.89132,"lng":91.89111},{"lat":24.87799,"lng":92.36906},{"lat":24.90026,"lng":91.01789},{"lat":24.230838,"lng":90.056519},{"lat":24.463352,"lng":89.873394},{"lat":24.16234,"lng":89.968291},{"lat":24.673512,"lng":89.95329},{"lat":24.479638,"lng":89.973939},{"lat":24.562412,"lng":89.927098},{"lat":24.386761,"lng":89.994462},{"lat":24.098166,"lng":90.099468},{"lat":24.057324,"lng":89.878172},{"lat":24.319581,"lng":90.169843},{"lat":24.266821,"lng":89.926921},{"lat":26.1129143,"lng":89.6678178},{"lat":25.9018349,"lng":89.011786},{"lat":25.9287179,"lng":88.8573421},{"lat":25.7827131,"lng":88.8958569},{"lat":26.0222701,"lng":89.017657},{"lat":26.1514101,"lng":88.9211461},{"lat":26.3441689,"lng":89.022365},{"lat":25.9671611,"lng":89.226351},{"lat":25.9182469,"lng":89.4455401},{"lat":25.8111251,"lng":89.6338761},{"lat":26.1220639,"lng":89.142711},{"lat":25.9239341,"lng":89.348012},{"lat":25.7967561,"lng":89.5457609},{"lat":25.9665534,"lng":89.6911171},{"lat":25.9486951,"lng":89.5530739},{"lat":25.6632271,"lng":89.6181601},{"lat":24.17251,"lng":89.5946},{"lat":24.31266,"lng":89.5685},{"lat":24.42819,"lng":89.3737},{"lat":24.45344,"lng":89.7069},{"lat":24.17251,"lng":89.5946},{"lat":24.52829,"lng":89.5386},{"lat":24.11489,"lng":89.80059},{"lat":24.36242,"lng":89.65845},{"lat":24.61495,"lng":89.64457},{"lat":23.541635,"lng":90.616793},{"lat":23.467563,"lng":90.333159},{"lat":23.5523,"lng":90.5402},{"lat":23.562486,"lng":90.379626},{"lat":23.509742,"lng":90.467409},{"lat":23.792039,"lng":90.659586},{"lat":23.584868,"lng":90.528804},{"lat":23.552021,"lng":90.539884},{"lat":23.777985,"lng":90.52215},{"lat":23.636225,"lng":90.594062},{"lat":23.294329,"lng":89.703347},{"lat":23.3847,"lng":89.98197},{"lat":23.38958,"lng":89.68694},{"lat":23.56286,"lng":90.00627},{"lat":23.605407,"lng":89.850517},{"lat":23.41973,"lng":89.89379},{"lat":23.47304,"lng":90.02564},{"lat":23.437622,"lng":89.787663},{"lat":23.48487,"lng":89.40469},{"lat":23.401299,"lng":89.597759},{"lat":23.374242,"lng":89.371911},{"lat":23.592482,"lng":89.395121},{"lat":23.63576,"lng":89.55122},{"lat":23.72669,"lng":89.75341},{"lat":23.76305,"lng":89.48604},{"lat":23.78775,"lng":89.42299},{"lat":23.761796,"lng":89.648313},{"lat":25.190585,"lng":89.869879},{"lat":25.16649,"lng":89.763426},{"lat":25.07384,"lng":89.80057},{"lat":24.922314,"lng":89.946272},{"lat":24.907113,"lng":89.718926},{"lat":24.98136,"lng":89.828138},{"lat":24.752997,"lng":89.83827},{"lat":24.406246,"lng":90.390148},{"lat":25.088961,"lng":90.521048},{"lat":24.632643,"lng":90.2703},{"lat":24.758052,"lng":90.572767},{"lat":25.115857,"lng":90.336396},{"lat":24.6891,"lng":90.597935},{"lat":24.76275,"lng":90.264297},{"lat":24.754481,"lng":90.405117},{"lat":24.569433,"lng":90.690187},{"lat":24.946509,"lng":90.365693},{"lat":24.809482,"lng":90.865371},{"lat":24.898611,"lng":90.883778},{"lat":25.118954,"lng":90.679025},{"lat":25.075271,"lng":90.885383},{"lat":24.661772,"lng":90.841223},{"lat":24.866936,"lng":90.729859},{"lat":25.186085,"lng":90.067317},{"lat":24.967256,"lng":90.181649},{"lat":25.015762,"lng":90.007493},{"lat":22.650423,"lng":89.801481},{"lat":22.786935,"lng":89.878077},{"lat":22.771331,"lng":89.712615},{"lat":22.64914,"lng":89.87908},{"lat":22.931956,"lng":89.804583},{"lat":22.45313,"lng":89.85836},{"lat":22.55772,"lng":89.65372},{"lat":22.3142,"lng":89.85286},{"lat":23.00106,"lng":89.82851},{"lat":23.23565,"lng":89.72017},{"lat":22.98136,"lng":90.00539},{"lat":23.31928,"lng":89.86885},{"lat":22.73741,"lng":89.51462},{"lat":22.869114,"lng":89.525919},{"lat":22.891068,"lng":89.536506},{"lat":22.819388,"lng":89.434071},{"lat":22.349306,"lng":89.286819},{"lat":22.584603,"lng":89.320419},{"lat":22.7998,"lng":89.643065},{"lat":22.93856,"lng":89.66858},{"lat":22.485967,"lng":90.060664},{"lat":22.62381,"lng":90.05867},{"lat":22.29475,"lng":89.9538},{"lat":22.74477,"lng":90.099201},{"lat":22.57885,"lng":89.97537},{"lat":22.54816,"lng":89.17749},{"lat":22.55642,"lng":88.9622},{"lat":22.86155,"lng":89.04083},{"lat":22.45598,"lng":89.02467},{"lat":22.71626,"lng":89.07442},{"lat":22.342665,"lng":89.100395},{"lat":22.75042,"lng":89.25909},{"lat":23.940373,"lng":89.820386},{"lat":23.901194,"lng":89.870591},{"lat":23.722479,"lng":89.947983},{"lat":23.873541,"lng":89.997708},{"lat":23.972322,"lng":90.036833},{"lat":23.867259,"lng":89.757918},{"lat":23.816447,"lng":90.145205},{"lat":24.10034,"lng":90.85268},{"lat":24.14776,"lng":90.69699},{"lat":23.92654,"lng":90.72083},{"lat":23.97782,"lng":90.65281},{"lat":23.993903,"lng":90.868303},{"lat":24.04155,"lng":90.73923},{"lat":23.990027,"lng":90.377891},{"lat":24.066301,"lng":90.216992},{"lat":23.925619,"lng":90.576763},{"lat":24.111913,"lng":90.569705},{"lat":24.198606,"lng":90.477532},{"lat":23.87133,"lng":90.43398},{"lat":23.600059,"lng":90.111639},{"lat":23.697608,"lng":90.394899},{"lat":23.6606822,"lng":90.162443},{"lat":25.098219,"lng":91.173231},{"lat":24.266533,"lng":89.9264},{"lat":26.03502,"lng":88.46779},{"lat":24.887066,"lng":91.883329},{"lat":23.215337,"lng":90.348648},{"lat":24.45191,"lng":89.70349},{"lat":24.362772,"lng":88.604075},{"lat":25.743564,"lng":89.252072},{"lat":22.661714,"lng":92.157911},{"lat":23.76178,"lng":89.64837},{"lat":22.358494,"lng":90.319058},{"lat":24.411842,"lng":88.991717},{"lat":25.847057,"lng":88.873312},{"lat":23.636081,"lng":90.594342},{"lat":23.620405,"lng":90.501181},{"lat":23.681,"lng":90.538},{"lat":24.8065,"lng":88.97852},{"lat":24.754377,"lng":90.405159},{"lat":23.535878,"lng":90.289024},{"lat":23.170761,"lng":90.219494},{"lat":23.910056,"lng":89.116639},{"lat":22.82301,"lng":89.552481},{"lat":23.118436,"lng":91.985098},{"lat":22.957076,"lng":91.864411},{"lat":23.045153,"lng":88.899735},{"lat":22.64974,"lng":90.198697},{"lat":23.544828,"lng":89.172778},{"lat":23.165,"lng":89.2135},{"lat":23.990049,"lng":90.377986},{"lat":22.650423,"lng":89.801481},{"lat":23.605539,"lng":89.850289},{"lat":23.009291,"lng":91.394091},{"lat":23.008458,"lng":91.373805},{"lat":25.499866,"lng":88.955112},{"lat":23.867989,"lng":90.399244},{"lat":23.752496,"lng":90.392976},{"lat":23.932836,"lng":90.26785},{"lat":23.731706,"lng":90.411433},{"lat":23.805721,"lng":90.368105},{"lat":23.748698,"lng":90.368247},{"lat":23.7881,"lng":90.4016},{"lat":21.443072,"lng":91.976835},{"lat":21.765071,"lng":92.076189},{"lat":23.466194,"lng":91.174119},{"lat":23.414854,"lng":91.173064},{"lat":23.51687,"lng":90.86005},{"lat":23.6019,"lng":90.9845},{"lat":23.149194,"lng":91.322247},{"lat":22.104195,"lng":92.07386},{"lat":22.561394,"lng":91.684581},{"lat":22.358483,"lng":91.824898},{"lat":22.326382,"lng":91.813176},{"lat":22.701384,"lng":90.363254},{"lat":24.842059,"lng":89.37609},{"lat":22.05,"lng":92.109111},{"lat":24.38857,"lng":89.74401},{"lat":22.359485,"lng":90.316876},{"lat":24.02354,"lng":89.23411},{"lat":23.980547,"lng":90.638186},{"lat":24.73469,"lng":90.42146},{"lat":23.155828,"lng":90.137887},{"lat":24.30776,"lng":91.70227},{"lat":23.88078,"lng":89.09501},{"lat":24.41873,"lng":90.79025},{"lat":22.858757,"lng":89.525745},{"lat":23.14673,"lng":89.20813},{"lat":23.02333,"lng":89.40546},{"lat":23.52981,"lng":89.17716},{"lat":24.25302,"lng":91.3803},{"lat":24.24883,"lng":90.40086},{"lat":21.752604,"lng":92.077048},{"lat":23.544505,"lng":90.783486},{"lat":22.492296,"lng":91.8101},{"lat":22.15181,"lng":92.069934},{"lat":22.674721,"lng":90.340086},{"lat":24.830556,"lng":89.351158},{"lat":24.04374,"lng":91.0146},{"lat":24.65943,"lng":91.93406},{"lat":23.84881,"lng":90.257064},{"lat":23.780547,"lng":90.404009},{"lat":23.780056,"lng":90.410124},{"lat":23.78029,"lng":90.40646},{"lat":23.781406,"lng":90.400632},{"lat":23.780442,"lng":90.407967},{"lat":23.780463,"lng":90.407717},{"lat":23.780384,"lng":90.410477},{"lat":24.462053,"lng":89.872365},{"lat":22.516303,"lng":89.018765},{"lat":23.958847,"lng":89.606665},{"lat":24.595847,"lng":88.267853},{"lat":23.61543,"lng":90.332696},{"lat":24.340138,"lng":90.82518},{"lat":23.9467,"lng":90.386},{"lat":24.220878,"lng":90.411753},{"lat":24.010833,"lng":90.322778},{"lat":25.862043,"lng":88.655024},{"lat":23.834167,"lng":90.417222},{"lat":23.78101,"lng":90.402473},{"lat":23.951311,"lng":90.273318},{"lat":23.74455,"lng":90.34822},{"lat":24.878281,"lng":89.17535},{"lat":24.605247,"lng":90.027467},{"lat":21.43333,"lng":92.00099},{"lat":23.25,"lng":90.7689},{"lat":24.2486,"lng":89.9137},{"lat":24.09664,"lng":90.167676},{"lat":24.3865,"lng":89.8325},{"lat":24.338197,"lng":89.923708},{"lat":24.4797,"lng":89.9736},{"lat":26.0341,"lng":88.4626},{"lat":24.857635,"lng":92.013146},{"lat":24.8217,"lng":92.1522},{"lat":25.0879,"lng":90.1916},{"lat":23.2169,"lng":90.3488},{"lat":25.0699,"lng":91.4088},{"lat":25.049947,"lng":91.389858},{"lat":25.036669,"lng":91.664903},{"lat":22.763333,"lng":89.165556},{"lat":22.7121,"lng":89.0703},{"lat":22.861,"lng":89.0371},{"lat":24.3098,"lng":89.5675},{"lat":24.1284,"lng":89.5824},{"lat":24.1757,"lng":89.5952},{"lat":24.294,"lng":89.6958},{"lat":24.4094,"lng":88.6107},{"lat":24.3677,"lng":88.5909},{"lat":25.6608,"lng":89.4029},{"lat":25.574,"lng":89.271},{"lat":22.6572,"lng":89.7979},{"lat":23.7884,"lng":89.4167},{"lat":22.3579,"lng":90.341},{"lat":21.9848,"lng":90.22},{"lat":26.122333,"lng":88.758358},{"lat":24.0073,"lng":89.2393},{"lat":24.0826,"lng":89.051},{"lat":24.127,"lng":89.0646},{"lat":22.18604,"lng":90.76023},{"lat":24.2303,"lng":89.2866},{"lat":24.597,"lng":88.2702},{"lat":23.970525,"lng":90.725738},{"lat":23.1659,"lng":89.4983},{"lat":22.870211,"lng":91.096656},{"lat":22.833276,"lng":91.100589},{"lat":23.82547,"lng":91.154225},{"lat":22.858526,"lng":91.228729},{"lat":22.945583,"lng":91.120309},{"lat":24.8156,"lng":88.9444},{"lat":24.4577,"lng":90.5487},{"lat":24.952356,"lng":90.366859},{"lat":23.543194,"lng":90.666056},{"lat":23.771,"lng":88.632},{"lat":23.8172,"lng":88.7521},{"lat":23.9676,"lng":91.11},{"lat":23.8701,"lng":89.9991},{"lat":24.3091,"lng":91.7304},{"lat":24.4887,"lng":91.7688},{"lat":24.525569,"lng":92.036755},{"lat":23.5577,"lng":89.4931},{"lat":25.917462,"lng":89.444667},{"lat":22.9455,"lng":90.822},{"lat":23.9288,"lng":88.9995},{"lat":23.8579,"lng":89.2387},{"lat":24.0044,"lng":88.8758},{"lat":24.0222,"lng":88.9853},{"lat":23.241112,"lng":92.06694},{"lat":25.1024,"lng":89.0276},{"lat":24.9173,"lng":89.9501},{"lat":23.4072,"lng":89.0094},{"lat":23.41,"lng":89.1376},{"lat":24.3836,"lng":91.4136},{"lat":24.087001,"lng":90.346281},{"lat":24.7559,"lng":89.3972},{"lat":24.0732,"lng":90.2126},{"lat":24.023357,"lng":90.294086},{"lat":24.6689,"lng":89.4176},{"lat":22.9638,"lng":89.8236},{"lat":22.139,"lng":90.229},{"lat":23.0085,"lng":89.8306},{"lat":22.9891,"lng":89.9908},{"lat":25.32367,"lng":89.52498},{"lat":25.330556,"lng":89.555194},{"lat":25.2818,"lng":89.353},{"lat":25.0963,"lng":89.3875},{"lat":23.4574,"lng":90.0214},{"lat":23.6068,"lng":89.8367},{"lat":23.5433,"lng":89.6275},{"lat":23.3878,"lng":89.6801},{"lat":23.17161,"lng":91.46133},{"lat":25.6561,"lng":88.9167},{"lat":25.5011,"lng":88.9542},{"lat":25.3904,"lng":88.9906},{"lat":21.44,"lng":91.976583},{"lat":23.222947,"lng":90.661022},{"lat":23.2508,"lng":90.8547},{"lat":23.136557,"lng":90.742296},{"lat":23.74349,"lng":90.99312},{"lat":23.53603,"lng":90.72081},{"lat":23.488487,"lng":91.003732},{"lat":23.5269,"lng":88.7959},{"lat":23.643878,"lng":88.846886},{"lat":22.47832,"lng":91.72132},{"lat":23.642,"lng":88.8573},{"lat":22.89275,"lng":91.53581},{"lat":22.05,"lng":92.109111},{"lat":22.6858,"lng":91.7898},{"lat":22.21542,"lng":91.84694},{"lat":24.37647,"lng":90.3749},{"lat":22.710515,"lng":90.362391},{"lat":22.3974,"lng":91.8203},{"lat":22.3493,"lng":91.7732},{"lat":22.3606,"lng":91.8191},{"lat":22.2511,"lng":91.8264},{"lat":22.53,"lng":91.919897},{"lat":24.362345,"lng":88.611862},{"lat":22.6,"lng":91.655472},{"lat":24.3777,"lng":88.624115},{"lat":23.3101,"lng":91.0843},{"lat":23.2378,"lng":90.6784},{"lat":23.321144,"lng":90.6858},{"lat":22.9444,"lng":91.104543},{"lat":20.84,"lng":92.2992},{"lat":22.789306,"lng":89.576028},{"lat":22.804083,"lng":89.564222},{"lat":22.862583,"lng":89.530972},{"lat":22.844987,"lng":89.549408},{"lat":22.9538,"lng":88.9839},{"lat":24.2979,"lng":91.5145},{"lat":24.248522,"lng":89.913722},{"lat":24.6025,"lng":89.9805},{"lat":24.59172,"lng":89.95169},{"lat":24.59172,"lng":89.95169},{"lat":24.625,"lng":89.8553},{"lat":24.895028,"lng":91.872889},{"lat":24.884667,"lng":91.889139},{"lat":24.889056,"lng":91.864472},{"lat":24.909028,"lng":91.860056},{"lat":24.894306,"lng":91.867972},{"lat":24.905833,"lng":91.853889},{"lat":24.893722,"lng":91.900944},{"lat":24.886278,"lng":91.880611},{"lat":24.879778,"lng":91.879361},{"lat":24.906806,"lng":91.864944},{"lat":24.900611,"lng":91.892083},{"lat":24.907222,"lng":91.872889},{"lat":24.909708,"lng":91.86805},{"lat":23.10425,"lng":89.553},{"lat":23.191,"lng":89.616},{"lat":23.739194,"lng":90.514494},{"lat":23.630635,"lng":90.620621},{"lat":23.685879,"lng":90.530131},{"lat":24.378333,"lng":90.368889},{"lat":22.494021,"lng":90.726496},{"lat":23.9125,"lng":90.1837},{"lat":22.818278,"lng":89.544778},{"lat":22.85859,"lng":89.535944},{"lat":23.985167,"lng":90.371833},{"lat":24.232056,"lng":90.437667},{"lat":23.9425,"lng":90.379444},{"lat":23.894249,"lng":90.390664},{"lat":23.699389,"lng":90.400806},{"lat":23.699389,"lng":90.400806},{"lat":23.869083,"lng":90.391944},{"lat":23.86661,"lng":90.38631},{"lat":23.879556,"lng":90.378917},{"lat":23.873056,"lng":90.401778},{"lat":23.867861,"lng":90.398972},{"lat":23.86527,"lng":90.403613},{"lat":23.86527,"lng":90.403613},{"lat":23.861972,"lng":90.395917},{"lat":23.861972,"lng":90.395917},{"lat":23.868594,"lng":90.390125},{"lat":23.868594,"lng":90.390125},{"lat":23.860833,"lng":90.399028},{"lat":23.876417,"lng":90.398917},{"lat":23.862388,"lng":90.393518},{"lat":23.872953,"lng":90.388242},{"lat":23.866075,"lng":90.397331},{"lat":23.876611,"lng":90.389972},{"lat":23.874986,"lng":90.383833},{"lat":23.876194,"lng":90.4115},{"lat":23.871269,"lng":90.420931},{"lat":23.869523,"lng":90.408167},{"lat":23.872839,"lng":90.381589},{"lat":23.875194,"lng":90.389389},{"lat":23.86925,"lng":90.397556},{"lat":23.869583,"lng":90.3815},{"lat":23.86246,"lng":90.398319},{"lat":23.882175,"lng":90.390736},{"lat":23.874431,"lng":90.391439},{"lat":23.866556,"lng":90.388833},{"lat":23.87025,"lng":90.386278},{"lat":23.729867,"lng":90.398142},{"lat":23.851417,"lng":90.420972},{"lat":23.875722,"lng":90.387944},{"lat":23.783033,"lng":90.377867},{"lat":23.77025,"lng":90.408056},{"lat":23.764278,"lng":90.402278},{"lat":23.762358,"lng":90.393661},{"lat":23.762559,"lng":90.387116},{"lat":22.321583,"lng":91.811333},{"lat":22.331222,"lng":91.817583},{"lat":22.387583,"lng":91.825444},{"lat":22.387583,"lng":91.825444},{"lat":22.364083,"lng":91.792972},{"lat":22.334583,"lng":91.79225},{"lat":23.706661,"lng":90.419686},{"lat":23.747139,"lng":90.410847},{"lat":22.380667,"lng":91.829333},{"lat":23.8165,"lng":90.370389},{"lat":23.804367,"lng":90.374661},{"lat":22.342972,"lng":91.835667},{"lat":23.807503,"lng":90.372058},{"lat":22.361083,"lng":91.841194},{"lat":22.338861,"lng":91.828694},{"lat":22.359806,"lng":91.856333},{"lat":23.80949,"lng":90.374822},{"lat":23.802444,"lng":90.373417},{"lat":23.808813,"lng":90.372668},{"lat":23.804722,"lng":90.369278},{"lat":23.693722,"lng":90.456861},{"lat":23.689056,"lng":90.443417},{"lat":23.684083,"lng":90.456361},{"lat":22.351361,"lng":91.827333},{"lat":23.716389,"lng":90.425472},{"lat":23.714444,"lng":90.424833},{"lat":23.789144,"lng":90.413936},{"lat":23.745808,"lng":90.421964},{"lat":23.74275,"lng":90.426972},{"lat":22.326556,"lng":91.804861},{"lat":23.73525,"lng":90.41428},{"lat":23.743389,"lng":90.413972},{"lat":23.737028,"lng":90.414833},{"lat":22.3611,"lng":91.847},{"lat":22.392778,"lng":91.866389},{"lat":22.392778,"lng":91.866389},{"lat":22.358611,"lng":91.837111},{"lat":22.357278,"lng":91.841194},{"lat":23.777002,"lng":90.353802},{"lat":23.776918,"lng":90.36542},{"lat":22.335278,"lng":91.83575},{"lat":22.335278,"lng":91.83575},{"lat":22.37091,"lng":91.822777},{"lat":22.367889,"lng":91.822528},{"lat":22.355194,"lng":91.830778},{"lat":22.326722,"lng":91.791472},{"lat":22.30575,"lng":91.791083},{"lat":22.282722,"lng":91.784333},{"lat":22.317833,"lng":91.778639},{"lat":23.772667,"lng":90.362389},{"lat":23.776528,"lng":90.36275},{"lat":23.76757,"lng":90.367785},{"lat":23.742972,"lng":90.408028},{"lat":23.715306,"lng":90.43025},{"lat":23.716442,"lng":90.433903},{"lat":23.716853,"lng":90.428196},{"lat":23.718361,"lng":90.430667},{"lat":23.713,"lng":90.426889},{"lat":23.802972,"lng":90.354583},{"lat":23.7818,"lng":90.415578},{"lat":23.786867,"lng":90.416594},{"lat":23.786867,"lng":90.416594},{"lat":23.804083,"lng":90.354278},{"lat":22.249639,"lng":91.7955},{"lat":22.293667,"lng":91.784694},{"lat":22.278417,"lng":91.774667},{"lat":22.363472,"lng":91.7955},{"lat":22.344778,"lng":91.775972},{"lat":22.344778,"lng":91.775972},{"lat":23.795556,"lng":90.358722},{"lat":23.749389,"lng":90.362361},{"lat":23.747592,"lng":90.360117},{"lat":23.752306,"lng":90.361472},{"lat":23.744306,"lng":90.364194},{"lat":23.761472,"lng":90.359306},{"lat":22.329083,"lng":91.785564},{"lat":22.330389,"lng":91.802444},{"lat":22.31775,"lng":91.809833},{"lat":22.329056,"lng":91.832389},{"lat":22.37675,"lng":91.822528},{"lat":23.754611,"lng":90.360861},{"lat":23.814417,"lng":90.354911},{"lat":23.816278,"lng":90.356639},{"lat":23.75514,"lng":90.41914},{"lat":23.766299,"lng":90.415856},{"lat":23.761054,"lng":90.430546},{"lat":23.759556,"lng":90.436528},{"lat":23.760417,"lng":90.420833},{"lat":22.355611,"lng":91.808111},{"lat":23.747028,"lng":90.352806},{"lat":23.732534,"lng":90.405064},{"lat":23.69244,"lng":90.42886},{"lat":23.826464,"lng":90.361969},{"lat":23.8243,"lng":90.367056},{"lat":22.371611,"lng":91.812472},{"lat":23.822847,"lng":90.362217},{"lat":23.81825,"lng":90.358889},{"lat":22.361389,"lng":91.814639},{"lat":22.366056,"lng":91.802},{"lat":22.366056,"lng":91.802},{"lat":22.341306,"lng":91.777583},{"lat":22.367528,"lng":91.857972},{"lat":23.8175,"lng":90.380833},{"lat":23.81516,"lng":90.368139},{"lat":23.788028,"lng":90.364889},{"lat":23.728083,"lng":90.376056},{"lat":23.745013,"lng":90.397249},{"lat":23.743972,"lng":90.40025},{"lat":23.718389,"lng":90.412639},{"lat":23.720333,"lng":90.410333},{"lat":23.712417,"lng":90.419083},{"lat":23.785972,"lng":90.371861},{"lat":23.805944,"lng":90.36275},{"lat":23.802806,"lng":90.353917},{"lat":23.802806,"lng":90.353917},{"lat":23.80443,"lng":90.367919},{"lat":23.81727,"lng":90.355141},{"lat":23.81727,"lng":90.355141},{"lat":23.805714,"lng":90.35675},{"lat":22.349306,"lng":91.818139},{"lat":22.349306,"lng":91.818139},{"lat":23.799667,"lng":90.361278},{"lat":23.813806,"lng":90.366472},{"lat":23.789444,"lng":90.349222},{"lat":23.829722,"lng":90.375056},{"lat":22.324028,"lng":91.823556},{"lat":22.330972,"lng":91.815083},{"lat":22.335111,"lng":91.802194},{"lat":23.826953,"lng":90.367481},{"lat":23.721333,"lng":90.419361},{"lat":23.721,"lng":90.424972},{"lat":23.751528,"lng":90.341944},{"lat":23.7642,"lng":90.362697},{"lat":22.378808,"lng":91.811062},{"lat":22.37888,"lng":91.811061},{"lat":23.7701,"lng":90.365319},{"lat":23.768222,"lng":90.3555},{"lat":23.709972,"lng":90.410389},{"lat":23.747658,"lng":90.409939},{"lat":23.75055,"lng":90.416665},{"lat":23.75055,"lng":90.416665},{"lat":23.821203,"lng":90.393389},{"lat":23.819833,"lng":90.381889},{"lat":22.398583,"lng":91.839444},{"lat":22.344417,"lng":91.790667},{"lat":22.296083,"lng":91.790528},{"lat":23.759028,"lng":90.353194},{"lat":23.768088,"lng":90.357646},{"lat":23.754694,"lng":90.40825},{"lat":23.751278,"lng":90.404972},{"lat":23.746056,"lng":90.406833},{"lat":23.838814,"lng":90.362669},{"lat":23.784569,"lng":90.4171},{"lat":23.718528,"lng":90.393889},{"lat":23.716389,"lng":90.392806},{"lat":23.716139,"lng":90.380917},{"lat":23.720306,"lng":90.383917},{"lat":23.718833,"lng":90.385861},{"lat":23.712694,"lng":90.388889},{"lat":23.720056,"lng":90.381444},{"lat":22.364528,"lng":91.782361},{"lat":23.757222,"lng":90.372778},{"lat":23.757222,"lng":90.372778},{"lat":22.364528,"lng":91.782361},{"lat":23.810005,"lng":90.415339},{"lat":23.796233,"lng":90.375444},{"lat":22.359278,"lng":91.788139},{"lat":23.721278,"lng":90.374861},{"lat":23.71875,"lng":90.370667},{"lat":23.710228,"lng":90.384708},{"lat":23.7133,"lng":90.3684},{"lat":23.722556,"lng":90.367444},{"lat":23.716278,"lng":90.372833},{"lat":23.720917,"lng":90.371778},{"lat":22.335639,"lng":91.832056},{"lat":23.718389,"lng":90.366889},{"lat":23.747278,"lng":90.398833},{"lat":23.747278,"lng":90.398833},{"lat":23.751906,"lng":90.392886},{"lat":23.751306,"lng":90.39575},{"lat":22.362111,"lng":91.821333},{"lat":22.19141,"lng":91.81175},{"lat":22.329056,"lng":91.832389},{"lat":22.364694,"lng":91.841972},{"lat":22.364694,"lng":91.841972},{"lat":22.368417,"lng":91.835472},{"lat":23.7345,"lng":90.432111},{"lat":23.734167,"lng":90.434722},{"lat":23.832972,"lng":90.431},{"lat":23.852944,"lng":90.428417},{"lat":23.85375,"lng":90.414917},{"lat":22.350806,"lng":91.790028},{"lat":22.340444,"lng":91.839917},{"lat":22.341667,"lng":91.781389},{"lat":23.865528,"lng":90.425222},{"lat":23.858944,"lng":90.4085},{"lat":23.858944,"lng":90.4085},{"lat":23.856639,"lng":90.429028},{"lat":23.856639,"lng":90.429028},{"lat":23.856056,"lng":90.417444},{"lat":23.856056,"lng":90.417444},{"lat":23.749194,"lng":90.42675},{"lat":23.749861,"lng":90.424139},{"lat":23.749861,"lng":90.424139},{"lat":23.755944,"lng":90.436361},{"lat":23.746472,"lng":90.424083},{"lat":23.748611,"lng":90.380806},{"lat":23.75325,"lng":90.3775},{"lat":23.754667,"lng":90.379944},{"lat":23.751833,"lng":90.383566},{"lat":23.7563,"lng":90.3786},{"lat":23.74998,"lng":90.37943},{"lat":23.739889,"lng":90.410944},{"lat":23.739889,"lng":90.410944},{"lat":23.736222,"lng":90.409583},{"lat":23.453889,"lng":91.198611},{"lat":23.791972,"lng":90.386389},{"lat":23.791972,"lng":90.386389},{"lat":23.706167,"lng":90.449056},{"lat":23.712333,"lng":90.432722},{"lat":23.704417,"lng":90.452167},{"lat":23.811472,"lng":90.414972},{"lat":23.811472,"lng":90.414972},{"lat":23.7005,"lng":90.432889},{"lat":23.692083,"lng":90.443556},{"lat":23.698889,"lng":90.435278},{"lat":23.740333,"lng":90.365361},{"lat":23.737361,"lng":90.366889},{"lat":23.704333,"lng":90.429972},{"lat":23.705528,"lng":90.444806},{"lat":23.705972,"lng":90.409694},{"lat":23.707306,"lng":90.410472},{"lat":23.707472,"lng":90.406944},{"lat":23.7945,"lng":90.385889},{"lat":23.793472,"lng":90.379028},{"lat":23.797472,"lng":90.381861},{"lat":23.746583,"lng":90.39125},{"lat":23.746583,"lng":90.39125},{"lat":23.761643,"lng":90.38945},{"lat":23.727742,"lng":90.417012},{"lat":23.793852,"lng":90.407978},{"lat":23.725,"lng":90.371722},{"lat":23.718778,"lng":90.425167},{"lat":23.722444,"lng":90.425806},{"lat":23.719917,"lng":90.427},{"lat":23.774778,"lng":90.417028},{"lat":23.774778,"lng":90.417028},{"lat":23.804667,"lng":90.408444},{"lat":23.79497,"lng":90.41081},{"lat":23.79875,"lng":90.412417},{"lat":23.794074,"lng":90.414288},{"lat":23.778972,"lng":90.414833},{"lat":23.802061,"lng":90.40825},{"lat":23.780663,"lng":90.418395},{"lat":23.780663,"lng":90.418395},{"lat":23.782373,"lng":90.413865},{"lat":23.734447,"lng":90.384911},{"lat":23.74325,"lng":90.387444},{"lat":23.703917,"lng":90.422111},{"lat":23.703972,"lng":90.427028},{"lat":23.6981,"lng":90.4317},{"lat":23.702833,"lng":90.423972},{"lat":23.751281,"lng":90.386336},{"lat":23.72944,"lng":90.416665},{"lat":23.729584,"lng":90.416719},{"lat":23.730497,"lng":90.409243},{"lat":23.753781,"lng":90.400239},{"lat":23.950556,"lng":90.285556},{"lat":23.956389,"lng":90.277222},{"lat":23.739167,"lng":90.385556},{"lat":23.794469,"lng":90.413575},{"lat":23.813917,"lng":90.410167},{"lat":23.813917,"lng":90.410167},{"lat":23.71075,"lng":90.451889},{"lat":23.718583,"lng":90.490444},{"lat":23.712167,"lng":90.457083},{"lat":23.711111,"lng":90.469444},{"lat":23.708861,"lng":90.494},{"lat":23.707806,"lng":90.459556},{"lat":23.69916,"lng":90.45611},{"lat":23.850778,"lng":90.434556},{"lat":23.7415,"lng":90.3841},{"lat":23.74525,"lng":90.375167},{"lat":23.738064,"lng":90.377031},{"lat":23.747417,"lng":90.376833},{"lat":23.757639,"lng":90.381417},{"lat":23.754333,"lng":90.373139},{"lat":23.754333,"lng":90.373139},{"lat":23.753472,"lng":90.375222},{"lat":23.754264,"lng":90.374483},{"lat":23.867381,"lng":90.397261},{"lat":23.811142,"lng":90.402681},{"lat":23.789961,"lng":90.394481},{"lat":23.804889,"lng":90.399194},{"lat":23.713289,"lng":90.396728},{"lat":23.715417,"lng":90.394361},{"lat":23.713861,"lng":90.393444},{"lat":23.713583,"lng":90.401056},{"lat":23.72003,"lng":90.39847},{"lat":23.792825,"lng":90.4155},{"lat":23.792825,"lng":90.4155},{"lat":23.838889,"lng":90.385278},{"lat":23.733106,"lng":90.401186},{"lat":23.738667,"lng":90.431056},{"lat":23.747447,"lng":90.435224},{"lat":23.754806,"lng":90.442167},{"lat":23.744541,"lng":90.401582},{"lat":23.804136,"lng":90.422417},{"lat":23.723786,"lng":90.406969},{"lat":23.791028,"lng":90.403311},{"lat":23.78925,"lng":90.408139},{"lat":23.78925,"lng":90.408139},{"lat":23.793602,"lng":90.407222},{"lat":23.793602,"lng":90.407222},{"lat":23.797006,"lng":90.402506},{"lat":23.862967,"lng":90.404373},{"lat":23.8085,"lng":90.426},{"lat":23.815946,"lng":90.432621},{"lat":23.763211,"lng":90.344792},{"lat":23.769194,"lng":90.353611},{"lat":23.757356,"lng":90.351489},{"lat":23.768478,"lng":90.351536},{"lat":23.768478,"lng":90.351536},{"lat":23.77261,"lng":90.355176},{"lat":23.770356,"lng":90.354886},{"lat":23.781944,"lng":90.37075},{"lat":23.781944,"lng":90.37075},{"lat":23.739944,"lng":90.376028},{"lat":23.739944,"lng":90.376028},{"lat":23.797046,"lng":90.342559},{"lat":23.771056,"lng":90.309333},{"lat":23.815946,"lng":90.432621},{"lat":23.73113,"lng":90.420168},{"lat":23.722109,"lng":90.378973},{"lat":23.723564,"lng":90.379663},{"lat":23.728028,"lng":90.380306},{"lat":23.726722,"lng":90.384306},{"lat":23.712778,"lng":90.4055},{"lat":23.78411,"lng":90.422802},{"lat":23.78411,"lng":90.422802},{"lat":23.492038,"lng":90.262183},{"lat":23.813628,"lng":90.427972},{"lat":23.805028,"lng":90.419556},{"lat":23.805028,"lng":90.419556},{"lat":23.806,"lng":90.425639},{"lat":23.806,"lng":90.425639},{"lat":23.808194,"lng":90.417972},{"lat":23.798111,"lng":90.428028},{"lat":23.751056,"lng":90.437278},{"lat":23.741056,"lng":90.429611},{"lat":23.741056,"lng":90.429611},{"lat":23.759436,"lng":90.461856},{"lat":23.756944,"lng":90.442306},{"lat":23.782583,"lng":90.429667},{"lat":23.78592,"lng":90.42814},{"lat":23.78592,"lng":90.42814},{"lat":23.790139,"lng":90.423361},{"lat":23.775417,"lng":90.423417},{"lat":23.818861,"lng":90.43075},{"lat":23.812836,"lng":90.430273},{"lat":23.819889,"lng":90.436639},{"lat":23.817378,"lng":90.433417},{"lat":23.815489,"lng":90.429436},{"lat":23.812858,"lng":90.426836},{"lat":23.737822,"lng":90.381111},{"lat":23.811892,"lng":90.384828},{"lat":23.72057,"lng":90.39445},{"lat":23.724195,"lng":90.405611},{"lat":23.902665,"lng":90.405351},{"lat":24.2481,"lng":90.1149},{"lat":24.348396,"lng":90.205927},{"lat":24.319927,"lng":90.166726},{"lat":24.30482,"lng":89.92233},{"lat":24.25581,"lng":89.91621},{"lat":24.25016,"lng":89.92314},{"lat":24.2337,"lng":89.9201},{"lat":24.2396,"lng":89.9484},{"lat":24.234722,"lng":89.860778},{"lat":24.2673,"lng":89.927},{"lat":24.2593,"lng":89.91},{"lat":24.2585,"lng":89.9193},{"lat":24.13631,"lng":90.01908},{"lat":22.058528,"lng":92.271556},{"lat":21.905333,"lng":92.323778},{"lat":22.7384,"lng":89.6391},{"lat":22.774606,"lng":89.7162},{"lat":22.361064,"lng":91.807437},{"lat":24.09721,"lng":90.14316},{"lat":22.471,"lng":89.6038},{"lat":22.5313,"lng":89.59},{"lat":22.6336,"lng":89.6446},{"lat":24.130083,"lng":90.043444},{"lat":22.6497,"lng":89.8107},{"lat":22.6623,"lng":89.7592},{"lat":22.65719,"lng":89.79591},{"lat":24.0946,"lng":90.0883},{"lat":22.5015,"lng":90.7152},{"lat":22.4275,"lng":90.7687},{"lat":24.1212,"lng":90.173},{"lat":24.0956,"lng":90.1515},{"lat":22.6007,"lng":90.7465},{"lat":22.733194,"lng":90.620861},{"lat":22.6506,"lng":90.6655},{"lat":22.6778,"lng":90.6094},{"lat":22.588888,"lng":90.6562},{"lat":23.82547,"lng":91.154225},{"lat":24.145471,"lng":90.007624},{"lat":24.0383,"lng":91.0121},{"lat":24.3613,"lng":90.047},{"lat":23.804222,"lng":90.839639},{"lat":23.740639,"lng":90.789556},{"lat":23.780528,"lng":90.815278},{"lat":23.884801,"lng":90.970342},{"lat":23.8911,"lng":90.96843},{"lat":23.8345,"lng":90.901},{"lat":24.332,"lng":90.0285},{"lat":23.991556,"lng":91.050139},{"lat":23.9696,"lng":91.1172},{"lat":23.98985,"lng":91.10498},{"lat":23.97519,"lng":91.11451},{"lat":23.88077,"lng":91.13739},{"lat":24.47451,"lng":89.9728},{"lat":24.45969,"lng":90.09278},{"lat":25.0147,"lng":89.3693},{"lat":24.951,"lng":89.3506},{"lat":24.8445,"lng":89.3477},{"lat":24.8893,"lng":89.3606},{"lat":24.8657,"lng":89.3596},{"lat":24.8592,"lng":89.3499},{"lat":24.8365,"lng":89.3817},{"lat":24.8435,"lng":89.3665},{"lat":24.8657,"lng":89.3596},{"lat":24.123722,"lng":89.893306},{"lat":24.2042,"lng":89.937},{"lat":24.1882,"lng":89.9974},{"lat":24.8263,"lng":89.3776},{"lat":24.8272,"lng":89.3575},{"lat":24.2338,"lng":90.0163},{"lat":24.6544,"lng":89.4242},{"lat":24.2305,"lng":90.0513},{"lat":22.050333,"lng":90.238889},{"lat":22.248167,"lng":90.323972},{"lat":22.9702,"lng":90.1541},{"lat":22.77569,"lng":90.30561},{"lat":22.5417,"lng":90.3372},{"lat":22.4974,"lng":90.3429},{"lat":22.6369,"lng":90.4167},{"lat":22.7847,"lng":90.1564},{"lat":22.9375,"lng":90.2346},{"lat":22.699501,"lng":90.369777},{"lat":22.7178,"lng":90.3671},{"lat":22.6909,"lng":90.3608},{"lat":22.69971,"lng":90.36389},{"lat":22.724788,"lng":90.361664},{"lat":24.28536,"lng":90.04685},{"lat":25.98122,"lng":88.50547},{"lat":22.8467,"lng":90.2722},{"lat":22.85819,"lng":90.11242},{"lat":22.815518,"lng":90.245393},{"lat":23.7598,"lng":88.9445},{"lat":26.0287,"lng":88.4778},{"lat":24.912888,"lng":91.848166},{"lat":23.5886,"lng":88.9365},{"lat":24.8961,"lng":91.9019},{"lat":23.6096,"lng":88.8864},{"lat":24.89726,"lng":91.86765},{"lat":24.895776,"lng":91.874451},{"lat":24.893472,"lng":91.861444},{"lat":24.89856,"lng":91.88551},{"lat":24.9108,"lng":91.85563},{"lat":24.88405,"lng":91.87012},{"lat":24.899167,"lng":91.851944},{"lat":22.203,"lng":91.8415},{"lat":24.89143,"lng":91.88467},{"lat":22.188946,"lng":91.940941},{"lat":22.23293,"lng":91.87125},{"lat":24.8983,"lng":91.8467},{"lat":22.3496,"lng":91.8551},{"lat":22.348229,"lng":91.842987},{"lat":22.3658,"lng":91.8681},{"lat":22.359617,"lng":91.856595},{"lat":22.33775,"lng":91.850472},{"lat":24.9037,"lng":91.8921},{"lat":22.3561,"lng":91.8409},{"lat":22.3326,"lng":91.855},{"lat":24.950798,"lng":91.870902},{"lat":24.912,"lng":91.9341},{"lat":24.9005,"lng":91.9133},{"lat":24.8842,"lng":91.8905},{"lat":22.4129,"lng":91.913866},{"lat":22.39525,"lng":91.901028},{"lat":22.0019,"lng":91.9531},{"lat":21.992661,"lng":91.945281},{"lat":22.044029,"lng":91.941423},{"lat":21.962472,"lng":91.9615},{"lat":22.101861,"lng":91.929083},{"lat":22.078889,"lng":91.935639},{"lat":22.00904,"lng":91.95768},{"lat":24.9346,"lng":91.9803},{"lat":22.3933,"lng":91.8256},{"lat":22.378756,"lng":91.811064},{"lat":22.3877,"lng":91.8208},{"lat":22.37394,"lng":91.80373},{"lat":22.380307,"lng":91.821092},{"lat":24.8909,"lng":91.8652},{"lat":22.378622,"lng":91.853788},{"lat":22.3618,"lng":91.8517},{"lat":22.3919,"lng":91.8643},{"lat":22.392,"lng":91.8754},{"lat":22.3735,"lng":91.846},{"lat":22.3577,"lng":91.862},{"lat":22.3838,"lng":91.8494},{"lat":22.3611,"lng":91.847},{"lat":24.918496,"lng":91.874394},{"lat":22.3695,"lng":91.8547},{"lat":24.8961,"lng":91.9019},{"lat":24.9084,"lng":91.8572},{"lat":24.90038,"lng":91.855153},{"lat":24.891102,"lng":91.873701},{"lat":22.176922,"lng":92.016364},{"lat":22.215,"lng":91.983056},{"lat":22.206889,"lng":92.035889},{"lat":24.8763,"lng":91.875},{"lat":24.8949,"lng":91.8546},{"lat":24.9037,"lng":91.8798},{"lat":24.890645,"lng":91.891121},{"lat":24.900685,"lng":91.883624},{"lat":25.1355,"lng":91.9474},{"lat":24.847,"lng":91.9511},{"lat":24.66906,"lng":91.93598},{"lat":24.7007,"lng":91.9448},{"lat":24.87086,"lng":91.90079},{"lat":22.3337,"lng":91.8124},{"lat":22.3305,"lng":91.8013},{"lat":22.328699,"lng":91.815201},{"lat":22.3385,"lng":91.8143},{"lat":22.3256,"lng":91.7958},{"lat":22.3357,"lng":91.8042},{"lat":22.333044,"lng":91.815216},{"lat":22.3158,"lng":91.806},{"lat":22.3422,"lng":91.8032},{"lat":22.326,"lng":91.815806},{"lat":22.3392,"lng":91.8101},{"lat":22.3328,"lng":91.8198},{"lat":22.3275,"lng":91.8103},{"lat":22.3452,"lng":91.8027},{"lat":22.327861,"lng":91.812056},{"lat":22.331139,"lng":91.822583},{"lat":22.328172,"lng":91.814056},{"lat":22.328,"lng":91.8126},{"lat":22.326869,"lng":91.815145},{"lat":22.3276,"lng":91.814201},{"lat":24.8011,"lng":91.912442},{"lat":24.8624,"lng":91.849},{"lat":24.8109,"lng":91.7925},{"lat":24.812939,"lng":91.755481},{"lat":24.90334,"lng":92.14906},{"lat":24.853,"lng":92.1575},{"lat":24.7857,"lng":92.1526},{"lat":22.633538,"lng":91.795287},{"lat":22.597098,"lng":91.862119},{"lat":22.621627,"lng":91.845009},{"lat":22.893858,"lng":91.673873},{"lat":22.83375,"lng":91.731194},{"lat":22.644969,"lng":91.795108},{"lat":22.812667,"lng":91.719361},{"lat":22.671111,"lng":91.790139},{"lat":22.90245,"lng":91.63605},{"lat":22.6609,"lng":91.83094},{"lat":24.7998,"lng":92.1596},{"lat":24.8075,"lng":92.1865},{"lat":24.8521,"lng":92.1283},{"lat":24.7974,"lng":92.0968},{"lat":24.7756,"lng":92.1733},{"lat":24.8813,"lng":92.1991},{"lat":24.7074,"lng":91.73353},{"lat":22.3374,"lng":91.7901},{"lat":22.338,"lng":91.7938},{"lat":22.3418,"lng":91.7716},{"lat":22.3365,"lng":91.7846},{"lat":22.2878,"lng":91.784},{"lat":22.3481,"lng":91.7781},{"lat":22.3488,"lng":91.7759},{"lat":22.504514,"lng":91.806291},{"lat":22.471399,"lng":91.785679},{"lat":22.628917,"lng":91.792917},{"lat":22.471,"lng":91.85561},{"lat":22.616611,"lng":91.795889},{"lat":22.501029,"lng":91.809695},{"lat":22.5109,"lng":91.805},{"lat":22.4449,"lng":91.8191},{"lat":22.49904,"lng":91.80749},{"lat":22.5045,"lng":91.8063},{"lat":24.7497,"lng":91.7809},{"lat":24.752,"lng":91.826},{"lat":22.361064,"lng":91.807437},{"lat":22.350725,"lng":91.818234},{"lat":22.364201,"lng":91.798103},{"lat":22.351057,"lng":91.821737},{"lat":22.352072,"lng":91.808441},{"lat":22.3554,"lng":91.8083},{"lat":22.357809,"lng":91.817369},{"lat":22.359206,"lng":91.809374},{"lat":22.37,"lng":91.8153},{"lat":22.349889,"lng":91.812694},{"lat":22.3674,"lng":91.8103},{"lat":22.3578,"lng":91.8124},{"lat":24.7236,"lng":91.7513},{"lat":22.363011,"lng":91.803564},{"lat":22.35943,"lng":91.81201},{"lat":25.0322,"lng":90.0173},{"lat":24.971967,"lng":90.172392},{"lat":23.3856,"lng":90.2945},{"lat":23.2398,"lng":90.5631},{"lat":24.928242,"lng":91.686598},{"lat":22.329615,"lng":91.834509},{"lat":22.3357,"lng":91.8311},{"lat":22.344457,"lng":91.830813},{"lat":22.3266,"lng":91.8245},{"lat":22.336818,"lng":91.825511},{"lat":22.336196,"lng":91.845368},{"lat":22.343094,"lng":91.834815},{"lat":22.337,"lng":91.837},{"lat":22.328222,"lng":91.829778},{"lat":22.339755,"lng":91.831424},{"lat":22.3301,"lng":91.8405},{"lat":22.3587,"lng":91.8356},{"lat":22.334694,"lng":91.831611},{"lat":22.3374,"lng":91.8317},{"lat":22.3333,"lng":91.8369},{"lat":22.3346,"lng":91.8361},{"lat":22.3408,"lng":91.8254},{"lat":22.3418,"lng":91.8359},{"lat":22.3377,"lng":91.8457},{"lat":22.3531,"lng":91.8338},{"lat":22.3306,"lng":91.8326},{"lat":22.3345,"lng":91.8324},{"lat":22.334672,"lng":91.8345},{"lat":22.3364,"lng":91.8302},{"lat":22.3593,"lng":91.8308},{"lat":22.348143,"lng":91.822762},{"lat":22.3355,"lng":91.8345},{"lat":22.35737,"lng":91.838039},{"lat":22.33773,"lng":91.84437},{"lat":22.3393,"lng":91.8284},{"lat":22.3482,"lng":91.843},{"lat":22.7075,"lng":89.0852},{"lat":24.4193,"lng":89.5555},{"lat":24.2242,"lng":89.6676},{"lat":21.986306,"lng":92.148306},{"lat":22.017778,"lng":92.097361},{"lat":21.97239,"lng":92.06999},{"lat":24.4542,"lng":89.6897},{"lat":24.4527,"lng":89.7051},{"lat":24.4635,"lng":89.7064},{"lat":22.780117,"lng":91.571681},{"lat":22.806826,"lng":91.557434},{"lat":24.5531,"lng":89.5056},{"lat":22.778694,"lng":91.569278},{"lat":22.7706,"lng":91.57315},{"lat":24.524,"lng":89.5351},{"lat":24.2339,"lng":89.695},{"lat":22.36604,"lng":91.82553},{"lat":22.3895,"lng":91.8236},{"lat":22.3693,"lng":91.8245},{"lat":22.3767,"lng":91.8221},{"lat":22.361,"lng":91.8276},{"lat":22.3607,"lng":91.8223},{"lat":22.3734,"lng":91.8362},{"lat":22.3729,"lng":91.8289},{"lat":22.3726,"lng":91.8333},{"lat":22.3662,"lng":91.8294},{"lat":22.3689,"lng":91.8329},{"lat":22.368,"lng":91.8373},{"lat":22.364071,"lng":91.823822},{"lat":22.3594,"lng":91.8239},{"lat":24.3603,"lng":89.7048},{"lat":24.3287,"lng":89.6893},{"lat":22.2955,"lng":91.7827},{"lat":22.3166,"lng":91.7828},{"lat":24.3805,"lng":88.5828},{"lat":22.2876,"lng":91.7858},{"lat":22.3128,"lng":91.7762},{"lat":22.3105,"lng":91.7884},{"lat":22.3027,"lng":91.788},{"lat":22.2951,"lng":91.7866},{"lat":22.3079,"lng":91.7911},{"lat":22.2924,"lng":91.7805},{"lat":22.298077,"lng":91.865796},{"lat":22.302871,"lng":91.9504},{"lat":22.314923,"lng":91.831398},{"lat":22.311701,"lng":91.826698},{"lat":22.305361,"lng":91.992667},{"lat":22.283111,"lng":91.864611},{"lat":22.321056,"lng":91.919972},{"lat":22.27852,"lng":91.83832},{"lat":22.273176,"lng":91.787597},{"lat":22.3015,"lng":91.7772},{"lat":22.2374,"lng":91.8125},{"lat":22.268365,"lng":91.778429},{"lat":22.2669,"lng":91.7891},{"lat":22.260444,"lng":91.80725},{"lat":22.2761,"lng":91.7826},{"lat":22.2653,"lng":91.8291},{"lat":22.251,"lng":91.82625},{"lat":22.35617,"lng":91.78679},{"lat":22.3536,"lng":91.777603},{"lat":22.3476,"lng":91.79},{"lat":24.36852,"lng":88.75697},{"lat":22.3702,"lng":91.7656},{"lat":22.3667,"lng":91.7722},{"lat":24.3636,"lng":88.7321},{"lat":22.3506,"lng":91.7901},{"lat":22.3484,"lng":91.7963},{"lat":22.35675,"lng":91.767588},{"lat":22.356666,"lng":91.767588},{"lat":22.3491,"lng":91.7862},{"lat":24.5109,"lng":88.3174},{"lat":22.467167,"lng":92.129861},{"lat":22.463682,"lng":92.050087},{"lat":22.572932,"lng":92.042307},{"lat":22.448536,"lng":92.038088},{"lat":22.45271,"lng":92.078781},{"lat":22.488886,"lng":92.070278},{"lat":22.4599,"lng":92.0676},{"lat":22.55,"lng":92.07},{"lat":22.4597,"lng":92.0052},{"lat":24.4689,"lng":88.3228},{"lat":22.496455,"lng":91.949066},{"lat":22.429261,"lng":91.933171},{"lat":22.474706,"lng":91.895289},{"lat":22.524012,"lng":91.867121},{"lat":22.500681,"lng":91.892624},{"lat":22.515444,"lng":91.929556},{"lat":22.425028,"lng":91.910833},{"lat":22.5421,"lng":91.920511},{"lat":24.3777,"lng":88.6241},{"lat":24.3788,"lng":88.5644},{"lat":25.74686,"lng":89.23465},{"lat":25.7419,"lng":89.2459},{"lat":25.7875,"lng":89.2095},{"lat":25.7638,"lng":89.2538},{"lat":22.4037,"lng":91.7514},{"lat":25.7559,"lng":89.2649},{"lat":22.386,"lng":91.7625},{"lat":22.616083,"lng":91.63},{"lat":22.3928,"lng":91.7867},{"lat":22.12475,"lng":92.072139},{"lat":22.163056,"lng":92.032389},{"lat":25.7337,"lng":89.2872},{"lat":25.749268,"lng":89.254511},{"lat":25.6117,"lng":89.411},{"lat":25.6736,"lng":89.271},{"lat":25.8122,"lng":89.3241},{"lat":23.517288,"lng":91.092978},{"lat":23.534306,"lng":91.185806},{"lat":23.4792,"lng":91.0374},{"lat":23.48901,"lng":91.11313},{"lat":23.552,"lng":91.1269},{"lat":23.426982,"lng":91.004039},{"lat":23.332506,"lng":91.1105},{"lat":23.4328,"lng":91.0325},{"lat":23.3642,"lng":91.11075},{"lat":23.167081,"lng":91.306208},{"lat":23.184258,"lng":91.279639},{"lat":23.203639,"lng":91.268861},{"lat":23.0919,"lng":91.3447},{"lat":23.319316,"lng":91.223492},{"lat":23.286,"lng":91.2951},{"lat":23.3226,"lng":91.2817},{"lat":23.24403,"lng":91.30817},{"lat":25.7733,"lng":89.4286},{"lat":25.843572,"lng":89.216926},{"lat":23.684143,"lng":91.022286},{"lat":23.537278,"lng":90.944083},{"lat":23.49178,"lng":91.00461},{"lat":23.66746,"lng":90.99836},{"lat":23.504999,"lng":90.934402},{"lat":22.662831,"lng":92.169444},{"lat":22.8711,"lng":92.0337},{"lat":23.485417,"lng":90.830194},{"lat":23.506779,"lng":90.721107},{"lat":23.466139,"lng":90.734419},{"lat":23.067917,"lng":92.130611},{"lat":23.51644,"lng":90.85992},{"lat":22.500944,"lng":92.136972},{"lat":23.279889,"lng":92.150417},{"lat":23.655722,"lng":90.788778},{"lat":23.67428,"lng":90.77868},{"lat":23.6986,"lng":89.7158},{"lat":23.6799,"lng":89.699},{"lat":23.7406,"lng":89.6518},{"lat":23.7627,"lng":89.7841},{"lat":23.229972,"lng":91.104139},{"lat":23.23749,"lng":91.12418},{"lat":22.3596,"lng":90.3156},{"lat":23.656417,"lng":90.969944},{"lat":23.112414,"lng":91.114594},{"lat":22.401143,"lng":90.247096},{"lat":23.221168,"lng":91.239112},{"lat":24.7517,"lng":89.83153},{"lat":24.293,"lng":89.69609},{"lat":24.92255,"lng":89.94662},{"lat":23.3847,"lng":89.98197},{"lat":24.642,"lng":89.64423},{"lat":24.789486,"lng":91.354518},{"lat":22.7998,"lng":89.643065},{"lat":24.52875,"lng":89.53852},{"lat":25.81109,"lng":89.6338},{"lat":25.071289,"lng":91.40765},{"lat":24.36165,"lng":89.65876},{"lat":24.454565,"lng":89.706644},{"lat":24.96711,"lng":90.181469},{"lat":24.42827,"lng":89.37363},{"lat":24.31277,"lng":89.56857},{"lat":24.173354,"lng":89.595175},{"lat":22.54816,"lng":89.17749},{"lat":25.92879,"lng":88.85723},{"lat":24.939827,"lng":91.411143},{"lat":22.55642,"lng":88.9622},{"lat":23.97254,"lng":90.03692},{"lat":24.266642,"lng":89.92732},{"lat":22.71626,"lng":89.07442},{"lat":25.01597,"lng":90.00748},{"lat":24.35398,"lng":91.85172},{"lat":24.86657,"lng":90.73013},{"lat":23.77801,"lng":90.5221},{"lat":23.620212,"lng":90.501386},{"lat":22.79042,"lng":89.87779},{"lat":23.56286,"lng":90.00627},{"lat":24.754377,"lng":90.405159},{"lat":23.990049,"lng":90.377986},{"lat":24.10036,"lng":90.85282},{"lat":24.82877,"lng":91.90211},{"lat":23.86805,"lng":90.399231},{"lat":23.6055,"lng":89.8503},{"lat":23.1659,"lng":89.21352},{"lat":24.86657,"lng":90.73013},{"lat":23.573891,"lng":90.499212},{"lat":24.266642,"lng":89.92732},{"lat":23.990049,"lng":90.377986},{"lat":23.00106,"lng":89.82851},{"lat":23.731706,"lng":90.411433},{"lat":23.5523,"lng":90.5402},{"lat":22.650423,"lng":89.801481},{"lat":25.92879,"lng":88.85723},{"lat":23.620212,"lng":90.501386},{"lat":22.82278,"lng":89.55249},{"lat":22.7006,"lng":90.3629},{"lat":23.75204,"lng":89.64097},{"lat":25.918249,"lng":89.445553},{"lat":24.89132,"lng":91.89111},{"lat":25.81109,"lng":89.6338},{"lat":22.71626,"lng":89.07442},{"lat":23.2151,"lng":90.3489},{"lat":24.48986,"lng":91.76665},{"lat":24.454565,"lng":89.706644},{"lat":23.48487,"lng":89.40469},{"lat":23.873323,"lng":89.997595},{"lat":24.92255,"lng":89.94662},{"lat":25.071289,"lng":91.40765},{"lat":25.01597,"lng":90.00748},{"lat":23.92659,"lng":90.72101},{"lat":22.57885,"lng":89.97537},{"lat":22.15883,"lng":90.11199},{"lat":24.661807,"lng":90.841081},{"lat":26.15146,"lng":88.92114},{"lat":23.40126,"lng":89.59783},{"lat":24.90717,"lng":89.71886},{"lat":25.78285,"lng":88.89582},{"lat":24.80922,"lng":90.86567},{"lat":25.11932,"lng":90.67927},{"lat":23.78775,"lng":89.42299},{"lat":23.76305,"lng":89.48604},{"lat":24.898775,"lng":90.88376},{"lat":24.61472,"lng":89.45142},{"lat":25.07527,"lng":90.88564},{"lat":22.86155,"lng":89.04083},{"lat":25.90208,"lng":89.01208},{"lat":25.9239,"lng":89.34809},{"lat":23.33235,"lng":90.3214},{"lat":22.819267,"lng":89.433967},{"lat":23.43754,"lng":89.76779},{"lat":24.454625,"lng":90.155282},{"lat":23.29419,"lng":89.70352},{"lat":24.63371,"lng":90.27095},{"lat":22.75042,"lng":89.25909},{"lat":23.38958,"lng":89.68694},{"lat":24.406057,"lng":90.389774},{"lat":22.584603,"lng":89.320419},{"lat":24.57038,"lng":90.68847},{"lat":22.45313,"lng":89.85836},{"lat":24.68185,"lng":90.60064},{"lat":23.89932,"lng":89.87227},{"lat":22.349306,"lng":89.286819},{"lat":24.53286,"lng":91.854},{"lat":23.6055,"lng":89.8503},{"lat":23.14037,"lng":90.44151},{"lat":25.115593,"lng":90.337007},{"lat":22.81705,"lng":90.24544},{"lat":23.84885,"lng":89.82709},{"lat":22.869114,"lng":89.525919},{"lat":24.7609,"lng":90.57132},{"lat":25.186184,"lng":90.067305},{"lat":24.81571,"lng":91.75391},{"lat":23.978314,"lng":90.652933},{"lat":25.08847,"lng":90.52142},{"lat":24.148371,"lng":90.694798},{"lat":24.16554,"lng":89.96557},{"lat":24.87799,"lng":92.36906},{"lat":24.59132,"lng":92.1153},{"lat":25.00666,"lng":92.2602},{"lat":23.96653,"lng":89.83046},{"lat":25.949875,"lng":89.546984},{"lat":22.82019,"lng":90.32581},{"lat":24.111913,"lng":90.569705},{"lat":24.198606,"lng":90.477532},{"lat":22.782479,"lng":90.158137},{"lat":23.1659,"lng":89.21352},{"lat":25.098414,"lng":91.173208},{"lat":23.00106,"lng":89.82851},{"lat":24.066301,"lng":90.216992},{"lat":23.31928,"lng":89.86885},{"lat":23.23565,"lng":89.72017},{"lat":26.11306,"lng":89.66779},{"lat":23.5523,"lng":90.5402},{"lat":24.52224,"lng":92.03432},{"lat":24.67643,"lng":89.95269},{"lat":23.2151,"lng":90.3489},{"lat":22.45598,"lng":89.02467},{"lat":24.47981,"lng":89.97348},{"lat":24.38695,"lng":89.99445},{"lat":23.5849,"lng":90.5287},{"lat":23.636225,"lng":90.594062},{"lat":23.7921,"lng":90.6595},{"lat":23.925619,"lng":90.576763},{"lat":24.462626,"lng":89.872365},{"lat":24.56254,"lng":89.92636},{"lat":22.98136,"lng":90.00539},{"lat":23.509798,"lng":90.46739},{"lat":23.538604,"lng":90.611636},{"lat":23.572213,"lng":90.38041},{"lat":23.467459,"lng":90.333498},{"lat":23.02093,"lng":89.2331},{"lat":22.90606,"lng":89.2157},{"lat":25.96658,"lng":89.69092},{"lat":24.23112,"lng":90.05603},{"lat":23.72669,"lng":89.75341},{"lat":23.63576,"lng":89.55122},{"lat":22.584603,"lng":89.320419},{"lat":26.12198,"lng":89.14263},{"lat":23.10159,"lng":89.10075},{"lat":26.34427,"lng":89.0224},{"lat":25.81105,"lng":89.61885},{"lat":22.891129,"lng":89.53665},{"lat":22.97165,"lng":90.22803},{"lat":24.31887,"lng":90.16955},{"lat":22.4874,"lng":90.06104},{"lat":22.5382,"lng":90.33818},{"lat":23.81654,"lng":90.14508},{"lat":23.30644,"lng":90.40588},{"lat":24.61169,"lng":90.03182},{"lat":22.62373,"lng":90.05865},{"lat":23.701132,"lng":90.393423},{"lat":25.098228,"lng":91.301055},{"lat":24.05747,"lng":89.87774},{"lat":22.74474,"lng":90.09913},{"lat":22.30721,"lng":90.09309},{"lat":22.13636,"lng":90.2297},{"lat":23.661112,"lng":90.162246},{"lat":25.03068,"lng":91.65954},{"lat":23.617219,"lng":90.121901},{"lat":22.29477,"lng":89.95362},{"lat":24.99682,"lng":91.23602},{"lat":23.332409,"lng":90.321359},{"lat":22.15883,"lng":90.11199},{"lat":24.0975,"lng":90.09922},{"lat":23.06626,"lng":90.43871},{"lat":25.19085,"lng":89.86987},{"lat":24.874425,"lng":90.734124},{"lat":25.938668,"lng":89.417375},{"lat":25.764268,"lng":89.51195},{"lat":24.881893,"lng":90.838543},{"lat":25.800789,"lng":89.488102},{"lat":23.877423,"lng":90.524335},{"lat":23.78454,"lng":90.562138},{"lat":24.637612,"lng":90.829549},{"lat":24.599903,"lng":90.869747},{"lat":24.602901,"lng":90.844016},{"lat":23.314259,"lng":89.426984},{"lat":23.385289,"lng":89.334778},{"lat":23.40275,"lng":89.570384},{"lat":23.559688,"lng":89.465814},{"lat":23.591742,"lng":89.38942},{"lat":24.99484,"lng":89.75239},{"lat":23.73848,"lng":89.42063},{"lat":22.858793,"lng":89.05331},{"lat":24.99218,"lng":89.848343},{"lat":23.559227,"lng":89.994427},{"lat":24.71198,"lng":89.87249},{"lat":24.77302,"lng":89.79395},{"lat":22.368044,"lng":89.073889},{"lat":25.857433,"lng":89.56748},{"lat":24.674146,"lng":90.715688},{"lat":22.609335,"lng":89.153184},{"lat":25.730124,"lng":89.555609},{"lat":26.030929,"lng":88.912335},{"lat":24.939199,"lng":90.833919},{"lat":24.757268,"lng":90.716993},{"lat":25.897702,"lng":89.08702},{"lat":25.930699,"lng":88.971084},{"lat":23.556965,"lng":89.493766},{"lat":26.195348,"lng":88.984711},{"lat":23.71594,"lng":89.38908},{"lat":23.565483,"lng":89.940915},{"lat":22.868238,"lng":89.747336},{"lat":25.960057,"lng":89.347304},{"lat":22.707606,"lng":89.623319},{"lat":26.085221,"lng":88.898818},{"lat":26.077177,"lng":88.892908},{"lat":22.680603,"lng":89.511872},{"lat":23.298527,"lng":89.405845},{"lat":23.364618,"lng":89.373946},{"lat":25.929014,"lng":89.055853},{"lat":24.963658,"lng":90.367038},{"lat":24.813578,"lng":90.863585},{"lat":24.97725,"lng":89.75239},{"lat":23.737827,"lng":89.367751},{"lat":25.778295,"lng":89.563596},{"lat":24.727358,"lng":90.768879},{"lat":25.952153,"lng":89.027754},{"lat":24.969334,"lng":90.797882},{"lat":25.891578,"lng":89.333692},{"lat":26.25527,"lng":88.882931},{"lat":22.85673,"lng":89.065458},{"lat":22.89893,"lng":89.09566},{"lat":22.92759,"lng":89.00343},{"lat":22.8429,"lng":88.99286},{"lat":23.388769,"lng":89.293608},{"lat":22.75035,"lng":89.630607},{"lat":22.515817,"lng":89.166379},{"lat":22.622662,"lng":89.162246},{"lat":25.960057,"lng":89.347304},{"lat":24.95469,"lng":89.74826},{"lat":26.205375,"lng":88.928264},{"lat":24.06545,"lng":90.8127},{"lat":22.924028,"lng":89.092408},{"lat":22.458185,"lng":89.278323},{"lat":26.24308,"lng":88.93241},{"lat":24.528854,"lng":90.278711},{"lat":24.762725,"lng":90.859773},{"lat":24.662043,"lng":90.840562},{"lat":24.652884,"lng":90.747188},{"lat":24.648521,"lng":90.729077},{"lat":23.640252,"lng":89.402713},{"lat":23.40126,"lng":89.59783},{"lat":23.716694,"lng":89.355374},{"lat":26.205375,"lng":88.928264},{"lat":22.88467,"lng":89.02704},{"lat":22.878768,"lng":88.982517},{"lat":24.81327,"lng":89.85624},{"lat":24.817156,"lng":90.813476},{"lat":24.993395,"lng":90.876661},{"lat":25.969277,"lng":88.969445},{"lat":26.130721,"lng":88.977883},{"lat":26.1521,"lng":88.92117},{"lat":25.910334,"lng":89.351918},{"lat":26.017463,"lng":88.945574},{"lat":23.444619,"lng":89.497996},{"lat":23.642405,"lng":89.384165},{"lat":25.899306,"lng":89.018472},{"lat":23.574401,"lng":89.414419},{"lat":22.581246,"lng":89.67674},{"lat":24.9775,"lng":89.85334},{"lat":22.84249,"lng":89.017442},{"lat":23.753836,"lng":89.459103},{"lat":22.901347,"lng":89.04267},{"lat":22.90688,"lng":88.93354},{"lat":24.18913,"lng":90.73156},{"lat":22.75628,"lng":89.415082},{"lat":24.53564,"lng":89.61807},{"lat":24.32309,"lng":89.73321},{"lat":24.710612,"lng":90.160364},{"lat":24.831543,"lng":90.227837},{"lat":22.577304,"lng":88.948305},{"lat":25.930699,"lng":88.971084},{"lat":22.72007,"lng":89.5583},{"lat":24.4273,"lng":89.59531},{"lat":24.35678,"lng":89.71059},{"lat":24.83062,"lng":91.70924},{"lat":24.14601,"lng":90.84008},{"lat":25.858238,"lng":89.38557},{"lat":25.819925,"lng":89.402751},{"lat":23.99192,"lng":90.38201},{"lat":24.24107,"lng":90.73848},{"lat":25.910334,"lng":89.351918},{"lat":24.64874,"lng":89.82695},{"lat":26.00179,"lng":89.41494},{"lat":24.759601,"lng":90.224319},{"lat":25.318847,"lng":89.7933},{"lat":25.9792,"lng":89.27973},{"lat":24.761804,"lng":90.226665},{"lat":23.418508,"lng":89.927352},{"lat":24.288962,"lng":91.83602},{"lat":25.969277,"lng":88.969445},{"lat":26.085221,"lng":88.898818},{"lat":26.077177,"lng":88.892908},{"lat":23.403845,"lng":89.654556},{"lat":24.616103,"lng":90.256963},{"lat":23.308962,"lng":89.338532},{"lat":24.12257,"lng":90.70165},{"lat":22.867197,"lng":89.403865},{"lat":23.353442,"lng":90.001262},{"lat":24.284671,"lng":91.860139},{"lat":22.723861,"lng":89.890958},{"lat":22.715055,"lng":89.84517},{"lat":25.879601,"lng":88.957995},{"lat":22.589023,"lng":89.000055},{"lat":24.77324,"lng":89.79335},{"lat":25.938668,"lng":89.417375},{"lat":24.797132,"lng":90.160764},{"lat":23.378483,"lng":89.62706},{"lat":26.00179,"lng":89.41494},{"lat":25.21248,"lng":89.82432},{"lat":25.891578,"lng":89.333692},{"lat":25.922823,"lng":89.381739},{"lat":25.934208,"lng":89.304824},{"lat":22.742717,"lng":89.59701},{"lat":22.703697,"lng":89.43636},{"lat":24.30946,"lng":89.67825},{"lat":24.24092,"lng":89.65065},{"lat":26.00265,"lng":89.26689},{"lat":24.773516,"lng":90.162806},{"lat":26.182046,"lng":88.992774},{"lat":22.427135,"lng":89.844795},{"lat":23.994454,"lng":89.957876},{"lat":22.40247,"lng":89.784668},{"lat":22.876865,"lng":89.71514},{"lat":22.868555,"lng":89.747315},{"lat":24.64952,"lng":90.246384},{"lat":23.467045,"lng":89.636521},{"lat":22.597951,"lng":89.255425},{"lat":22.893667,"lng":90.197218},{"lat":24.8421,"lng":90.534361},{"lat":24.90347,"lng":90.39232},{"lat":22.771877,"lng":89.181972},{"lat":23.159318,"lng":90.422826},{"lat":24.41068,"lng":89.59724},{"lat":23.445185,"lng":89.708051},{"lat":22.66654,"lng":89.2615},{"lat":23.973478,"lng":90.038722},{"lat":23.993679,"lng":90.04216},{"lat":24.1591,"lng":90.7516},{"lat":22.781656,"lng":89.708274},{"lat":24.384369,"lng":91.897448},{"lat":22.750997,"lng":89.256012},{"lat":22.7818,"lng":89.10908},{"lat":25.960057,"lng":89.347304},{"lat":24.225747,"lng":91.859842},{"lat":24.500079,"lng":90.285333},{"lat":23.684945,"lng":90.044866},{"lat":23.888,"lng":89.86645},{"lat":23.911602,"lng":89.913873},{"lat":26.14187,"lng":89.127839},{"lat":22.788401,"lng":89.673702},{"lat":23.360178,"lng":90.008265},{"lat":23.16832,"lng":90.44328},{"lat":25.122461,"lng":90.285789},{"lat":22.512519,"lng":89.015032},{"lat":25.938668,"lng":89.417375},{"lat":24.905011,"lng":90.39028},{"lat":24.58226,"lng":91.89355},{"lat":23.140575,"lng":90.387726},{"lat":22.548254,"lng":89.740602},{"lat":25.143135,"lng":90.342439},{"lat":25.183267,"lng":90.303833},{"lat":23.528642,"lng":90.021735},{"lat":24.46293,"lng":90.28064},{"lat":24.51784,"lng":91.8784},{"lat":22.395213,"lng":89.859705},{"lat":22.846669,"lng":89.758175},{"lat":22.909147,"lng":89.816382},{"lat":22.851377,"lng":89.810153},{"lat":24.802367,"lng":90.515817},{"lat":22.443977,"lng":89.116657},{"lat":23.930424,"lng":89.864015},{"lat":24.502517,"lng":90.220887},{"lat":24.538492,"lng":90.2536},{"lat":23.13923,"lng":90.44794},{"lat":25.152337,"lng":90.367921},{"lat":24.50708,"lng":91.83288},{"lat":24.20105,"lng":90.7811},{"lat":22.472,"lng":89.015},{"lat":24.60542,"lng":90.18399},{"lat":24.86143,"lng":90.45687},{"lat":24.720926,"lng":90.266552},{"lat":24.67773,"lng":90.272928},{"lat":22.80558,"lng":89.11903},{"lat":23.150212,"lng":90.414687},{"lat":23.121756,"lng":90.407503},{"lat":23.16619,"lng":90.39366},{"lat":22.615415,"lng":89.690362},{"lat":23.972795,"lng":89.987479},{"lat":22.966687,"lng":89.756779},{"lat":22.436711,"lng":89.050477},{"lat":22.452925,"lng":89.084606},{"lat":22.389379,"lng":89.119737},{"lat":25.876038,"lng":89.028985},{"lat":22.773196,"lng":89.711102},{"lat":22.443812,"lng":89.278873},{"lat":24.898836,"lng":90.423661},{"lat":24.901648,"lng":90.499825},{"lat":23.350559,"lng":90.075515},{"lat":24.83682,"lng":90.42595},{"lat":23.462275,"lng":89.674572},{"lat":22.89659,"lng":89.371087},{"lat":24.009,"lng":89.974},{"lat":24.653533,"lng":90.165187},{"lat":24.969334,"lng":90.797882},{"lat":24.19489,"lng":90.6856},{"lat":23.308475,"lng":90.077763},{"lat":25.150297,"lng":90.084991},{"lat":24.88699,"lng":91.83596},{"lat":24.798853,"lng":91.853618},{"lat":24.831212,"lng":91.818811},{"lat":24.89234,"lng":92.48137},{"lat":22.939733,"lng":90.077283},{"lat":25.876038,"lng":89.028985},{"lat":24.828772,"lng":91.512538},{"lat":26.030929,"lng":88.912335},{"lat":25.00236,"lng":90.19889},{"lat":24.72388,"lng":91.75075},{"lat":24.70657,"lng":91.73336},{"lat":22.903628,"lng":90.151493},{"lat":24.94592,"lng":92.409092},{"lat":24.353149,"lng":91.832153},{"lat":26.030929,"lng":88.912335},{"lat":23.770059,"lng":89.94841},{"lat":25.118594,"lng":90.058676},{"lat":26.085221,"lng":88.898818},{"lat":24.76182,"lng":91.70486},{"lat":24.806015,"lng":91.707488},{"lat":24.831597,"lng":91.863287},{"lat":24.06545,"lng":90.8127},{"lat":24.203938,"lng":89.937771},{"lat":24.71883,"lng":91.69697},{"lat":24.93662,"lng":90.17667},{"lat":26.096772,"lng":89.189695},{"lat":25.899306,"lng":89.018472},{"lat":24.78834,"lng":91.68186},{"lat":24.77464,"lng":91.78282},{"lat":24.88453,"lng":91.85494},{"lat":23.01517,"lng":90.163267},{"lat":24.893571,"lng":92.422949},{"lat":22.852904,"lng":90.170055},{"lat":24.902679,"lng":92.340896},{"lat":24.85967,"lng":91.73023},{"lat":24.86005,"lng":91.84889},{"lat":24.952327,"lng":90.469812},{"lat":25.03644,"lng":91.34129},{"lat":25.883476,"lng":89.006084},{"lat":26.010817,"lng":88.976667},{"lat":24.862504,"lng":92.418468},{"lat":24.960882,"lng":90.146828},{"lat":24.926353,"lng":92.458111},{"lat":22.797359,"lng":89.229098},{"lat":22.977533,"lng":90.1477},{"lat":23.068667,"lng":90.169267},{"lat":23.022067,"lng":90.214283},{"lat":24.93356,"lng":90.22885},{"lat":25.169411,"lng":90.06399},{"lat":26.170038,"lng":89.08988},{"lat":23.923638,"lng":89.977456},{"lat":22.549872,"lng":89.010689},{"lat":23.605313,"lng":89.85148},{"lat":24.481905,"lng":91.887342},{"lat":22.499512,"lng":89.784633},{"lat":24.910236,"lng":90.159241},{"lat":24.431045,"lng":91.900739},{"lat":24.913151,"lng":92.30778},{"lat":22.862812,"lng":89.665683},{"lat":23.614894,"lng":89.451065},{"lat":23.452502,"lng":89.569221},{"lat":23.487634,"lng":89.563078},{"lat":22.396667,"lng":89.079445},{"lat":25.85049,"lng":89.50935},{"lat":22.547563,"lng":89.247595},{"lat":22.583813,"lng":89.67223},{"lat":23.788139,"lng":90.401556},{"lat":23.792139,"lng":90.40025},{"lat":23.815222,"lng":90.418111},{"lat":23.802528,"lng":90.419944},{"lat":23.81055,"lng":90.419723},{"lat":23.809156,"lng":90.409139},{"lat":23.79325,"lng":90.424972},{"lat":23.784583,"lng":90.431278},{"lat":23.779211,"lng":90.427967},{"lat":23.811972,"lng":90.427472},{"lat":23.801583,"lng":90.4235},{"lat":23.878139,"lng":90.398056},{"lat":23.859167,"lng":90.405278},{"lat":23.762172,"lng":90.397889},{"lat":23.76697,"lng":90.4},{"lat":23.77032,"lng":90.404132},{"lat":23.756,"lng":90.3918},{"lat":23.748778,"lng":90.387944},{"lat":23.744806,"lng":90.392528},{"lat":23.751389,"lng":90.402528},{"lat":23.753528,"lng":90.407194},{"lat":23.751389,"lng":90.412222},{"lat":23.738667,"lng":90.390722},{"lat":23.74049607,"lng":90.38973057},{"lat":23.7374,"lng":90.413334},{"lat":23.733917,"lng":90.417472},{"lat":23.73109,"lng":90.412223},{"lat":23.73339,"lng":90.408334},{"lat":23.71925,"lng":90.413917},{"lat":23.71749,"lng":90.411113},{"lat":23.71721,"lng":90.398335},{"lat":23.71636111,"lng":90.39647194},{"lat":23.72416,"lng":90.396109},{"lat":23.724444,"lng":90.38925},{"lat":23.736139,"lng":90.368194},{"lat":23.741028,"lng":90.377083},{"lat":23.74066667,"lng":90.36138889},{"lat":23.742056,"lng":90.366306},{"lat":23.746639,"lng":90.366},{"lat":23.75665,"lng":90.364442},{"lat":23.762278,"lng":90.366861},{"lat":23.76269444,"lng":90.36922222},{"lat":23.768361,"lng":90.364056},{"lat":23.7507,"lng":90.368723},{"lat":23.798778,"lng":90.386389},{"lat":23.79702778,"lng":90.38058333},{"lat":23.80499,"lng":90.376947},{"lat":23.802444,"lng":90.373417},{"lat":23.81516,"lng":90.368139},{"lat":23.82179,"lng":90.358917},{"lat":23.809167,"lng":90.361556},{"lat":23.800583,"lng":90.364556},{"lat":23.795083,"lng":90.362167},{"lat":23.802278,"lng":90.348667},{"lat":23.791056,"lng":90.355861},{"lat":23.726833,"lng":90.425361},{"lat":23.731611,"lng":90.433778},{"lat":23.730975,"lng":90.440881},{"lat":23.714444,"lng":90.433194},{"lat":23.745806,"lng":90.420056},{"lat":23.7436,"lng":90.421665},{"lat":23.74397194,"lng":90.42436111},{"lat":23.742472,"lng":90.419111},{"lat":23.7774,"lng":90.3988},{"lat":23.7746,"lng":90.3959},{"lat":23.770197,"lng":90.394667},{"lat":23.773472,"lng":90.421556},{"lat":23.770778,"lng":90.430722},{"lat":23.760417,"lng":90.420833},{"lat":23.76177778,"lng":90.42447222},{"lat":23.76075,"lng":90.426806},{"lat":23.86525,"lng":90.389972},{"lat":23.860917,"lng":90.3995},{"lat":23.856194,"lng":90.402667},{"lat":23.74925,"lng":90.382028},{"lat":23.7518,"lng":90.3795},{"lat":23.7453,"lng":90.3842},{"lat":23.741389,"lng":90.3825},{"lat":23.739028,"lng":90.381917},{"lat":23.74361111,"lng":90.37191667},{"lat":23.879417,"lng":90.40075},{"lat":23.87275,"lng":90.404889},{"lat":23.72241694,"lng":90.38166694},{"lat":23.718778,"lng":90.391972},{"lat":23.71244,"lng":90.403613},{"lat":23.71721,"lng":90.405834},{"lat":23.714222,"lng":90.414389},{"lat":23.7086,"lng":90.416944},{"lat":23.795333,"lng":90.393861},{"lat":23.81194,"lng":90.395556},{"lat":23.814639,"lng":90.390194},{"lat":23.814114,"lng":90.398608},{"lat":23.820497,"lng":90.400975},{"lat":23.823422,"lng":90.405564},{"lat":23.795314,"lng":90.390497},{"lat":23.796333,"lng":90.387358},{"lat":23.789861,"lng":90.399917},{"lat":23.787056,"lng":90.399667},{"lat":23.79575,"lng":90.383639},{"lat":23.800861,"lng":90.375333},{"lat":23.810778,"lng":90.371389},{"lat":23.814694,"lng":90.371056},{"lat":23.805917,"lng":90.369917},{"lat":23.809725,"lng":90.366397},{"lat":23.803278,"lng":90.37005},{"lat":23.806361,"lng":90.368056},{"lat":23.769833,"lng":90.368083},{"lat":23.771,"lng":90.375556},{"lat":23.7714,"lng":90.3798},{"lat":23.753222,"lng":90.394861},{"lat":23.7558,"lng":90.3948},{"lat":23.757972,"lng":90.386528},{"lat":23.7563,"lng":90.3875},{"lat":23.754528,"lng":90.386611},{"lat":23.721361,"lng":90.403139},{"lat":23.733778,"lng":90.401556},{"lat":23.740911,"lng":90.396608},{"lat":23.750917,"lng":90.389222},{"lat":23.73313,"lng":90.418612},{"lat":23.73249,"lng":90.416113},{"lat":23.733917,"lng":90.413667},{"lat":23.730556,"lng":90.410417},{"lat":23.730833,"lng":90.408722},{"lat":23.819761,"lng":90.423744},{"lat":23.818389,"lng":90.426778},{"lat":23.820961,"lng":90.432739},{"lat":23.814306,"lng":90.432828},{"lat":23.746861,"lng":90.402583},{"lat":23.757111,"lng":90.423694},{"lat":23.764972,"lng":90.42825},{"lat":23.777722,"lng":90.430111},{"lat":23.719892,"lng":90.405461},{"lat":23.72191667,"lng":90.40538889},{"lat":23.73633308,"lng":90.40567595},{"lat":23.7185,"lng":90.435333},{"lat":23.72888,"lng":90.4375},{"lat":23.729444,"lng":90.432556},{"lat":23.734167,"lng":90.434722},{"lat":23.735722,"lng":90.420194},{"lat":23.7386,"lng":90.416113},{"lat":23.800036,"lng":90.356277},{"lat":23.791806,"lng":90.352139},{"lat":23.786722,"lng":90.348056},{"lat":23.783139,"lng":90.347194},{"lat":23.783575,"lng":90.342533},{"lat":23.783472,"lng":90.338889},{"lat":23.784306,"lng":90.385111},{"lat":23.788361,"lng":90.383778},{"lat":23.789583,"lng":90.386194},{"lat":23.802667,"lng":90.383194},{"lat":23.764861,"lng":90.288389},{"lat":23.81175,"lng":90.254806},{"lat":23.830917,"lng":90.257528},{"lat":23.849444,"lng":90.25525},{"lat":23.85661111,"lng":90.26088889},{"lat":23.85666667,"lng":90.26583333},{"lat":23.913694,"lng":90.261889},{"lat":23.937667,"lng":90.271611},{"lat":23.949861,"lng":90.274583},{"lat":23.953833,"lng":90.271639},{"lat":23.94333,"lng":90.270554},{"lat":23.920194,"lng":90.280028},{"lat":23.74201411,"lng":90.42470164},{"lat":23.73638889,"lng":90.42972194},{"lat":23.73855611,"lng":90.43577806},{"lat":23.725889,"lng":90.433111},{"lat":23.763056,"lng":90.360278},{"lat":23.769389,"lng":90.356278},{"lat":23.767417,"lng":90.352528},{"lat":23.765167,"lng":90.351306},{"lat":23.729194,"lng":90.371417},{"lat":23.726068,"lng":90.37326},{"lat":23.722109,"lng":90.378973},{"lat":23.743917,"lng":90.42975},{"lat":23.74219775,"lng":90.43139677},{"lat":23.75105556,"lng":90.43727778},{"lat":23.74997222,"lng":90.43280556},{"lat":23.74748,"lng":90.43216806},{"lat":23.718389,"lng":90.366889},{"lat":23.716806,"lng":90.363944},{"lat":23.709475,"lng":90.37145},{"lat":23.770417,"lng":90.349583},{"lat":23.775778,"lng":90.351694},{"lat":23.77411111,"lng":90.35352778},{"lat":23.82235,"lng":90.367618},{"lat":23.828553,"lng":90.367844},{"lat":23.821472,"lng":90.373556},{"lat":23.879639,"lng":90.408389},{"lat":23.879472,"lng":90.416778},{"lat":23.879833,"lng":90.440361},{"lat":23.799028,"lng":90.408444},{"lat":23.864806,"lng":90.410306},{"lat":23.860583,"lng":90.422278},{"lat":23.852306,"lng":90.416778},{"lat":23.892917,"lng":90.378361},{"lat":23.879667,"lng":90.375028},{"lat":23.838889,"lng":90.385278},{"lat":23.797167,"lng":90.421889},{"lat":23.752889,"lng":90.441194},{"lat":23.741833,"lng":90.442383},{"lat":23.738583,"lng":90.449472},{"lat":23.735444,"lng":90.440361},{"lat":23.72057,"lng":90.39445},{"lat":23.714167,"lng":90.398194},{"lat":23.70972,"lng":90.403613},{"lat":23.71165,"lng":90.409724},{"lat":23.714444,"lng":90.424833},{"lat":23.713,"lng":90.426889},{"lat":23.693389,"lng":90.432583},{"lat":23.705556,"lng":90.439389},{"lat":23.68502,"lng":90.440446},{"lat":23.69916,"lng":90.45611},{"lat":23.693722,"lng":90.456861},{"lat":23.689611,"lng":90.456583},{"lat":23.684083,"lng":90.456361},{"lat":23.692056,"lng":90.476639},{"lat":23.716389,"lng":90.425472},{"lat":23.705528,"lng":90.444806},{"lat":23.706889,"lng":90.451861},{"lat":23.728889,"lng":90.497722},{"lat":23.738833,"lng":90.479833},{"lat":23.705139,"lng":90.447333},{"lat":23.707806,"lng":90.459556},{"lat":23.712167,"lng":90.457083},{"lat":23.711111,"lng":90.469444},{"lat":23.699667,"lng":90.491222},{"lat":23.708861,"lng":90.494},{"lat":23.744972,"lng":90.36175},{"lat":23.74516,"lng":90.347458},{"lat":23.722556,"lng":90.367444},{"lat":23.720917,"lng":90.371778},{"lat":23.71025,"lng":90.381056},{"lat":23.712694,"lng":90.388889},{"lat":23.9475,"lng":90.28111111},{"lat":23.94638889,"lng":90.28583333},{"lat":23.94027778,"lng":90.27611111},{"lat":23.702806,"lng":90.388889},{"lat":23.700194,"lng":90.379972},{"lat":23.7003056,"lng":90.3851669},{"lat":23.643,"lng":90.4165},{"lat":23.788528,"lng":90.431722},{"lat":23.788694,"lng":90.442167},{"lat":23.767139,"lng":90.417556},{"lat":23.762889,"lng":90.420806},{"lat":23.763568,"lng":90.414669},{"lat":23.76027003,"lng":90.36416886},{"lat":23.74605611,"lng":90.40683306},{"lat":23.79138889,"lng":90.40694389},{"lat":23.746472,"lng":90.424083},{"lat":23.827,"lng":90.422361},{"lat":23.831056,"lng":90.472611},{"lat":23.77452806,"lng":90.41475},{"lat":23.742167,"lng":90.370444},{"lat":23.734667,"lng":90.369417},{"lat":23.732222,"lng":90.367222},{"lat":23.718389,"lng":90.412639},{"lat":23.716278,"lng":90.414556},{"lat":23.71875,"lng":90.409139},{"lat":23.762306,"lng":90.432222},{"lat":23.75955556,"lng":90.43652778},{"lat":23.797806,"lng":90.369917},{"lat":23.795194,"lng":90.372583},{"lat":23.784611,"lng":90.373778},{"lat":23.706611,"lng":90.428222},{"lat":23.702833,"lng":90.423972},{"lat":23.689056,"lng":90.443417},{"lat":23.698889,"lng":90.435278},{"lat":23.704333,"lng":90.429972},{"lat":23.721333,"lng":90.419361},{"lat":23.721,"lng":90.424972},{"lat":23.71685306,"lng":90.42819627},{"lat":23.75582427,"lng":90.36889706},{"lat":23.77577778,"lng":90.36813889},{"lat":23.779472,"lng":90.361028},{"lat":23.75058324,"lng":90.35835787},{"lat":23.756778,"lng":90.361},{"lat":23.759806,"lng":90.356889},{"lat":23.757806,"lng":90.367278},{"lat":23.758417,"lng":90.365389},{"lat":23.772222,"lng":90.366611},{"lat":23.755278,"lng":90.410056},{"lat":23.74925,"lng":90.401444},{"lat":23.732444,"lng":90.409667},{"lat":23.735056,"lng":90.407528},{"lat":23.742972,"lng":90.408028},{"lat":23.72003,"lng":90.39847},{"lat":23.713861,"lng":90.393444},{"lat":23.713583,"lng":90.401056},{"lat":23.8022,"lng":90.41278},{"lat":23.782125,"lng":90.4182417},{"lat":23.78065,"lng":90.41212},{"lat":23.78483,"lng":90.41817},{"lat":23.78772,"lng":90.41789},{"lat":23.78692,"lng":90.41503},{"lat":23.79027,"lng":90.41256},{"lat":23.803306,"lng":90.433806},{"lat":23.75532,"lng":90.37644},{"lat":23.737833,"lng":90.379528},{"lat":23.738064,"lng":90.377031},{"lat":23.818611,"lng":90.372778},{"lat":23.82575,"lng":90.375444},{"lat":23.822472,"lng":90.376722},{"lat":23.707306,"lng":90.410472},{"lat":23.70747222,"lng":90.40694444},{"lat":23.712778,"lng":90.4055},{"lat":23.736222,"lng":90.409583},{"lat":23.737028,"lng":90.414833},{"lat":23.79625,"lng":90.349417},{"lat":23.80059967,"lng":90.3501099},{"lat":23.801139,"lng":90.3525},{"lat":23.797278,"lng":90.356389},{"lat":23.792056,"lng":90.359972},{"lat":22.361083,"lng":91.841194},{"lat":22.35,"lng":91.83833889},{"lat":22.355056,"lng":91.822806},{"lat":22.330806,"lng":91.829083},{"lat":22.329056,"lng":91.832389},{"lat":22.340444,"lng":91.839917},{"lat":22.371611,"lng":91.812472},{"lat":22.348167,"lng":91.809222},{"lat":22.350806,"lng":91.790028},{"lat":22.344417,"lng":91.790667},{"lat":22.335111,"lng":91.802194},{"lat":22.330389,"lng":91.802444},{"lat":22.321583,"lng":91.811333},{"lat":22.324028,"lng":91.823556},{"lat":22.330972,"lng":91.815083},{"lat":22.30575,"lng":91.791083},{"lat":22.317833,"lng":91.778639},{"lat":22.293667,"lng":91.784694},{"lat":22.296083,"lng":91.790528},{"lat":22.380667,"lng":91.829333},{"lat":22.368417,"lng":91.835472},{"lat":24.8939826,"lng":91.9148746},{"lat":24.884667,"lng":91.889139},{"lat":24.895028,"lng":91.872889},{"lat":24.886278,"lng":91.880611},{"lat":24.906806,"lng":91.864944},{"lat":24.909708,"lng":91.86805},{"lat":24.909028,"lng":91.860056},{"lat":23.975667,"lng":90.376361},{"lat":24.212111,"lng":90.438611},{"lat":23.892556,"lng":90.416694},{"lat":24.24852222,"lng":89.91372222},{"lat":23.621694,"lng":90.477389},{"lat":23.470528,"lng":91.168722},{"lat":23.4592,"lng":91.1753},{"lat":23.463028,"lng":91.190306},{"lat":23.453889,"lng":91.198611},{"lat":22.338861,"lng":91.828694},{"lat":22.249639,"lng":91.7955},{"lat":22.398583,"lng":91.839444},{"lat":22.367528,"lng":91.857972},{"lat":24.91075,"lng":91.897833},{"lat":24.879778,"lng":91.879361},{"lat":24.893722,"lng":91.900944},{"lat":24.905833,"lng":91.853889},{"lat":24.889056,"lng":91.864472},{"lat":23.8771,"lng":90.1314},{"lat":23.8144,"lng":90.1286},{"lat":24.7568,"lng":90.4063},{"lat":24.736,"lng":90.40894},{"lat":23.547667,"lng":91.063083},{"lat":23.686306,"lng":90.942222},{"lat":23.676944,"lng":90.7815},{"lat":23.578361,"lng":90.834306},{"lat":23.936,"lng":90.38686},{"lat":24.625,"lng":89.8553},{"lat":24.59172,"lng":89.95169},{"lat":24.59172,"lng":89.95169},{"lat":22.818278,"lng":89.544778},{"lat":22.85859,"lng":89.535944},{"lat":23.191,"lng":89.616},{"lat":23.10425,"lng":89.553},{"lat":23.789444,"lng":90.349222},{"lat":23.739889,"lng":90.410944},{"lat":23.6993889,"lng":90.4008056},{"lat":23.792825,"lng":90.4155},{"lat":23.802806,"lng":90.353917},{"lat":23.78925,"lng":90.408139},{"lat":23.867861,"lng":90.398972},{"lat":23.757639,"lng":90.381417},{"lat":23.80443,"lng":90.367919},{"lat":23.799667,"lng":90.361278},{"lat":23.738064,"lng":90.377031},{"lat":23.95055556,"lng":90.28555556},{"lat":23.72958429,"lng":90.41671897},{"lat":23.746583,"lng":90.39125},{"lat":23.813917,"lng":90.410167},{"lat":23.805028,"lng":90.419556},{"lat":23.804667,"lng":90.408444},{"lat":23.764278,"lng":90.402278},{"lat":23.757222,"lng":90.372778},{"lat":23.86527,"lng":90.403613},{"lat":23.7692,"lng":90.40706},{"lat":23.747278,"lng":90.398833},{"lat":23.749861,"lng":90.424139},{"lat":23.74105611,"lng":90.42961111},{"lat":23.774778,"lng":90.417028},{"lat":23.743972,"lng":90.40025},{"lat":23.811472,"lng":90.414972},{"lat":24.894306,"lng":91.867972},{"lat":22.331222,"lng":91.817583},{"lat":22.278417,"lng":91.774667},{"lat":22.326722,"lng":91.791472},{"lat":22.341667,"lng":91.781389},{"lat":22.282722,"lng":91.784333},{"lat":22.326556,"lng":91.804861},{"lat":22.392778,"lng":91.866389},{"lat":22.387583,"lng":91.825444},{"lat":22.359806,"lng":91.856333},{"lat":22.36358,"lng":91.4047153},{"lat":22.378361,"lng":91.845972},{"lat":22.335639,"lng":91.832056},{"lat":22.351361,"lng":91.827333},{"lat":22.335278,"lng":91.83575},{"lat":22.366056,"lng":91.802},{"lat":22.349306,"lng":91.818139},{"lat":22.364528,"lng":91.782361},{"lat":22.344778,"lng":91.775972},{"lat":22.361083,"lng":91.841194},{"lat":22.364694,"lng":91.841972},{"lat":22.355611,"lng":91.808111},{"lat":22.355194,"lng":91.8307777},{"lat":23.781944,"lng":90.37075},{"lat":23.739944,"lng":90.376028},{"lat":23.768478,"lng":90.351536},{"lat":23.856639,"lng":90.429028},{"lat":23.78411,"lng":90.422802},{"lat":23.786867,"lng":90.416594},{"lat":23.868594,"lng":90.390125},{"lat":23.791972,"lng":90.386389},{"lat":23.780663,"lng":90.418395},{"lat":23.793602,"lng":90.407222},{"lat":23.815946,"lng":90.432621},{"lat":23.806,"lng":90.425639},{"lat":23.861972,"lng":90.395917},{"lat":23.754333,"lng":90.373139},{"lat":23.81727,"lng":90.355141},{"lat":23.858944,"lng":90.4085},{"lat":23.85605611,"lng":90.41744389},{"lat":23.76757,"lng":90.367785},{"lat":23.1904,"lng":91.242},{"lat":23.460986,"lng":91.182267},{"lat":23.438499,"lng":91.134666},{"lat":23.438499,"lng":91.134666},{"lat":23.356123,"lng":91.147059},{"lat":23.4745,"lng":91.1821},{"lat":23.4189,"lng":91.173},{"lat":23.452043,"lng":91.198252},{"lat":23.476068,"lng":91.176891},{"lat":23.459062,"lng":91.175166},{"lat":23.467014,"lng":91.167119},{"lat":23.450011,"lng":91.19045},{"lat":23.456,"lng":91.186},{"lat":23.463053,"lng":91.1773},{"lat":23.470704,"lng":91.173783},{"lat":23.453043,"lng":91.167781},{"lat":23.449186,"lng":91.083667},{"lat":23.50021,"lng":91.17321},{"lat":23.457453,"lng":91.151928},{"lat":23.457819,"lng":91.180114},{"lat":23.45034,"lng":91.20247},{"lat":23.45883,"lng":91.17513},{"lat":23.4763,"lng":91.1733},{"lat":23.4475,"lng":91.1462},{"lat":23.47836,"lng":91.13544},{"lat":22.3697,"lng":90.2164},{"lat":21.94831,"lng":90.177},{"lat":21.980335,"lng":90.230261},{"lat":22.5772,"lng":89.9827},{"lat":22.7457,"lng":90.1024},{"lat":22.2483,"lng":89.9719},{"lat":22.341314,"lng":91.790292},{"lat":23.343004,"lng":90.894656},{"lat":23.300754,"lng":90.946952},{"lat":23.261733,"lng":90.994049},{"lat":23.321639,"lng":90.955889},{"lat":23.3277,"lng":90.911301},{"lat":23.346979,"lng":90.704544},{"lat":23.343679,"lng":90.712217},{"lat":23.361777,"lng":90.76546},{"lat":23.258582,"lng":90.694051},{"lat":23.288254,"lng":90.68882},{"lat":22.412042,"lng":89.993263},{"lat":23.227,"lng":90.6578},{"lat":23.47647,"lng":90.64842},{"lat":23.860522,"lng":90.399581},{"lat":26.3447,"lng":88.5554},{"lat":24.0232,"lng":89.2982},{"lat":24.0074,"lng":89.2119},{"lat":24.0066,"lng":89.2566},{"lat":24.0186,"lng":89.2349},{"lat":24.5813,"lng":88.2567},{"lat":24.5913,"lng":88.2812},{"lat":24.4121,"lng":88.9921},{"lat":24.4103,"lng":88.9675},{"lat":24.2892,"lng":89.082},{"lat":23.8339,"lng":90.7051},{"lat":23.9326,"lng":90.7045},{"lat":23.9082,"lng":90.6871},{"lat":23.8882,"lng":90.6629},{"lat":24.005722,"lng":90.730639},{"lat":24.03814,"lng":90.735294},{"lat":23.9808,"lng":90.6454},{"lat":25.9386,"lng":88.8512},{"lat":25.7813,"lng":88.9167},{"lat":25.7811,"lng":88.8953},{"lat":26.189392,"lng":88.99353},{"lat":23.0054,"lng":91.0385},{"lat":23.07558,"lng":91.04285},{"lat":23.05185,"lng":91.0946},{"lat":23.00299,"lng":91.09661},{"lat":23.003667,"lng":91.057944},{"lat":22.991357,"lng":91.09901},{"lat":23.0054,"lng":91.0385},{"lat":23.042362,"lng":91.206062},{"lat":23.009202,"lng":91.233192},{"lat":22.887547,"lng":91.230867},{"lat":23.072612,"lng":91.163532},{"lat":22.9889,"lng":91.2346},{"lat":22.654854,"lng":91.091812},{"lat":22.843,"lng":91.0995},{"lat":22.876583,"lng":91.087},{"lat":22.875694,"lng":91.104861},{"lat":22.816639,"lng":91.088611},{"lat":22.749361,"lng":91.110361},{"lat":22.820022,"lng":91.101842},{"lat":22.867519,"lng":91.107702},{"lat":22.868881,"lng":91.088614},{"lat":22.852936,"lng":91.097147},{"lat":22.877861,"lng":91.169194},{"lat":22.746086,"lng":91.247528},{"lat":22.8336,"lng":91.2028},{"lat":22.815829,"lng":91.240249},{"lat":22.5785,"lng":91.1182},{"lat":23.045,"lng":90.9759},{"lat":23.013382,"lng":90.97084},{"lat":23.02244,"lng":90.916732},{"lat":22.86925,"lng":91.32084},{"lat":22.8795,"lng":91.255472},{"lat":22.873583,"lng":91.293111},{"lat":22.9467,"lng":91.0978},{"lat":22.8882,"lng":91.0747},{"lat":22.927583,"lng":91.02675},{"lat":22.97,"lng":91.1243},{"lat":22.895805,"lng":91.035166},{"lat":22.889376,"lng":91.097656},{"lat":22.973525,"lng":91.058262},{"lat":22.902189,"lng":91.167282},{"lat":22.928778,"lng":91.103363},{"lat":22.948886,"lng":91.006121},{"lat":24.8855,"lng":90.7176},{"lat":23.647,"lng":90.60202},{"lat":23.6112,"lng":90.5789},{"lat":23.7169,"lng":90.5761},{"lat":23.6126,"lng":90.5602},{"lat":23.729325,"lng":90.5833},{"lat":23.654,"lng":90.5654},{"lat":23.636988,"lng":90.598136},{"lat":23.617595,"lng":90.613273},{"lat":23.63286,"lng":90.49271},{"lat":23.61182,"lng":90.4917},{"lat":23.6172,"lng":90.4968},{"lat":23.62679,"lng":90.48866},{"lat":23.6229,"lng":90.5006},{"lat":23.61644,"lng":90.49995},{"lat":23.7006,"lng":90.5058},{"lat":23.609,"lng":90.5036},{"lat":21.615187,"lng":92.066059},{"lat":21.845461,"lng":92.055228},{"lat":21.792023,"lng":92.001169},{"lat":21.622,"lng":92.0727},{"lat":21.721139,"lng":92.084167},{"lat":21.77225,"lng":92.083111},{"lat":21.757583,"lng":92.076083},{"lat":21.745917,"lng":92.069139},{"lat":23.6629,"lng":90.4894},{"lat":23.6098,"lng":90.4834},{"lat":21.424867,"lng":92.106307},{"lat":21.411111,"lng":92.039861},{"lat":21.512556,"lng":92.065694},{"lat":21.4295,"lng":92.097},{"lat":21.55401,"lng":92.060617},{"lat":23.640944,"lng":90.503},{"lat":21.518528,"lng":92.017},{"lat":21.396437,"lng":92.003319},{"lat":23.6304,"lng":90.5119},{"lat":20.807681,"lng":92.313275},{"lat":21.074306,"lng":92.22231},{"lat":20.8281,"lng":92.30197},{"lat":21.075639,"lng":92.143556},{"lat":21.086,"lng":92.200481},{"lat":21.275646,"lng":92.103951},{"lat":21.21458,"lng":92.16331},{"lat":21.310492,"lng":92.097761},{"lat":21.223333,"lng":92.050222},{"lat":21.2157,"lng":92.0489},{"lat":21.24627,"lng":92.13562},{"lat":23.858234,"lng":90.39877},{"lat":23.6633,"lng":90.4637},{"lat":23.691877,"lng":90.485057},{"lat":23.674,"lng":90.4635},{"lat":23.6862,"lng":90.5134},{"lat":23.6296,"lng":90.4848},{"lat":23.641,"lng":90.4812},{"lat":23.6332,"lng":90.4948},{"lat":23.6099,"lng":90.4949},{"lat":23.7724,"lng":90.3463},{"lat":23.7657,"lng":90.348},{"lat":23.6015,"lng":90.4916},{"lat":23.764741,"lng":90.3548},{"lat":23.6121,"lng":90.5032},{"lat":23.6632,"lng":90.4564},{"lat":23.621429,"lng":90.500637},{"lat":23.815,"lng":90.5903},{"lat":23.8281,"lng":90.5573},{"lat":23.69474,"lng":90.5476},{"lat":23.62045,"lng":90.51285},{"lat":23.6797,"lng":90.5378},{"lat":23.586,"lng":90.5272},{"lat":23.675,"lng":90.5658},{"lat":23.633322,"lng":90.526807},{"lat":23.794007,"lng":90.61913},{"lat":23.8487,"lng":90.63},{"lat":24.8279,"lng":88.9281},{"lat":24.8073,"lng":88.9439},{"lat":24.7326,"lng":90.4245},{"lat":24.756209,"lng":90.405726},{"lat":24.45349,"lng":90.54623},{"lat":24.2992,"lng":90.3676},{"lat":23.530944,"lng":90.459778},{"lat":23.460722,"lng":90.498194},{"lat":23.517222,"lng":90.256667},{"lat":23.577983,"lng":90.303586},{"lat":23.8514,"lng":90.4181},{"lat":23.541403,"lng":90.285056},{"lat":23.61515,"lng":90.33488},{"lat":23.635306,"lng":90.343083},{"lat":23.550676,"lng":90.389693},{"lat":23.573016,"lng":90.381584},{"lat":23.5502,"lng":90.4955},{"lat":23.55486,"lng":90.520007},{"lat":23.5591,"lng":90.52666},{"lat":23.5422,"lng":90.5325},{"lat":23.5583,"lng":90.4898},{"lat":23.533765,"lng":90.527103},{"lat":23.490889,"lng":90.345333},{"lat":23.59629,"lng":90.61011},{"lat":23.5522,"lng":90.6519},{"lat":23.708,"lng":88.609},{"lat":23.9747,"lng":89.98902},{"lat":23.973111,"lng":90.037514},{"lat":23.817,"lng":90.147},{"lat":23.764107,"lng":90.18934},{"lat":23.8112,"lng":90.2252},{"lat":23.8419,"lng":90.0164},{"lat":23.841759,"lng":89.980172},{"lat":23.893467,"lng":90.033599},{"lat":23.7917,"lng":89.8153},{"lat":23.8455,"lng":89.8311},{"lat":23.3453,"lng":90.1678},{"lat":23.3989,"lng":90.1568},{"lat":23.1671,"lng":90.1965},{"lat":23.2287,"lng":90.0214},{"lat":24.4885,"lng":91.764},{"lat":24.518041,"lng":91.878652},{"lat":24.35071,"lng":91.844},{"lat":24.382009,"lng":91.902124},{"lat":24.51493,"lng":91.97683},{"lat":24.4466,"lng":91.9914},{"lat":24.591517,"lng":92.115559},{"lat":24.73994,"lng":92.15324},{"lat":24.674,"lng":92.1756},{"lat":24.768,"lng":92.1572},{"lat":23.3466,"lng":89.3367},{"lat":23.45027,"lng":89.40939},{"lat":23.4939,"lng":89.414},{"lat":22.9444,"lng":90.83657},{"lat":22.975253,"lng":90.878819},{"lat":22.944167,"lng":90.989928},{"lat":22.879157,"lng":90.786179},{"lat":22.941137,"lng":90.955568},{"lat":22.887152,"lng":90.951119},{"lat":22.874468,"lng":90.861212},{"lat":22.940854,"lng":90.908876},{"lat":22.968853,"lng":90.805763},{"lat":22.993501,"lng":90.774194},{"lat":23.7887,"lng":90.4276},{"lat":23.8237,"lng":90.4239},{"lat":23.8035,"lng":90.432},{"lat":23.7835,"lng":90.4285},{"lat":23.8141,"lng":90.4263},{"lat":23.8137,"lng":90.4309},{"lat":23.7926,"lng":90.4289},{"lat":23.7969,"lng":90.42664},{"lat":23.78154,"lng":90.42774},{"lat":23.780667,"lng":90.4235},{"lat":23.76685,"lng":90.43007},{"lat":23.035187,"lng":90.761048},{"lat":23.075399,"lng":90.8442},{"lat":23.0587,"lng":90.8859},{"lat":25.9143,"lng":89.4285},{"lat":25.8053,"lng":89.4414},{"lat":25.8747,"lng":89.5148},{"lat":23.8938,"lng":89.1286},{"lat":23.8922,"lng":89.1474},{"lat":23.8915,"lng":89.1103},{"lat":23.9064,"lng":89.1351},{"lat":23.8152,"lng":88.9949},{"lat":23.8636,"lng":89.0328},{"lat":23.8794,"lng":89.2029},{"lat":24.0299,"lng":88.9075},{"lat":24.37383,"lng":90.75858},{"lat":24.43296,"lng":90.79095},{"lat":24.1544,"lng":90.89047},{"lat":24.1002,"lng":90.9836},{"lat":24.0558,"lng":90.9807},{"lat":24.0442,"lng":90.9872},{"lat":22.90127,"lng":89.50489},{"lat":22.8093,"lng":89.5508},{"lat":22.80047,"lng":89.55329},{"lat":22.8105,"lng":89.56023},{"lat":22.810214,"lng":89.559222},{"lat":22.9304,"lng":89.4864},{"lat":22.8412,"lng":89.5381},{"lat":22.8587,"lng":89.5432},{"lat":22.8438,"lng":89.5304},{"lat":22.9213,"lng":89.5102},{"lat":22.871583,"lng":89.524639},{"lat":22.8716,"lng":89.5246},{"lat":25.655,"lng":89.6203},{"lat":25.8111,"lng":89.635072},{"lat":25.847,"lng":89.5869},{"lat":25.8135,"lng":89.6444},{"lat":23.082,"lng":91.955916},{"lat":23.213889,"lng":91.914556},{"lat":25.1863,"lng":89.0227},{"lat":24.8769,"lng":89.0008},{"lat":23.0556,"lng":88.9556},{"lat":23.1762,"lng":89.2095},{"lat":23.1537,"lng":89.2066},{"lat":23.1674,"lng":89.1992},{"lat":23.1938,"lng":89.1822},{"lat":23.1423,"lng":89.1884},{"lat":23.1655,"lng":89.2276},{"lat":23.1836,"lng":89.2162},{"lat":23.1653,"lng":89.213},{"lat":23.2211,"lng":89.3443},{"lat":23.7961,"lng":90.3907},{"lat":23.8274,"lng":90.3935},{"lat":23.8175,"lng":90.4035},{"lat":23.8045,"lng":90.4003},{"lat":23.7913,"lng":90.3955},{"lat":23.8255,"lng":90.4058},{"lat":23.7876,"lng":90.3944},{"lat":23.8137,"lng":90.4101},{"lat":23.0368,"lng":89.3914},{"lat":24.9112,"lng":89.7254},{"lat":22.6795,"lng":90.17133},{"lat":22.578444,"lng":90.104722},{"lat":23.546,"lng":89.1727},{"lat":24.3709,"lng":91.4172},{"lat":24.56661,"lng":91.5135},{"lat":23.793817,"lng":90.3883},{"lat":24.6125,"lng":91.6295},{"lat":24.648456,"lng":91.581007},{"lat":24.5788,"lng":91.5637},{"lat":24.5917,"lng":91.6035},{"lat":23.7148,"lng":90.4933},{"lat":23.6999,"lng":90.4925},{"lat":23.6929,"lng":90.473},{"lat":23.7284,"lng":90.498},{"lat":23.7074,"lng":90.4888},{"lat":23.7069,"lng":90.4751},{"lat":23.7133,"lng":90.4866},{"lat":24.884324,"lng":91.881484},{"lat":23.9196,"lng":90.2118},{"lat":23.92091,"lng":90.13672},{"lat":23.910643,"lng":90.183386},{"lat":24.345,"lng":91.5395},{"lat":23.7434,"lng":90.3643},{"lat":23.75,"lng":90.3869},{"lat":23.7384,"lng":90.3678},{"lat":23.95019,"lng":90.38295},{"lat":24.18066,"lng":90.42669},{"lat":23.9291,"lng":90.4454},{"lat":23.89,"lng":90.408},{"lat":24.01076,"lng":90.27846},{"lat":24.033333,"lng":90.393444},{"lat":23.8958,"lng":90.4261},{"lat":23.972,"lng":90.2964},{"lat":24.089,"lng":90.3754},{"lat":23.918861,"lng":90.376833},{"lat":23.9519,"lng":90.4119},{"lat":23.9952,"lng":90.3213},{"lat":23.904107,"lng":90.397031},{"lat":23.9057,"lng":90.4173},{"lat":23.8852,"lng":90.4093},{"lat":23.9891,"lng":90.359398},{"lat":23.6182,"lng":90.1196},{"lat":23.6312,"lng":90.0775},{"lat":23.6092,"lng":90.1393},{"lat":23.63305,"lng":90.1241},{"lat":23.5692,"lng":90.14956},{"lat":23.8594,"lng":90.4175},{"lat":23.8734,"lng":90.4073},{"lat":23.8609,"lng":90.4313},{"lat":23.8632,"lng":90.4095},{"lat":23.8679,"lng":90.4095},{"lat":23.8519,"lng":90.4238},{"lat":23.8671,"lng":90.4178},{"lat":23.8628,"lng":90.4157},{"lat":23.8796,"lng":90.4082},{"lat":24.0311,"lng":90.415},{"lat":23.9938,"lng":90.2548},{"lat":23.9077,"lng":90.4005},{"lat":24.034847,"lng":90.235522},{"lat":24.0318,"lng":90.2665},{"lat":24.0486,"lng":90.3003},{"lat":24.0837,"lng":90.2011},{"lat":24.0601,"lng":90.2043},{"lat":25.3916,"lng":89.5259},{"lat":25.1792,"lng":89.3877},{"lat":23.58271,"lng":89.8365},{"lat":23.596171,"lng":89.83833},{"lat":23.5921,"lng":89.8618},{"lat":23.6068,"lng":89.8295},{"lat":23.6123,"lng":89.8398},{"lat":23.5875,"lng":89.8349},{"lat":23.6138,"lng":89.8543},{"lat":23.4171,"lng":89.889},{"lat":23.557,"lng":90.0086},{"lat":23.3916,"lng":89.9843},{"lat":22.889469,"lng":91.402107},{"lat":22.8494,"lng":91.3915},{"lat":22.8747,"lng":91.4066},{"lat":22.95944,"lng":91.38313},{"lat":23.0089,"lng":91.4012},{"lat":23.00841,"lng":91.37374},{"lat":22.99861,"lng":91.44558},{"lat":23.0492,"lng":91.3658},{"lat":23.0113,"lng":91.4031},{"lat":22.996111,"lng":91.477972},{"lat":22.975222,"lng":91.475138},{"lat":23.0163,"lng":91.3811},{"lat":22.952676,"lng":91.408377},{"lat":23.0059,"lng":91.384694},{"lat":23.009193,"lng":91.379722},{"lat":23.0045,"lng":91.3974},{"lat":22.949,"lng":91.462},{"lat":23.037419,"lng":91.424856},{"lat":22.992364,"lng":91.457717},{"lat":23.005604,"lng":91.358333},{"lat":23.014128,"lng":91.308015},{"lat":23.028383,"lng":91.406025},{"lat":23.0098,"lng":91.3994},{"lat":23.018666,"lng":91.401882},{"lat":23.105553,"lng":91.431444},{"lat":22.9414,"lng":91.3087},{"lat":22.98525,"lng":91.276972},{"lat":22.939275,"lng":91.281033},{"lat":22.9798,"lng":91.3367},{"lat":22.9397,"lng":91.3091},{"lat":25.698934,"lng":88.656955},{"lat":25.5629,"lng":88.6279},{"lat":25.6214,"lng":88.6435},{"lat":25.6036,"lng":88.6351},{"lat":25.655,"lng":88.985},{"lat":23.78167,"lng":90.41566},{"lat":23.7831,"lng":90.4039},{"lat":23.8743,"lng":90.4003},{"lat":25.556333,"lng":88.985667},{"lat":25.755106,"lng":88.671421},{"lat":23.871,"lng":90.4218},{"lat":23.8622,"lng":90.3971},{"lat":23.86136,"lng":90.45084},{"lat":23.792256,"lng":90.424233},{"lat":23.789683,"lng":90.425195},{"lat":23.793711,"lng":90.409383},{"lat":23.8795,"lng":90.4281},{"lat":23.8669,"lng":90.4552},{"lat":23.879,"lng":90.3848},{"lat":23.8864,"lng":90.3852},{"lat":23.924939,"lng":90.448193},{"lat":23.8796,"lng":90.3751},{"lat":23.882443,"lng":90.391143},{"lat":23.8753,"lng":90.3769},{"lat":23.75437,"lng":90.39993},{"lat":23.77026,"lng":90.37186},{"lat":23.75076,"lng":90.391976},{"lat":23.749001,"lng":90.3922},{"lat":23.827564,"lng":90.259294},{"lat":23.8936,"lng":90.2651},{"lat":23.90457,"lng":90.28288},{"lat":23.925278,"lng":90.278056},{"lat":23.80163,"lng":90.25981},{"lat":23.84013,"lng":90.25731},{"lat":23.821578,"lng":90.260976},{"lat":23.87135,"lng":90.27037},{"lat":23.9382,"lng":90.269798},{"lat":23.7841,"lng":90.259},{"lat":23.7324,"lng":90.3677},{"lat":23.7299,"lng":90.3692},{"lat":23.7412,"lng":90.3643},{"lat":23.7316,"lng":90.36145},{"lat":24.191276,"lng":90.435331},{"lat":23.9082,"lng":90.2951},{"lat":23.957,"lng":90.2769},{"lat":23.769806,"lng":90.263944},{"lat":23.8277,"lng":90.2523},{"lat":23.7911,"lng":90.3286},{"lat":23.9516,"lng":90.2866},{"lat":23.9086,"lng":90.2318},{"lat":23.8332,"lng":90.2616},{"lat":23.843182,"lng":90.263338},{"lat":23.8496,"lng":90.2815},{"lat":23.8752,"lng":90.2875},{"lat":23.773272,"lng":90.308727},{"lat":23.7972,"lng":90.2899},{"lat":23.9602,"lng":90.2713},{"lat":23.919963,"lng":90.252613},{"lat":23.912885,"lng":90.308142},{"lat":23.7863,"lng":90.3328},{"lat":23.9497,"lng":90.2748},{"lat":23.848749,"lng":90.257171},{"lat":23.721317,"lng":90.42065},{"lat":23.7129,"lng":90.4253},{"lat":23.7053,"lng":90.4208},{"lat":23.7107,"lng":90.4231},{"lat":23.7165,"lng":90.4115},{"lat":23.7206,"lng":90.4227},{"lat":23.7059,"lng":90.4146},{"lat":23.701,"lng":90.4207},{"lat":23.7184,"lng":90.4251},{"lat":23.702,"lng":90.4429},{"lat":23.7068,"lng":90.4408},{"lat":23.7109,"lng":90.4198},{"lat":23.7172,"lng":90.469},{"lat":23.7076,"lng":90.4592},{"lat":23.7185,"lng":90.4354},{"lat":23.7136,"lng":90.437},{"lat":23.7051,"lng":90.4182},{"lat":23.7017,"lng":90.4599},{"lat":23.7032,"lng":90.4484},{"lat":23.7133,"lng":90.4433},{"lat":23.7119,"lng":90.4335},{"lat":23.7081,"lng":90.4284},{"lat":23.715,"lng":90.4345},{"lat":23.7184,"lng":90.4412},{"lat":23.7087,"lng":90.4319},{"lat":23.7067,"lng":90.4307},{"lat":23.69454,"lng":90.46697},{"lat":23.71191,"lng":90.43023},{"lat":23.70979,"lng":90.44694},{"lat":23.714,"lng":90.4175},{"lat":23.705627,"lng":90.424194},{"lat":23.72,"lng":90.4155},{"lat":23.7192,"lng":90.4211},{"lat":23.7084,"lng":90.4154},{"lat":23.67953,"lng":90.44593},{"lat":23.6957,"lng":90.4339},{"lat":23.6858,"lng":90.4384},{"lat":23.7003,"lng":90.427},{"lat":23.6946,"lng":90.4519},{"lat":23.6943,"lng":90.4451},{"lat":23.6931,"lng":90.4584},{"lat":23.6968,"lng":90.4237},{"lat":23.6723,"lng":90.4486},{"lat":23.6898,"lng":90.4572},{"lat":23.6895,"lng":90.4406},{"lat":23.689,"lng":90.4481},{"lat":23.6938,"lng":90.4256},{"lat":23.77825,"lng":90.3745},{"lat":23.733,"lng":90.4013},{"lat":23.73036,"lng":90.41035},{"lat":23.733,"lng":90.4013},{"lat":23.7303,"lng":90.4077},{"lat":23.7361,"lng":90.4097},{"lat":23.7237,"lng":90.4054},{"lat":23.7327,"lng":90.4072},{"lat":23.7234,"lng":90.4275},{"lat":23.7388,"lng":90.4452},{"lat":23.738543,"lng":90.449551},{"lat":23.7332,"lng":90.4352},{"lat":23.7264,"lng":90.4349},{"lat":23.7304,"lng":90.4395},{"lat":23.7342,"lng":90.4289},{"lat":23.7401,"lng":90.4278},{"lat":23.744,"lng":90.4425},{"lat":23.73,"lng":90.4311},{"lat":23.7385,"lng":90.4398},{"lat":23.7415,"lng":90.41157},{"lat":23.744859,"lng":90.401408},{"lat":23.746145,"lng":90.412209},{"lat":23.7422,"lng":90.408},{"lat":23.7451,"lng":90.3992},{"lat":23.7496,"lng":90.4109},{"lat":23.729915,"lng":90.411086},{"lat":23.73285,"lng":90.410519},{"lat":23.7332,"lng":90.4113},{"lat":23.7334,"lng":90.415},{"lat":23.7248,"lng":90.4111},{"lat":23.7355,"lng":90.4162},{"lat":23.7395,"lng":90.4117},{"lat":23.735,"lng":90.4128},{"lat":23.7314,"lng":90.4135},{"lat":23.738,"lng":90.4144},{"lat":23.8374,"lng":90.3661},{"lat":23.8249,"lng":90.3678},{"lat":23.829,"lng":90.3754},{"lat":23.828833,"lng":90.370528},{"lat":23.8246,"lng":90.3771},{"lat":23.821293,"lng":90.368526},{"lat":23.823159,"lng":90.357304},{"lat":23.834,"lng":90.3879},{"lat":23.8131,"lng":90.3755},{"lat":23.812517,"lng":90.36678},{"lat":23.8095,"lng":90.3717},{"lat":23.6482,"lng":90.2065},{"lat":23.7296,"lng":90.1008},{"lat":23.7138,"lng":90.2373},{"lat":23.6441,"lng":90.1828},{"lat":23.703492,"lng":90.065369},{"lat":23.626,"lng":90.2059},{"lat":23.6568,"lng":90.1944},{"lat":23.73408,"lng":90.38399},{"lat":23.7356,"lng":90.38438},{"lat":23.7377,"lng":90.3871},{"lat":23.793,"lng":90.37215},{"lat":23.794579,"lng":90.3756},{"lat":23.7814,"lng":90.3591},{"lat":23.7845,"lng":90.3642},{"lat":23.8135,"lng":90.3634},{"lat":23.7908,"lng":90.3482},{"lat":23.7875,"lng":90.3724},{"lat":23.7937,"lng":90.3662},{"lat":23.810667,"lng":90.361111},{"lat":23.80677,"lng":90.362226},{"lat":23.8015,"lng":90.3621},{"lat":23.797,"lng":90.3426},{"lat":23.7891,"lng":90.3627},{"lat":23.7894,"lng":90.3666},{"lat":23.7778,"lng":90.3584},{"lat":23.8032,"lng":90.358},{"lat":23.7843,"lng":90.3408},{"lat":23.7987,"lng":90.3688},{"lat":23.7855,"lng":90.3605},{"lat":23.747083,"lng":90.413139},{"lat":23.7276,"lng":90.4167},{"lat":23.728694,"lng":90.418472},{"lat":23.7412,"lng":90.4196},{"lat":23.7461,"lng":90.421},{"lat":23.7359,"lng":90.4201},{"lat":23.7446,"lng":90.4116},{"lat":23.7284,"lng":90.4159},{"lat":23.7304,"lng":90.425},{"lat":23.7309,"lng":90.4184},{"lat":23.745,"lng":90.4118},{"lat":23.7232,"lng":90.4246},{"lat":23.7487,"lng":90.4145},{"lat":23.7432,"lng":90.422},{"lat":23.7441,"lng":90.417},{"lat":23.733544,"lng":90.417587},{"lat":23.738,"lng":90.4221},{"lat":23.75953,"lng":90.34599},{"lat":23.74695,"lng":90.36046},{"lat":23.757191,"lng":90.3643},{"lat":23.7735,"lng":90.3524},{"lat":23.7701,"lng":90.3614},{"lat":23.7596,"lng":90.3546},{"lat":23.7594,"lng":90.3594},{"lat":23.7593,"lng":90.3641},{"lat":23.7623,"lng":90.3635},{"lat":23.7184,"lng":90.3909},{"lat":23.7149,"lng":90.3971},{"lat":23.7184,"lng":90.3933},{"lat":23.716,"lng":90.3886},{"lat":23.7161,"lng":90.3809},{"lat":23.7137,"lng":90.3992},{"lat":23.7281,"lng":90.3812},{"lat":23.7207,"lng":90.3796},{"lat":23.7123,"lng":90.3955},{"lat":23.7158,"lng":90.3856},{"lat":23.7166,"lng":90.3973},{"lat":23.7247,"lng":90.3833},{"lat":23.7244,"lng":90.3771},{"lat":23.720684,"lng":90.394527},{"lat":23.7238,"lng":90.3963},{"lat":23.7204,"lng":90.39},{"lat":23.70648,"lng":90.41063},{"lat":23.71028,"lng":90.405867},{"lat":23.7063,"lng":90.4107},{"lat":23.7161,"lng":90.4089},{"lat":23.7103,"lng":90.4098},{"lat":23.7156,"lng":90.4044},{"lat":23.7209,"lng":90.4072},{"lat":23.7177,"lng":90.4031},{"lat":23.7134,"lng":90.4011},{"lat":23.8414,"lng":90.4471},{"lat":23.8322,"lng":90.4739},{"lat":23.842,"lng":90.4323},{"lat":23.835,"lng":90.4271},{"lat":23.750703,"lng":90.413799},{"lat":23.7597,"lng":90.4622},{"lat":23.7508,"lng":90.4353},{"lat":23.7572,"lng":90.4439},{"lat":23.7542,"lng":90.4306},{"lat":23.7454,"lng":90.4538},{"lat":23.7479,"lng":90.4418},{"lat":23.7511,"lng":90.4391},{"lat":23.756,"lng":90.4366},{"lat":23.7477,"lng":90.437},{"lat":23.74726,"lng":90.42952},{"lat":23.7635,"lng":90.2467},{"lat":23.65936,"lng":90.35466},{"lat":23.6534,"lng":90.4173},{"lat":23.6638,"lng":90.3875},{"lat":23.6958,"lng":90.4116},{"lat":23.7042,"lng":90.302},{"lat":23.7002,"lng":90.3849},{"lat":23.6955,"lng":90.4057},{"lat":23.7292,"lng":90.30553},{"lat":23.730548,"lng":90.271949},{"lat":23.667159,"lng":90.306533},{"lat":23.7065,"lng":90.2855},{"lat":23.659572,"lng":90.360835},{"lat":23.7052,"lng":90.4043},{"lat":23.6789,"lng":90.4112},{"lat":23.702,"lng":90.4073},{"lat":23.6835,"lng":90.4235},{"lat":23.8037,"lng":90.3743},{"lat":23.8121,"lng":90.3949},{"lat":23.7096,"lng":90.4537},{"lat":23.68802,"lng":90.45777},{"lat":23.714,"lng":90.3744},{"lat":23.7128,"lng":90.3668},{"lat":23.7169,"lng":90.3636},{"lat":23.7094,"lng":90.372},{"lat":24.893983,"lng":91.914875},{"lat":24.91075,"lng":91.897833},{"lat":23.621694,"lng":90.477389},{"lat":24.736,"lng":90.40894},{"lat":24.7568,"lng":90.4063},{"lat":23.8771,"lng":90.1314},{"lat":23.8144,"lng":90.1286},{"lat":23.936,"lng":90.38686},{"lat":24.212111,"lng":90.438611},{"lat":23.975667,"lng":90.376361},{"lat":23.700306,"lng":90.385167},{"lat":23.7563,"lng":90.3875},{"lat":23.879472,"lng":90.416778},{"lat":23.879833,"lng":90.440361},{"lat":23.860917,"lng":90.3995},{"lat":23.859167,"lng":90.405278},{"lat":23.878139,"lng":90.398056},{"lat":23.87275,"lng":90.404889},{"lat":23.86525,"lng":90.389972},{"lat":23.879639,"lng":90.408389},{"lat":23.892917,"lng":90.378361},{"lat":23.856194,"lng":90.402667},{"lat":23.724444,"lng":90.38925},{"lat":23.762172,"lng":90.397889},{"lat":23.77032,"lng":90.404132},{"lat":23.76697,"lng":90.4},{"lat":23.830917,"lng":90.257528},{"lat":23.81175,"lng":90.254806},{"lat":23.788694,"lng":90.442167},{"lat":23.788528,"lng":90.431722},{"lat":23.803278,"lng":90.37005},{"lat":23.800861,"lng":90.375333},{"lat":23.814694,"lng":90.371056},{"lat":23.805917,"lng":90.369917},{"lat":22.361083,"lng":91.841194},{"lat":23.810778,"lng":90.371389},{"lat":23.689611,"lng":90.456583},{"lat":23.68502,"lng":90.440446},{"lat":23.743972,"lng":90.424361},{"lat":23.742014,"lng":90.424702},{"lat":23.7436,"lng":90.421665},{"lat":23.742472,"lng":90.419111},{"lat":23.733917,"lng":90.413667},{"lat":23.7374,"lng":90.413334},{"lat":23.769833,"lng":90.368083},{"lat":23.775778,"lng":90.368139},{"lat":23.779472,"lng":90.361028},{"lat":23.772222,"lng":90.366611},{"lat":23.746861,"lng":90.402583},{"lat":23.714444,"lng":90.433194},{"lat":23.856611,"lng":90.260889},{"lat":23.849444,"lng":90.25525},{"lat":22.355056,"lng":91.822806},{"lat":23.79625,"lng":90.349417},{"lat":23.800036,"lng":90.356277},{"lat":23.801139,"lng":90.3525},{"lat":23.797278,"lng":90.356389},{"lat":23.756778,"lng":90.361},{"lat":23.744972,"lng":90.36175},{"lat":23.750583,"lng":90.358358},{"lat":23.746639,"lng":90.366},{"lat":23.740667,"lng":90.361389},{"lat":23.8006,"lng":90.35011},{"lat":23.802278,"lng":90.348667},{"lat":23.76075,"lng":90.426806},{"lat":23.762889,"lng":90.420806},{"lat":23.764972,"lng":90.42825},{"lat":23.762306,"lng":90.432222},{"lat":23.763568,"lng":90.414669},{"lat":23.767139,"lng":90.417556},{"lat":23.760417,"lng":90.420833},{"lat":23.761778,"lng":90.424472},{"lat":23.784611,"lng":90.373778},{"lat":23.730556,"lng":90.410417},{"lat":23.732444,"lng":90.409667},{"lat":23.730833,"lng":90.408722},{"lat":23.73109,"lng":90.412223},{"lat":23.693389,"lng":90.432583},{"lat":23.821472,"lng":90.373556},{"lat":23.828553,"lng":90.367844},{"lat":23.792056,"lng":90.359972},{"lat":23.791056,"lng":90.355861},{"lat":23.74925,"lng":90.401444},{"lat":23.770197,"lng":90.394667},{"lat":23.716278,"lng":90.414556},{"lat":23.818611,"lng":90.372778},{"lat":23.791806,"lng":90.352139},{"lat":23.783139,"lng":90.347194},{"lat":23.80499,"lng":90.376947},{"lat":23.82179,"lng":90.358917},{"lat":23.786722,"lng":90.348056},{"lat":23.82235,"lng":90.367618},{"lat":23.7774,"lng":90.3988},{"lat":23.7746,"lng":90.3959},{"lat":23.787056,"lng":90.399667},{"lat":23.795083,"lng":90.362167},{"lat":23.800583,"lng":90.364556},{"lat":23.751389,"lng":90.412222},{"lat":23.758417,"lng":90.365389},{"lat":23.759806,"lng":90.356889},{"lat":23.757806,"lng":90.367278},{"lat":23.762694,"lng":90.369222},{"lat":23.762278,"lng":90.366861},{"lat":23.768361,"lng":90.364056},{"lat":23.76027,"lng":90.364169},{"lat":23.763056,"lng":90.360278},{"lat":23.751389,"lng":90.402528},{"lat":23.753528,"lng":90.407194},{"lat":23.755278,"lng":90.410056},{"lat":23.7086,"lng":90.416944},{"lat":23.718778,"lng":90.391972},{"lat":23.759278,"lng":90.362861},{"lat":23.75665,"lng":90.364442},{"lat":23.755824,"lng":90.368897},{"lat":23.797806,"lng":90.369917},{"lat":23.797028,"lng":90.380583},{"lat":23.795194,"lng":90.372583},{"lat":23.716806,"lng":90.363944},{"lat":23.712611,"lng":90.381306},{"lat":23.71025,"lng":90.381056},{"lat":23.709475,"lng":90.37145},{"lat":23.702806,"lng":90.388889},{"lat":23.700194,"lng":90.379972},{"lat":22.35,"lng":91.838339},{"lat":23.730975,"lng":90.440881},{"lat":23.731611,"lng":90.433778},{"lat":23.729444,"lng":90.432556},{"lat":23.7185,"lng":90.435333},{"lat":23.725889,"lng":90.433111},{"lat":23.578361,"lng":90.834306},{"lat":23.864806,"lng":90.410306},{"lat":23.852306,"lng":90.416778},{"lat":23.860583,"lng":90.422278},{"lat":23.757111,"lng":90.423694},{"lat":23.745806,"lng":90.420056},{"lat":23.7518,"lng":90.3795},{"lat":23.7453,"lng":90.3842},{"lat":23.74925,"lng":90.382028},{"lat":23.748778,"lng":90.387944},{"lat":23.750917,"lng":90.389222},{"lat":23.735056,"lng":90.407528},{"lat":23.736333,"lng":90.405676},{"lat":23.676944,"lng":90.7815},{"lat":23.73339,"lng":90.408334},{"lat":23.789583,"lng":90.386194},{"lat":23.686306,"lng":90.942222},{"lat":23.463028,"lng":91.190306},{"lat":23.547667,"lng":91.063083},{"lat":23.796333,"lng":90.387358},{"lat":23.784306,"lng":90.385111},{"lat":23.788361,"lng":90.383778},{"lat":23.4592,"lng":91.1753},{"lat":23.819761,"lng":90.423744},{"lat":23.827,"lng":90.422361},{"lat":23.815222,"lng":90.418111},{"lat":23.742056,"lng":90.366306},{"lat":23.736139,"lng":90.368194},{"lat":23.735833,"lng":90.364528},{"lat":23.742167,"lng":90.370444},{"lat":23.738064,"lng":90.377031},{"lat":23.706611,"lng":90.428222},{"lat":23.705556,"lng":90.439389},{"lat":23.705139,"lng":90.447333},{"lat":23.706889,"lng":90.451861},{"lat":23.470528,"lng":91.168722},{"lat":23.798778,"lng":90.386389},{"lat":23.79575,"lng":90.383639},{"lat":23.744806,"lng":90.392528},{"lat":23.726068,"lng":90.37326},{"lat":23.729194,"lng":90.371417},{"lat":23.732222,"lng":90.367222},{"lat":23.726833,"lng":90.425361},{"lat":23.78483,"lng":90.41817},{"lat":23.774528,"lng":90.41475},{"lat":23.799028,"lng":90.408444},{"lat":23.78772,"lng":90.41789},{"lat":23.81055,"lng":90.419723},{"lat":23.79027,"lng":90.41256},{"lat":23.782125,"lng":90.418242},{"lat":23.78065,"lng":90.41212},{"lat":23.78692,"lng":90.41503},{"lat":23.7558,"lng":90.3948},{"lat":23.754528,"lng":90.386611},{"lat":23.757972,"lng":90.386528},{"lat":23.756,"lng":90.3918},{"lat":23.753222,"lng":90.394861},{"lat":23.733917,"lng":90.417472},{"lat":23.73313,"lng":90.418612},{"lat":23.73249,"lng":90.416113},{"lat":23.946389,"lng":90.285833},{"lat":23.940278,"lng":90.276111},{"lat":23.9475,"lng":90.281111},{"lat":23.953833,"lng":90.271639},{"lat":23.94333,"lng":90.270554},{"lat":23.949861,"lng":90.274583},{"lat":23.740496,"lng":90.389731},{"lat":23.738667,"lng":90.390722},{"lat":23.699667,"lng":90.491222},{"lat":23.692056,"lng":90.476639},{"lat":23.738833,"lng":90.479833},{"lat":23.728889,"lng":90.497722},{"lat":23.831056,"lng":90.472611},{"lat":23.741028,"lng":90.377083},{"lat":23.74516,"lng":90.347458},{"lat":23.747696,"lng":90.374054},{"lat":23.7507,"lng":90.368723},{"lat":23.743611,"lng":90.371917},{"lat":23.75532,"lng":90.37644},{"lat":23.74472,"lng":90.367779},{"lat":23.741389,"lng":90.3825},{"lat":23.737833,"lng":90.379528},{"lat":23.71165,"lng":90.409724},{"lat":23.856667,"lng":90.265833},{"lat":23.814114,"lng":90.398608},{"lat":23.820497,"lng":90.400975},{"lat":23.809156,"lng":90.409139},{"lat":23.823422,"lng":90.405564},{"lat":23.795333,"lng":90.393861},{"lat":23.795314,"lng":90.390497},{"lat":23.714167,"lng":90.398194},{"lat":23.838889,"lng":90.385278},{"lat":23.71875,"lng":90.409139},{"lat":23.71721,"lng":90.405834},{"lat":23.792139,"lng":90.40025},{"lat":23.789861,"lng":90.399917},{"lat":23.788139,"lng":90.401556},{"lat":23.791389,"lng":90.406944},{"lat":23.769389,"lng":90.356278},{"lat":23.767417,"lng":90.352528},{"lat":23.775778,"lng":90.351694},{"lat":23.765167,"lng":90.351306},{"lat":23.774111,"lng":90.353528},{"lat":23.770417,"lng":90.349583},{"lat":23.771,"lng":90.375556},{"lat":23.7714,"lng":90.3798},{"lat":23.643,"lng":90.4165},{"lat":23.783575,"lng":90.342533},{"lat":23.764861,"lng":90.288389},{"lat":23.783472,"lng":90.338889},{"lat":23.937667,"lng":90.271611},{"lat":23.920194,"lng":90.280028},{"lat":23.722417,"lng":90.381667},{"lat":23.71244,"lng":90.403613},{"lat":23.70972,"lng":90.403613},{"lat":23.773472,"lng":90.421556},{"lat":23.770778,"lng":90.430722},{"lat":23.779211,"lng":90.427967},{"lat":23.784583,"lng":90.431278},{"lat":23.777722,"lng":90.430111},{"lat":23.79325,"lng":90.424972},{"lat":23.797167,"lng":90.421889},{"lat":23.803306,"lng":90.433806},{"lat":23.802528,"lng":90.419944},{"lat":23.801583,"lng":90.4235},{"lat":23.742198,"lng":90.431397},{"lat":23.736389,"lng":90.429722},{"lat":23.74748,"lng":90.432168},{"lat":23.72888,"lng":90.4375},{"lat":23.735444,"lng":90.440361},{"lat":23.738556,"lng":90.435778},{"lat":23.738583,"lng":90.449472},{"lat":23.752889,"lng":90.441194},{"lat":23.741833,"lng":90.442383},{"lat":23.749972,"lng":90.432806},{"lat":23.743917,"lng":90.42975},{"lat":23.820961,"lng":90.432739},{"lat":23.818389,"lng":90.426778},{"lat":23.814306,"lng":90.432828},{"lat":23.811972,"lng":90.427472},{"lat":23.719892,"lng":90.405461},{"lat":23.721361,"lng":90.403139},{"lat":23.734667,"lng":90.369417},{"lat":23.81194,"lng":90.395556},{"lat":23.814639,"lng":90.390194},{"lat":23.802667,"lng":90.383194},{"lat":23.721917,"lng":90.405389},{"lat":22.7712,"lng":89.71251},{"lat":22.93197,"lng":89.80455},{"lat":22.650423,"lng":89.801481},{"lat":22.64914,"lng":89.87908},{"lat":23.41973,"lng":89.89379},{"lat":25.66336,"lng":89.61811},{"lat":25.918249,"lng":89.445553},{"lat":24.65611,"lng":91.82172},{"lat":23.6055,"lng":89.8503},{"lat":22.34269,"lng":89.10021},{"lat":25.79671,"lng":89.54583},{"lat":25.0797,"lng":89.79164},{"lat":24.8569,"lng":92.01435},{"lat":23.47304,"lng":90.02564},{"lat":24.48986,"lng":91.76665},{"lat":23.92659,"lng":90.72101},{"lat":23.873323,"lng":89.997595},{"lat":22.93856,"lng":89.66858},{"lat":24.04155,"lng":90.73918},{"lat":23.48487,"lng":89.40469},{"lat":24.946482,"lng":90.365436},{"lat":24.70017,"lng":91.9398},{"lat":22.968496,"lng":90.11618},{"lat":22.82278,"lng":89.55249},{"lat":22.7006,"lng":90.3629},{"lat":22.554773,"lng":89.652988}]'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          x-ratelimit-limit: '60'
          x-ratelimit-remaining: '27'
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v2/user/all_latitude_longitude
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 500
        content: |-
          {
              "message": "Server Error"
          }
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          x-ratelimit-limit: '60'
          x-ratelimit-remaining: '26'
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v2/users/get_nearest_zone/{latitude}/{longitude}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      latitude:
        name: latitude
        description: ''
        required: true
        example: omnis
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      longitude:
        name: longitude
        description: ''
        required: true
        example: sit
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      latitude: omnis
      longitude: sit
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"results":null,"status":"error","error_type":"","message":""}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          x-ratelimit-limit: '60'
          x-ratelimit-remaining: '25'
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v2/shared/service_package_list
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"results":[{"id":1,"bn_title":"\u09b8\u09be\u09aa\u09cb\u09b0\u09cd\u099f \u098f\u09a8\u09cd\u09a1 \u09a8\u09c7\u099f\u0993\u09df\u09be\u09b0\u09cd\u0995 \u09b8\u09c7\u09a8\u09cd\u099f\u09be\u09b0 \u09b2\u09bf\u0982\u0995 \u0986\u09aa","en_title":"Support & Network Center Link UP","service_group":"network_support_center","price":250000,"sales_point_commission":10000,"sales_agent_commission":10000,"commission_type":"flat","is_active":1,"created_at":"2025-06-04T05:54:32.000000Z","updated_at":"2025-06-04T05:54:32.000000Z"},{"id":2,"bn_title":"\u09b8\u09be\u09aa\u09cb\u09b0\u09cd\u099f \u09b8\u09c7\u09a8\u09cd\u099f\u09be\u09b0","en_title":"Support Center","service_group":"network_support_center","price":585000,"sales_point_commission":11700,"sales_agent_commission":11700,"commission_type":"flat","is_active":1,"created_at":"2025-06-04T05:54:32.000000Z","updated_at":"2025-06-04T05:54:32.000000Z"},{"id":3,"bn_title":"\u09b8\u09be\u09aa\u09cb\u09b0\u09cd\u099f \u09b8\u09c7\u09a8\u09cd\u099f\u09be\u09b0","en_title":"Support Center","service_group":"network_support_center","price":825000,"sales_point_commission":16500,"sales_agent_commission":16500,"commission_type":"flat","is_active":1,"created_at":"2025-06-04T05:54:32.000000Z","updated_at":"2025-06-04T05:54:32.000000Z"},{"id":4,"bn_title":"\u09a8\u09c7\u099f\u0993\u09df\u09be\u09b0\u09cd\u0995 \u09b8\u09c7\u09a8\u09cd\u099f\u09be\u09b0","en_title":"Network Center","service_group":"network_support_center","price":1185000,"sales_point_commission":23700,"sales_agent_commission":23700,"commission_type":"flat","is_active":1,"created_at":"2025-06-04T05:54:32.000000Z","updated_at":"2025-06-04T05:54:32.000000Z"}],"status":"success","error_type":"","message":""}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          x-ratelimit-limit: '60'
          x-ratelimit-remaining: '24'
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v2/shared/internet_package_list
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"results":{"general":[{"id":5,"mikrotik_radius_group_name":"FREE-PACKAGE","en_title":"Welcome","bn_title":"\u0993\u09df\u09c7\u09b2\u0995\u09be\u09ae","type":"wifi","zone_id":null,"price":0,"expiration":30,"sales_point_commission":0,"sales_agent_commission":0,"commission_type":"percentage","user_points":0,"is_active":1,"skip_from_display":0,"weight":131,"bg_image_source":null,"expiration_days":0.020833333333333332},{"id":2,"mikrotik_radius_group_name":"SHADHIN","en_title":"Shadhin","bn_title":"\u09b8\u09cd\u09ac\u09be\u09a7\u09c0\u09a8","type":"wifi","zone_id":null,"price":155,"expiration":43200,"sales_point_commission":10,"sales_agent_commission":5,"commission_type":"percentage","user_points":155,"is_active":1,"skip_from_display":0,"weight":101,"bg_image_source":null,"expiration_days":30},{"id":3,"mikrotik_radius_group_name":"Student","en_title":"Student","bn_title":"\u09b8\u09cd\u099f\u09c1\u09a1\u09c7\u09a8\u09cd\u099f","type":"broadband","zone_id":null,"price":685,"expiration":43200,"sales_point_commission":10,"sales_agent_commission":5,"commission_type":"percentage","user_points":685,"is_active":1,"skip_from_display":0,"weight":111,"bg_image_source":null,"expiration_days":30},{"id":4,"mikrotik_radius_group_name":"Home","en_title":"Home","bn_title":"\u09b9\u09cb\u09ae","type":"broadband","zone_id":null,"price":995,"expiration":4320,"sales_point_commission":10,"sales_agent_commission":5,"commission_type":"percentage","user_points":995,"is_active":1,"skip_from_display":0,"weight":121,"bg_image_source":null,"expiration_days":3}],"opening":null},"status":"success","error_type":"","message":"","active_package_type":null}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          x-ratelimit-limit: '60'
          x-ratelimit-remaining: '23'
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v2/shared/internet_package_list/{type}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      type:
        name: type
        description: ''
        required: true
        example: voluptate
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      type: voluptate
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"results":{"general":[],"opening":null},"status":"success","error_type":"","message":"","active_package_type":null}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          x-ratelimit-limit: '60'
          x-ratelimit-remaining: '22'
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v2/shared/internet_package_details/{package_id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      package_id:
        name: package_id
        description: 'The ID of the package.'
        required: true
        example: consequuntur
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      package_id: consequuntur
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 500
        content: |-
          {
              "message": "Server Error"
          }
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          x-ratelimit-limit: '60'
          x-ratelimit-remaining: '21'
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v2/shared/internet_package_list/plexus_cloud/{type}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      type:
        name: type
        description: ''
        required: true
        example: minima
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      type: minima
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"results":[],"status":"error","error_type":"","message":""}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          x-ratelimit-limit: '60'
          x-ratelimit-remaining: '20'
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v2/shared/internet_package/create_update
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/v2/shared/internet_package/delete/{package_id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      package_id:
        name: package_id
        description: 'The ID of the package.'
        required: true
        example: cumque
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      package_id: cumque
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v2/shared/en_bn_value_list/{type}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      type:
        name: type
        description: ''
        required: true
        example: reprehenderit
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      type: reprehenderit
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"results":[],"status":"success","error_type":"","message":""}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          x-ratelimit-limit: '60'
          x-ratelimit-remaining: '19'
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v2/plexus/internet_user/list
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 500
        content: |-
          {
              "message": "Server Error"
          }
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          x-ratelimit-limit: '60'
          x-ratelimit-remaining: '18'
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v2/plexus/internet_user/register
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      profile:
        name: profile
        description: ''
        required: false
        example: []
        type: object
        enumValues: []
        exampleWasSpecified: false
        custom: []
      profile.full_name:
        name: profile.full_name
        description: ''
        required: true
        example: repellendus
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      profile.service_type:
        name: profile.service_type
        description: ''
        required: false
        example: tenetur
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      profile.mobile_number:
        name: profile.mobile_number
        description: ''
        required: true
        example: hic
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      profile.email:
        name: profile.email
        description: 'Must be a valid email address.'
        required: false
        example: izaiah.raynor@example.org
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      profile.company_name:
        name: profile.company_name
        description: ''
        required: true
        example: doloribus
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      profile.company_type:
        name: profile.company_type
        description: ''
        required: true
        example: eos
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      profile.profession:
        name: profile.profession
        description: ''
        required: true
        example: dolor
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      profile.division_id:
        name: profile.division_id
        description: ''
        required: true
        example: 6
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
      profile.district_id:
        name: profile.district_id
        description: ''
        required: true
        example: 2
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
      profile.upazila_id:
        name: profile.upazila_id
        description: ''
        required: true
        example: 5
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
      profile.union_id:
        name: profile.union_id
        description: ''
        required: true
        example: 7
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
      profile.village_id:
        name: profile.village_id
        description: ''
        required: true
        example: 18
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
      profile.address:
        name: profile.address
        description: ''
        required: true
        example: rerum
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      profile.address_direction:
        name: profile.address_direction
        description: ''
        required: true
        example: consequatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      profile.latitude:
        name: profile.latitude
        description: ''
        required: false
        example: 247258.769
        type: number
        enumValues: []
        exampleWasSpecified: false
        custom: []
      profile.longitude:
        name: profile.longitude
        description: ''
        required: false
        example: 56.756253226
        type: number
        enumValues: []
        exampleWasSpecified: false
        custom: []
      redirect:
        name: redirect
        description: "'data.corporate_package_id' => 'required|integer',. Must be a valid URL."
        required: true
        example: 'http://keeling.com/'
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      profile:
        full_name: repellendus
        service_type: tenetur
        mobile_number: hic
        email: izaiah.raynor@example.org
        company_name: doloribus
        company_type: eos
        profession: dolor
        division_id: 6
        district_id: 2
        upazila_id: 5
        union_id: 7
        village_id: 18
        address: rerum
        address_direction: consequatur
        latitude: 247258.769
        longitude: 56.756253226
      redirect: 'http://keeling.com/'
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v2/graph/corporate/internet/user/{days}/{type}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      days:
        name: days
        description: ''
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
      type:
        name: type
        description: ''
        required: true
        example: doloremque
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      days: 1
      type: doloremque
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"results":{"total":[{"year":2025,"month":6,"day":15,"total":0,"total_active":0,"total_pending":0}]},"status":"success","error_type":"","message":""}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          x-ratelimit-limit: '60'
          x-ratelimit-remaining: '17'
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v2/plexus/internet_user/{id}/details'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the internet user.'
        required: true
        example: quae
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      id: quae
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 500
        content: |-
          {
              "message": "Server Error"
          }
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          x-ratelimit-limit: '60'
          x-ratelimit-remaining: '16'
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v2/plexus/internet_users_summary
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v2/plexus/internet_user/search/{keywords}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      keywords:
        name: keywords
        description: ''
        required: true
        example: magni
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      keywords: magni
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v2/plexus/internet_user/{id}/basic'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the internet user.'
        required: true
        example: corporis
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      id: corporis
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/v2/plexus/internet_user/{id}/status_update'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the internet user.'
        required: true
        example: at
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      id: at
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v2/plexus/internet_user/get_all_lat_lng
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v2/plexus/internet_user/internet/user/count
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v2/corporate/internet_package/list
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"results":[],"status":"error","error_type":"token_error","message":""}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          x-ratelimit-limit: '60'
          x-ratelimit-remaining: '15'
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v2/corporate/internet_package/create_update
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v2/corporate/internet_package/details/{package_id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      package_id:
        name: package_id
        description: 'The ID of the package.'
        required: true
        example: enim
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      package_id: enim
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"results":null,"status":"error","error_type":"","message":""}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          x-ratelimit-limit: '60'
          x-ratelimit-remaining: '14'
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/v2/corporate/internet_package/delete/{client_id}/{package_id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      client_id:
        name: client_id
        description: 'The ID of the client.'
        required: true
        example: non
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      package_id:
        name: package_id
        description: 'The ID of the package.'
        required: true
        example: et
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      client_id: non
      package_id: et
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v2/corporate/user/role/check/{auth_id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      auth_id:
        name: auth_id
        description: 'The ID of the auth.'
        required: true
        example: voluptatem
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      auth_id: voluptatem
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 500
        content: |-
          {
              "message": "Server Error"
          }
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          x-ratelimit-limit: '60'
          x-ratelimit-remaining: '13'
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v2/corporate/client/list
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 500
        content: |-
          {
              "message": "Server Error"
          }
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          x-ratelimit-limit: '60'
          x-ratelimit-remaining: '12'
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v2/corporate/client/create_update
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v2/corporate/client/details/{auth_id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      auth_id:
        name: auth_id
        description: 'The ID of the auth.'
        required: true
        example: et
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      auth_id: et
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"results":[],"status":"error","error_type":"token_error","message":""}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          x-ratelimit-limit: '60'
          x-ratelimit-remaining: '11'
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/v2/corporate/client/delete/{client_id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      client_id:
        name: client_id
        description: 'The ID of the client.'
        required: true
        example: laudantium
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      client_id: laudantium
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v2/corporate/internet_users/list/{client_id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      client_id:
        name: client_id
        description: 'The ID of the client.'
        required: true
        example: totam
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      client_id: totam
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"results":[],"status":"error","error_type":"token_error","message":""}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          x-ratelimit-limit: '60'
          x-ratelimit-remaining: '10'
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v2/corporate/internet_users/create_update
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v2/corporate/internet_users/details/{auth_id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      auth_id:
        name: auth_id
        description: 'The ID of the auth.'
        required: true
        example: provident
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      auth_id: provident
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"results":null,"status":"error","error_type":"","message":""}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          x-ratelimit-limit: '60'
          x-ratelimit-remaining: '9'
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/v2/corporate/internet_users/delete/{client_id}/{username}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      client_id:
        name: client_id
        description: 'The ID of the client.'
        required: true
        example: quod
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      username:
        name: username
        description: ''
        required: true
        example: officia
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      client_id: quod
      username: officia
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v2/corporate/settings/{settings_type}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      settings_type:
        name: settings_type
        description: ''
        required: true
        example: magnam
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      settings_type: magnam
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"results":null,"status":"error","error_type":"","message":""}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          x-ratelimit-limit: '60'
          x-ratelimit-remaining: '8'
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v2/corporate/agents/{uid}/list'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      uid:
        name: uid
        description: ''
        required: true
        example: sunt
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      uid: sunt
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"status":"error","message":"Wrong Token!"}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          x-ratelimit-limit: '60'
          x-ratelimit-remaining: '7'
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/v2/corporate/agents/store/{user_id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      user_id:
        name: user_id
        description: 'The ID of the user.'
        required: true
        example: at
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      user_id: at
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      agent_name:
        name: agent_name
        description: ''
        required: true
        example: earum
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      contact_number:
        name: contact_number
        description: 'Must match the regex /^(01[6789])(\d{8})$/.'
        required: true
        example: '01972869239'
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      email:
        name: email
        description: 'Must be a valid email address.'
        required: true
        example: leffler.shad@example.net
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      division:
        name: division
        description: ''
        required: true
        example: iure
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      district:
        name: district
        description: ''
        required: true
        example: cupiditate
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      upazila:
        name: upazila
        description: ''
        required: true
        example: quo
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      union:
        name: union
        description: ''
        required: true
        example: odit
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      village:
        name: village
        description: ''
        required: true
        example: illum
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      agent_name: earum
      contact_number: '01972869239'
      email: leffler.shad@example.net
      division: iure
      district: cupiditate
      upazila: quo
      union: odit
      village: illum
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/v2/corporate/agents/update/{client_id}/{agent_id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      client_id:
        name: client_id
        description: 'The ID of the client.'
        required: true
        example: ducimus
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      agent_id:
        name: agent_id
        description: 'The ID of the agent.'
        required: true
        example: dicta
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      client_id: ducimus
      agent_id: dicta
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      agent_name:
        name: agent_name
        description: ''
        required: true
        example: voluptatem
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      email:
        name: email
        description: 'Must be a valid email address.'
        required: true
        example: jluettgen@example.com
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      division:
        name: division
        description: ''
        required: true
        example: quaerat
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      district:
        name: district
        description: ''
        required: true
        example: suscipit
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      upazila:
        name: upazila
        description: ''
        required: true
        example: perspiciatis
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      union:
        name: union
        description: ''
        required: true
        example: aut
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      village:
        name: village
        description: ''
        required: true
        example: animi
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      agent_name: voluptatem
      email: jluettgen@example.com
      division: quaerat
      district: suscipit
      upazila: perspiciatis
      union: aut
      village: animi
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/v2/corporate/agents/update/status/{client_id}/{agent_id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      client_id:
        name: client_id
        description: 'The ID of the client.'
        required: true
        example: dolorum
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      agent_id:
        name: agent_id
        description: 'The ID of the agent.'
        required: true
        example: qui
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      client_id: dolorum
      agent_id: qui
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      status:
        name: status
        description: ''
        required: true
        example: eum
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      status: eum
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/v2/corporate/agents/update/password/{client_id}/{agent_id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      client_id:
        name: client_id
        description: 'The ID of the client.'
        required: true
        example: qui
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      agent_id:
        name: agent_id
        description: 'The ID of the agent.'
        required: true
        example: error
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      client_id: qui
      agent_id: error
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      password:
        name: password
        description: ''
        required: true
        example: voluptatum
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      password: voluptatum
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v2/corporate/agents/details/{client_id}/{agent_id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      client_id:
        name: client_id
        description: 'The ID of the client.'
        required: true
        example: quia
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      agent_id:
        name: agent_id
        description: 'The ID of the agent.'
        required: true
        example: soluta
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      client_id: quia
      agent_id: soluta
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"status":"error","message":"Wrong Token!"}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          x-ratelimit-limit: '60'
          x-ratelimit-remaining: '6'
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/v2/corporate/agents/delete/{client_id}/{agent_id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      client_id:
        name: client_id
        description: 'The ID of the client.'
        required: true
        example: dolor
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      agent_id:
        name: agent_id
        description: 'The ID of the agent.'
        required: true
        example: distinctio
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      client_id: dolor
      agent_id: distinctio
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v2/corporate/sub_agents/{uid}/list'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Display a listing of the resource.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      uid:
        name: uid
        description: ''
        required: true
        example: nostrum
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      uid: nostrum
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"results":[],"status":"error","error_type":"token_error","message":""}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          x-ratelimit-limit: '60'
          x-ratelimit-remaining: '5'
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v2/corporate/sub_agents/{agentId}/list'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      agentId:
        name: agentId
        description: ''
        required: true
        example: corrupti
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      agentId: corrupti
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"results":[],"status":"error","error_type":"token_error","message":""}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          x-ratelimit-limit: '60'
          x-ratelimit-remaining: '4'
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v2/corporate/sub_agent/create_update
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Show the form for creating a new resource.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v2/corporate/sub_agent/details/{id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Display the specified resource.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the detail.'
        required: true
        example: ex
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      id: ex
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"results":[],"status":"error","error_type":"token_error","message":""}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          x-ratelimit-limit: '60'
          x-ratelimit-remaining: '3'
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v2/corporate/sub_agent/show/{username}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      username:
        name: username
        description: ''
        required: true
        example: ex
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      username: ex
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"results":[],"status":"error","error_type":"token_error","message":""}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          x-ratelimit-limit: '60'
          x-ratelimit-remaining: '2'
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/v2/corporate/sub_agent/delete/{id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Remove the specified resource from storage.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the delete.'
        required: true
        example: voluptas
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      id: voluptas
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v2/corporate/stall/list
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Display a listing of the resource.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"results":[],"status":"error","error_type":"token_error","message":""}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          x-ratelimit-limit: '60'
          x-ratelimit-remaining: '1'
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v2/corporate/stall/create_update
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Show the form for creating a new resource.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v2/corporate/stall/details/{id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Display the specified resource.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the detail.'
        required: true
        example: quaerat
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      id: quaerat
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"results":[],"status":"error","error_type":"token_error","message":""}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          x-ratelimit-limit: '60'
          x-ratelimit-remaining: '0'
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v2/corporate/stall/show/{username}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      username:
        name: username
        description: ''
        required: true
        example: veritatis
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      username: veritatis
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 429
        content: |-
          {
              "message": "Too Many Attempts."
          }
        headers:
          x-ratelimit-limit: '60'
          x-ratelimit-remaining: '0'
          retry-after: '59'
          x-ratelimit-reset: '1749959451'
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/v2/corporate/stall/delete/{id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Remove the specified resource from storage.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the delete.'
        required: true
        example: maiores
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      id: maiores
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v2/user
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v2/school/auth/data
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v2/access_check
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v2/users/registration
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      auth_id:
        name: auth_id
        description: 'Must be 11 digits.'
        required: true
        example: '32488288420'
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      password:
        name: password
        description: 'Must be at least 4 characters.'
        required: true
        example: 'gkUT.3d_&0^48yuCox*_'
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      auth_id: '32488288420'
      password: 'gkUT.3d_&0^48yuCox*_'
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v2/users/login
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      auth_id:
        name: auth_id
        description: ''
        required: true
        example: similique
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      password:
        name: password
        description: ''
        required: true
        example: et
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      auth_id: similique
      password: et
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v2/panel/users/login
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      auth_id:
        name: auth_id
        description: ''
        required: true
        example: maiores
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      password:
        name: password
        description: ''
        required: true
        example: sit
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      auth_id: maiores
      password: sit
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v2/panel/users/login/by/username
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      username:
        name: username
        description: ''
        required: true
        example: quisquam
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      password:
        name: password
        description: ''
        required: true
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      username: quisquam
      password: architecto
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v2/users/support_center/login
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      auth_id:
        name: auth_id
        description: ''
        required: true
        example: soluta
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      password:
        name: password
        description: ''
        required: true
        example: ut
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      auth_id: soluta
      password: ut
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v2/users/password/update
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v2/users/profile/update
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v2/users/password_recovery
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v2/users/check_internet_package_exist
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v2/users/search/{searchType}/{keywords}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      searchType:
        name: searchType
        description: ''
        required: true
        example: iusto
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      keywords:
        name: keywords
        description: ''
        required: true
        example: beatae
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      searchType: iusto
      keywords: beatae
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v2/panel/users/list
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v2/panel/users/{row_id}/profile'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      row_id:
        name: row_id
        description: 'The ID of the row.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      row_id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v2/panel/users/{uid}/permissions'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      uid:
        name: uid
        description: ''
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      uid: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/v2/panel/users/{uid}/permissions/update'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      uid:
        name: uid
        description: ''
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      uid: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v2/panel/users/{uid}/permission_access'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      uid:
        name: uid
        description: ''
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      uid: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 429
        content: |-
          {
              "message": "Too Many Attempts."
          }
        headers:
          x-ratelimit-limit: '60'
          x-ratelimit-remaining: '0'
          retry-after: '59'
          x-ratelimit-reset: '1749959451'
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/v2/panel/users/{row_id}/assign_as_employee'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      row_id:
        name: row_id
        description: 'The ID of the row.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      row_id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/v2/panel/users/send_message_to_user/{sender_uid}/{receiver_uid}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      sender_uid:
        name: sender_uid
        description: ''
        required: true
        example: voluptatibus
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      receiver_uid:
        name: receiver_uid
        description: ''
        required: true
        example: eum
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      sender_uid: voluptatibus
      receiver_uid: eum
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v2/get_agent_monthly_commission_rate/{agent_type}/{agent_auth_id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      agent_type:
        name: agent_type
        description: ''
        required: true
        example: aut
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      agent_auth_id:
        name: agent_auth_id
        description: 'The ID of the agent auth.'
        required: true
        example: eveniet
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      agent_type: aut
      agent_auth_id: eveniet
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v2/user/billing/panel/external
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v2/panel/users/{uid}/{module_name}/permissions'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      uid:
        name: uid
        description: ''
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
      module_name:
        name: module_name
        description: ''
        required: true
        example: necessitatibus
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      uid: 1
      module_name: necessitatibus
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v2/panel/users/zone/assign
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v2/coverage/geo/store/district
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v2/coverage/geo/store/upazila
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v2/coverage/geo/store/union_pouroshova
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Store a newly created resource in storage.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v2/coverage/geo/store/village
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/v2/coverage/geo/delete/{id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the delete.'
        required: true
        example: aut
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      id: aut
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/v2/coverage/geo/update/{id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the update.'
        required: true
        example: incidunt
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      id: incidunt
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v2/panel/permissions/page_access
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/v2/panel/update_agents_missing_commission_breakdowns/{month_year}/{agent_type}/{agent_row_id}/{commission_rate}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      month_year:
        name: month_year
        description: ''
        required: true
        example: omnis
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      agent_type:
        name: agent_type
        description: ''
        required: true
        example: aut
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      agent_row_id:
        name: agent_row_id
        description: 'The ID of the agent row.'
        required: true
        example: rerum
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      commission_rate:
        name: commission_rate
        description: ''
        required: true
        example: voluptate
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      month_year: omnis
      agent_type: aut
      agent_row_id: rerum
      commission_rate: voluptate
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v2/panel/message/list/{receiver_id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      receiver_id:
        name: receiver_id
        description: 'The ID of the receiver.'
        required: true
        example: quam
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      receiver_id: quam
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v2/panel/internet_users_summary
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v2/panel/internet_user/list
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 429
        content: |-
          {
              "message": "Too Many Attempts."
          }
        headers:
          x-ratelimit-limit: '60'
          x-ratelimit-remaining: '0'
          retry-after: '59'
          x-ratelimit-reset: '1749959451'
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v2/panel/internet_user/search/{keywords}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      keywords:
        name: keywords
        description: ''
        required: true
        example: fuga
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      keywords: fuga
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v2/panel/internet_user/{id}/basic'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the internet user.'
        required: true
        example: perspiciatis
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      id: perspiciatis
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v2/panel/internet_user/{id}/details'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the internet user.'
        required: true
        example: libero
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      id: libero
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/v2/panel/internet_user/{id}/status_update'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the internet user.'
        required: true
        example: est
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      id: est
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v2/panel/internet_user/get_all_lat_lng
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v2/panel/internet_user/internet/user/count
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v2/panel/network_support_center/{center_type}/list/{status}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      center_type:
        name: center_type
        description: ''
        required: true
        example: 16
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
      status:
        name: status
        description: ''
        required: true
        example: sapiente
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      center_type: 16
      status: sapiente
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v2/panel/network_support_center_summary/{center_type}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      center_type:
        name: center_type
        description: ''
        required: true
        example: repudiandae
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      center_type: repudiandae
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v2/panel/network_support_center/{center_type}/list'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      center_type:
        name: center_type
        description: ''
        required: true
        example: 6
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      center_type: 6
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v2/panel/network_support_center/{center_type}/search/{keyword}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      center_type:
        name: center_type
        description: ''
        required: true
        example: 10
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
      keyword:
        name: keyword
        description: ''
        required: true
        example: quia
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      center_type: 10
      keyword: quia
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v2/panel/network_support_center/{id}/basic'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the network support center.'
        required: true
        example: 20
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      id: 20
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v2/panel/network_support_center/{id}/details'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the network support center.'
        required: true
        example: 18
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      id: 18
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/v2/panel/network_support_center/{id}/{employee_id}/status_update'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the network support center.'
        required: true
        example: 3
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
      employee_id:
        name: employee_id
        description: 'The ID of the employee.'
        required: true
        example: sequi
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      id: 3
      employee_id: sequi
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v2/panel/network_support_center/skipped_packages
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v2/panel/network_support_center/package_assign
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v2/panel/network_support_center/go_next_previous/{type}/{current_id}/{sort_by}/{status}/{district}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      type:
        name: type
        description: ''
        required: true
        example: et
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      current_id:
        name: current_id
        description: 'The ID of the current.'
        required: true
        example: aut
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      sort_by:
        name: sort_by
        description: ''
        required: true
        example: a
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      status:
        name: status
        description: ''
        required: true
        example: accusantium
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      district:
        name: district
        description: ''
        required: true
        example: cumque
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      type: et
      current_id: aut
      sort_by: a
      status: accusantium
      district: cumque
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v2/panel/network_support_center/get_all_lat_lng
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v2/panel/network_support_center/user/count
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v2/panel/sales_point/summary
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v2/panel/sales_point/list
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v2/panel/sales_point/{id}/basic'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the sales point.'
        required: true
        example: sunt
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      id: sunt
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v2/panel/sales_point/{id}/details'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the sales point.'
        required: true
        example: sit
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      id: sit
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/v2/panel/sales_point/{id}/{employee_id}/status_update'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the sales point.'
        required: true
        example: iusto
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      employee_id:
        name: employee_id
        description: 'The ID of the employee.'
        required: true
        example: magni
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      id: iusto
      employee_id: magni
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v2/panel/sales_point/search/{keyword}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      keyword:
        name: keyword
        description: ''
        required: true
        example: accusantium
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      keyword: accusantium
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v2/panel/sales_point/get_all_lat_lng
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v2/panel/sales_point/user/count
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v2/panel/sales_agent/summary
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v2/panel/sales_agent/list
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 429
        content: |-
          {
              "message": "Too Many Attempts."
          }
        headers:
          x-ratelimit-limit: '60'
          x-ratelimit-remaining: '0'
          retry-after: '59'
          x-ratelimit-reset: '1749959451'
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v2/panel/sales_agent/{id}/basic'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the sales agent.'
        required: true
        example: quia
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      id: quia
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v2/panel/sales_agent/{id}/details'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the sales agent.'
        required: true
        example: ut
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      id: ut
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/v2/panel/sales_agent/{id}/{employee_id}/status_update'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the sales agent.'
        required: true
        example: mollitia
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      employee_id:
        name: employee_id
        description: 'The ID of the employee.'
        required: true
        example: itaque
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      id: mollitia
      employee_id: itaque
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v2/panel/sales_agent/search/{keyword}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      keyword:
        name: keyword
        description: ''
        required: true
        example: et
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      keyword: et
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v2/panel/sales_agent/get_all_lat_lng
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v2/panel/sales_agent/user/count
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v2/panel/career/list
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v2/panel/career/{id}/details'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the career.'
        required: true
        example: et
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      id: et
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v2/panel/career/search/{keyword}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      keyword:
        name: keyword
        description: ''
        required: true
        example: voluptatum
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      keyword: voluptatum
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v2/shared/career_resume_type_list/{status}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      status:
        name: status
        description: ''
        required: true
        example: dicta
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      status: dicta
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 429
        content: |-
          {
              "message": "Too Many Attempts."
          }
        headers:
          x-ratelimit-limit: '60'
          x-ratelimit-remaining: '0'
          retry-after: '59'
          x-ratelimit-reset: '1749959451'
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v2/panel/employee/designation_list
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v2/panel/employee/list
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v2/panel/employee/{uid}/profile'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      uid:
        name: uid
        description: ''
        required: true
        example: quibusdam
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      uid: quibusdam
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/v2/panel/employee/{uid}/panel_access_update'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      uid:
        name: uid
        description: ''
        required: true
        example: laboriosam
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      uid: laboriosam
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/v2/panel/employee/{uid}/designation_update'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      uid:
        name: uid
        description: ''
        required: true
        example: maiores
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      uid: maiores
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/v2/panel/employee/{uid}/status_update'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      uid:
        name: uid
        description: ''
        required: true
        example: laborum
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      uid: laborum
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v2/panel/employee/check_employment/{uid}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      uid:
        name: uid
        description: ''
        required: true
        example: labore
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      uid: labore
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v2/panel/payments/list
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v2/panel/payments/old_users_paid_by_apps
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/v2/panel/communication/{customer_uid}/{employee_uid}/create'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      customer_uid:
        name: customer_uid
        description: ''
        required: true
        example: voluptatem
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      employee_uid:
        name: employee_uid
        description: ''
        required: true
        example: deleniti
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      customer_uid: voluptatem
      employee_uid: deleniti
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v2/panel/communication/{customer_uid}/{type}/list'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      customer_uid:
        name: customer_uid
        description: ''
        required: true
        example: sed
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      type:
        name: type
        description: ''
        required: true
        example: animi
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      customer_uid: sed
      type: animi
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/v2/panel/communication/{type}/{id}/{employee_uid}/delete'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      type:
        name: type
        description: ''
        required: true
        example: quos
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      id:
        name: id
        description: 'The ID of the {type}.'
        required: true
        example: quidem
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      employee_uid:
        name: employee_uid
        description: ''
        required: true
        example: earum
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      type: quos
      id: quidem
      employee_uid: earum
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v2/panel/transmission/company_create_update
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v2/panel/transmission/company_details/{id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the company detail.'
        required: true
        example: possimus
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      id: possimus
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v2/panel/transmission/company_summary
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v2/panel/transmission/company_list
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/v2/panel/transmission/delete_company/{rowId}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      rowId:
        name: rowId
        description: ''
        required: true
        example: ipsa
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      rowId: ipsa
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v2/panel/transmission/active_company_list
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v2/panel/transmission/active_support_center_list
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v2/panel/transmission/pop_summary
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v2/panel/transmission/pop_list
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/v2/panel/transmission/pop_delete/{rowId}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      rowId:
        name: rowId
        description: ''
        required: true
        example: ut
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      rowId: ut
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v2/panel/transmission/pop_details/{rowId}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      rowId:
        name: rowId
        description: ''
        required: true
        example: harum
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      rowId: harum
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v2/panel/transmission/pop_nearest_customers/{latitude}/{longitude}/{radiation}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      latitude:
        name: latitude
        description: ''
        required: true
        example: est
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      longitude:
        name: longitude
        description: ''
        required: true
        example: rerum
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      radiation:
        name: radiation
        description: ''
        required: true
        example: eaque
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      latitude: est
      longitude: rerum
      radiation: eaque
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v2/panel/transmission/pop_calculate_customer_distance/{district_id}/{upazila_id}/{union_id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      district_id:
        name: district_id
        description: 'The ID of the district.'
        required: true
        example: sint
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      upazila_id:
        name: upazila_id
        description: 'The ID of the upazila.'
        required: true
        example: ut
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      union_id:
        name: union_id
        description: 'The ID of the union.'
        required: true
        example: consequatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      district_id: sint
      upazila_id: ut
      union_id: consequatur
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v2/panel/transmission/tjbox_summary
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v2/panel/transmission/tjbox_list
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v2/panel/transmission/customer_summary
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v2/panel/transmission/customer_list
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/v2/panel/transmission/customer_delete/{rowId}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      rowId:
        name: rowId
        description: ''
        required: true
        example: unde
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      rowId: unde
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v2/panel/transmission/customer_details/{rowId}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      rowId:
        name: rowId
        description: ''
        required: true
        example: aspernatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      rowId: aspernatur
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v2/panel/transmission/customers_nearest_pops/{customer_id}/{latitude}/{longitude}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      customer_id:
        name: customer_id
        description: 'The ID of the customer.'
        required: true
        example: quas
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      latitude:
        name: latitude
        description: ''
        required: true
        example: voluptatibus
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      longitude:
        name: longitude
        description: ''
        required: true
        example: nihil
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      customer_id: quas
      latitude: voluptatibus
      longitude: nihil
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/v2/panel/import/transmission_pops/{type}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      type:
        name: type
        description: ''
        required: true
        example: perferendis
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      type: perferendis
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/v2/panel/import/transmission_customers/{type}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      type:
        name: type
        description: ''
        required: true
        example: hic
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      type: hic
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v2/panel/otp/{id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the otp.'
        required: true
        example: possimus
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      id: possimus
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/v2/panel/otp/delete/{id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the delete.'
        required: true
        example: nam
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      id: nam
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v2/panel/isp_business_center/list
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v2/panel/isp_business_center/all/list
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v2/panel/isp_business_center/{id}/details'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the isp business center.'
        required: true
        example: enim
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      id: enim
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/v2/panel/isp_business_center/{uid}/{employee_id}/status_update'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      uid:
        name: uid
        description: ''
        required: true
        example: quam
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      employee_id:
        name: employee_id
        description: 'The ID of the employee.'
        required: true
        example: eaque
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      uid: quam
      employee_id: eaque
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      zone_name:
        name: zone_name
        description: ''
        required: true
        example: ab
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      partner_name:
        name: partner_name
        description: ''
        required: true
        example: amet
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      thana:
        name: thana
        description: ''
        required: true
        example: ut
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      district:
        name: district
        description: ''
        required: true
        example: molestiae
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      division:
        name: division
        description: ''
        required: true
        example: et
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      hotspot_profile:
        name: hotspot_profile
        description: ''
        required: true
        example: ut
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      mikrotik_ip:
        name: mikrotik_ip
        description: ''
        required: true
        example: possimus
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      client_type:
        name: client_type
        description: ''
        required: true
        example: commodi
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      status:
        name: status
        description: ''
        required: true
        example: autem
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      zone_name: ab
      partner_name: amet
      thana: ut
      district: molestiae
      division: et
      hotspot_profile: ut
      mikrotik_ip: possimus
      client_type: commodi
      status: autem
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v2/panel/isp_business_center/{id}/balance_wallet'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the isp business center.'
        required: true
        example: sunt
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      id: sunt
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v2/panel/isp_business_center/find_user/{mobile_number}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      mobile_number:
        name: mobile_number
        description: ''
        required: true
        example: magnam
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      mobile_number: magnam
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v2/panel/internet/user/list/by/{zone_id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      zone_id:
        name: zone_id
        description: 'The ID of the zone.'
        required: true
        example: saepe
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      zone_id: saepe
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v2/panel/internet/user/list/by/district/{uid}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      uid:
        name: uid
        description: ''
        required: true
        example: necessitatibus
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      uid: necessitatibus
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v2/panel/internet_user/by/radiation/{radiation}/user/{uid}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      radiation:
        name: radiation
        description: 'The radiation.'
        required: true
        example: voluptas
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      uid:
        name: uid
        description: ''
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      radiation: voluptas
      uid: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v2/isp/corporate/client/list
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 429
        content: |-
          {
              "message": "Too Many Attempts."
          }
        headers:
          x-ratelimit-limit: '60'
          x-ratelimit-remaining: '0'
          retry-after: '59'
          x-ratelimit-reset: '1749959451'
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v2/client/settings/{client_uid}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get client settings'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      client_uid:
        name: client_uid
        description: ''
        required: true
        example: impedit
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      client_uid: impedit
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/v2/client/logo/update/{client_uid}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'upload company logo'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      client_uid:
        name: client_uid
        description: ''
        required: true
        example: et
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      client_uid: et
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      logo:
        name: logo
        description: 'Must not be greater than 1024 characters.'
        required: true
        example: cuvwtmbopvirg
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      logo: cuvwtmbopvirg
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/v2/client/signature/update/{client_uid}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'upload & update signature'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      client_uid:
        name: client_uid
        description: ''
        required: true
        example: dolore
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      client_uid: dolore
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      signature:
        name: signature
        description: 'Must not be greater than 1024 characters.'
        required: true
        example: kagiygxiucktyto
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      signature: kagiygxiucktyto
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/v2/client/billing/cycle/update/{client_uid}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Billing Cycle Edit Update'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      client_uid:
        name: client_uid
        description: ''
        required: true
        example: et
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      client_uid: et
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      billing_cycle:
        name: billing_cycle
        description: ''
        required: true
        example: reprehenderit
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      billing_cycle: reprehenderit
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/v2/client/payment/method/update/{client_uid}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Payment method Edit Update'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      client_uid:
        name: client_uid
        description: ''
        required: true
        example: consequuntur
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      client_uid: consequuntur
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      payment_method:
        name: payment_method
        description: ''
        required: true
        example: debitis
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      payment_method: debitis
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/v2/isp/corporate/client/delete/{id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the delete.'
        required: true
        example: omnis
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      id: omnis
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v2/panel/permission/list
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v2/panel/permission/create
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      group_name:
        name: group_name
        description: ''
        required: true
        example: rerum
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      key_name:
        name: key_name
        description: ''
        required: true
        example: quod
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      module_names:
        name: module_names
        description: ''
        required: true
        example: in
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      name:
        name: name
        description: ''
        required: true
        example: qui
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      group_name: rerum
      key_name: quod
      module_names: in
      name: qui
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v2/panel/permission/update
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/v2/panel/permission/delete/{id}/{key_name}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the delete.'
        required: true
        example: rem
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      key_name:
        name: key_name
        description: ''
        required: true
        example: nesciunt
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      id: rem
      key_name: nesciunt
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v2/panel/branch/list
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v2/isp/client/broadband/user/bulk/upload
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      file:
        name: file
        description: ''
        required: true
        example: assumenda
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      file: assumenda
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/v2/panel/{branch_name}/broadband/disable'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      branch_name:
        name: branch_name
        description: ''
        required: true
        example: necessitatibus
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      branch_name: necessitatibus
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/v2/panel/{branch_name}/broadband/enable'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      branch_name:
        name: branch_name
        description: ''
        required: true
        example: neque
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      branch_name: neque
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v2/panel/broadband/current_month_status/reset
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v2/panel/{branch_name}/statement/broadband/list'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      branch_name:
        name: branch_name
        description: ''
        required: true
        example: ratione
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      branch_name: ratione
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v2/panel/{branch_name}/statement/wifi/list'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      branch_name:
        name: branch_name
        description: ''
        required: true
        example: est
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      branch_name: est
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v2/panel/{branch_name}/mikrotik/broadband/total/user/list'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      branch_name:
        name: branch_name
        description: ''
        required: true
        example: et
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      branch_name: et
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v2/panel/{branch_name}/mikrotik/broadband/active/user/list'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      branch_name:
        name: branch_name
        description: ''
        required: true
        example: dolorem
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      branch_name: dolorem
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v2/panel/{branch_name}/mikrotik/broadband/inactive/user/list'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      branch_name:
        name: branch_name
        description: ''
        required: true
        example: quia
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      branch_name: quia
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v2/panel/{branch_name}/mikrotik/broadband/connected/user/list'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      branch_name:
        name: branch_name
        description: ''
        required: true
        example: voluptatem
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      branch_name: voluptatem
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v2/panel/{branch_name}/mikrotik/hotspot/total/user/list'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      branch_name:
        name: branch_name
        description: ''
        required: true
        example: nostrum
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      branch_name: nostrum
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v2/panel/{branch_name}/mikrotik/hotspot/paid/user/list'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      branch_name:
        name: branch_name
        description: ''
        required: true
        example: atque
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      branch_name: atque
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v2/panel/{branch_name}/mikrotik/hotspot/connected/user/list'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      branch_name:
        name: branch_name
        description: ''
        required: true
        example: est
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      branch_name: est
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v2/panel/isp_client/{user_id}/statement/broadband/list'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      user_id:
        name: user_id
        description: 'The ID of the user.'
        required: true
        example: est
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      user_id: est
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v2/panel/isp_client/{user_id}/statement/wifi/list'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      user_id:
        name: user_id
        description: 'The ID of the user.'
        required: true
        example: corporis
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      user_id: corporis
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v2/panel/all/lat/long/list
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 429
        content: |-
          {
              "message": "Too Many Attempts."
          }
        headers:
          x-ratelimit-limit: '60'
          x-ratelimit-remaining: '0'
          retry-after: '59'
          x-ratelimit-reset: '1749959451'
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v2/panel/status/summary
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 429
        content: |-
          {
              "message": "Too Many Attempts."
          }
        headers:
          x-ratelimit-limit: '60'
          x-ratelimit-remaining: '0'
          retry-after: '59'
          x-ratelimit-reset: '1749959451'
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v2/isp/panel/{user_id}/agent/list'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      user_id:
        name: user_id
        description: 'The ID of the user.'
        required: true
        example: eum
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      user_id: eum
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v2/isp/panel/agent/list
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v2/isp/panel/agent/details/{id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the detail.'
        required: true
        example: ut
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      id: ut
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/v2/isp/panel/{user_id}/agent/register'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      user_id:
        name: user_id
        description: 'The ID of the user.'
        required: true
        example: cum
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      user_id: cum
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      agent_name:
        name: agent_name
        description: ''
        required: true
        example: animi
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      contact_number:
        name: contact_number
        description: ''
        required: true
        example: quis
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      email:
        name: email
        description: 'Must be a valid email address.'
        required: true
        example: laney.oberbrunner@example.net
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      division:
        name: division
        description: ''
        required: true
        example: quasi
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      district:
        name: district
        description: ''
        required: true
        example: ut
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      upazila:
        name: upazila
        description: ''
        required: true
        example: maiores
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      union:
        name: union
        description: ''
        required: true
        example: unde
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      village:
        name: village
        description: ''
        required: true
        example: quo
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      commission:
        name: commission
        description: ''
        required: true
        example: earum
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      agent_name: animi
      contact_number: quis
      email: laney.oberbrunner@example.net
      division: quasi
      district: ut
      upazila: maiores
      union: unde
      village: quo
      commission: earum
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/v2/isp/panel/{user_id}/agent/update'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      user_id:
        name: user_id
        description: 'The ID of the user.'
        required: true
        example: blanditiis
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      user_id: blanditiis
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      agent_name:
        name: agent_name
        description: ''
        required: true
        example: doloremque
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      contact_number:
        name: contact_number
        description: ''
        required: true
        example: quo
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      email:
        name: email
        description: 'Must be a valid email address.'
        required: true
        example: justen.corwin@example.com
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      division:
        name: division
        description: ''
        required: true
        example: adipisci
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      district:
        name: district
        description: ''
        required: true
        example: voluptas
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      upazila:
        name: upazila
        description: ''
        required: true
        example: eos
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      union:
        name: union
        description: ''
        required: true
        example: assumenda
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      village:
        name: village
        description: ''
        required: true
        example: minus
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      commission:
        name: commission
        description: ''
        required: true
        example: dicta
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      agent_name: doloremque
      contact_number: quo
      email: justen.corwin@example.com
      division: adipisci
      district: voluptas
      upazila: eos
      union: assumenda
      village: minus
      commission: dicta
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/v2/isp/panel/{user_id}/{agent_uid}/agent/delete'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      user_id:
        name: user_id
        description: 'The ID of the user.'
        required: true
        example: aliquam
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      agent_uid:
        name: agent_uid
        description: ''
        required: true
        example: illum
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      user_id: aliquam
      agent_uid: illum
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v2/isp/panel/{user_id}/sub_agent/list'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      user_id:
        name: user_id
        description: 'The ID of the user.'
        required: true
        example: et
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      user_id: et
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v2/isp/panel/sub_agent/list
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v2/isp/panel/sub_agent/details/{id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the detail.'
        required: true
        example: atque
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      id: atque
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/v2/isp/panel/{user_id}/sub_agent/register'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      user_id:
        name: user_id
        description: 'The ID of the user.'
        required: true
        example: mollitia
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      user_id: mollitia
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      sub_agent_name:
        name: sub_agent_name
        description: ''
        required: true
        example: omnis
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      contact_number:
        name: contact_number
        description: ''
        required: true
        example: suscipit
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      email:
        name: email
        description: 'Must be a valid email address.'
        required: true
        example: lauryn25@example.net
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      division:
        name: division
        description: ''
        required: true
        example: sed
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      district:
        name: district
        description: ''
        required: true
        example: iure
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      upazila:
        name: upazila
        description: ''
        required: true
        example: dolorum
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      union:
        name: union
        description: ''
        required: true
        example: mollitia
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      village:
        name: village
        description: ''
        required: true
        example: est
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      commission:
        name: commission
        description: ''
        required: true
        example: et
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      sub_agent_name: omnis
      contact_number: suscipit
      email: lauryn25@example.net
      division: sed
      district: iure
      upazila: dolorum
      union: mollitia
      village: est
      commission: et
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/v2/isp/panel/{user_id}/sub_agent/update'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      user_id:
        name: user_id
        description: 'The ID of the user.'
        required: true
        example: et
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      user_id: et
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      sub_agent_name:
        name: sub_agent_name
        description: ''
        required: true
        example: quibusdam
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      contact_number:
        name: contact_number
        description: ''
        required: true
        example: aut
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      email:
        name: email
        description: 'Must be a valid email address.'
        required: true
        example: hanna.pfannerstill@example.org
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      division:
        name: division
        description: ''
        required: true
        example: cum
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      district:
        name: district
        description: ''
        required: true
        example: sint
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      upazila:
        name: upazila
        description: ''
        required: true
        example: omnis
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      union:
        name: union
        description: ''
        required: true
        example: nemo
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      village:
        name: village
        description: ''
        required: true
        example: fuga
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      commission:
        name: commission
        description: ''
        required: true
        example: aliquam
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      sub_agent_name: quibusdam
      contact_number: aut
      email: hanna.pfannerstill@example.org
      division: cum
      district: sint
      upazila: omnis
      union: nemo
      village: fuga
      commission: aliquam
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/v2/isp/panel/{user_id}/{agent_id}/{sub_agent_uid}/sub_agent/delete'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      user_id:
        name: user_id
        description: 'The ID of the user.'
        required: true
        example: voluptate
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      agent_id:
        name: agent_id
        description: 'The ID of the agent.'
        required: true
        example: voluptas
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      sub_agent_uid:
        name: sub_agent_uid
        description: ''
        required: true
        example: doloribus
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      user_id: voluptate
      agent_id: voluptas
      sub_agent_uid: doloribus
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v2/isp/panel/{uid}/transaction/history'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      uid:
        name: uid
        description: ''
        required: true
        example: quibusdam
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      uid: quibusdam
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/v2/isp/panel/money/admin-client/{admin_id}/{client_id}/transfer'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      admin_id:
        name: admin_id
        description: 'The ID of the admin.'
        required: true
        example: iste
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      client_id:
        name: client_id
        description: 'The ID of the client.'
        required: true
        example: natus
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      admin_id: iste
      client_id: natus
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      balance:
        name: balance
        description: 'Must be at least 0.'
        required: true
        example: 62
        type: number
        enumValues: []
        exampleWasSpecified: false
        custom: []
      type:
        name: type
        description: ''
        required: true
        example: add
        type: string
        enumValues:
          - add
          - minus
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      balance: 62
      type: add
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/v2/isp/panel/money/client-agent/{client_id}/{agent_id}/transfer'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      client_id:
        name: client_id
        description: 'The ID of the client.'
        required: true
        example: iste
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      agent_id:
        name: agent_id
        description: 'The ID of the agent.'
        required: true
        example: sint
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      client_id: iste
      agent_id: sint
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      balance:
        name: balance
        description: 'Must be at least 0.'
        required: true
        example: 68
        type: number
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      balance: 68
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/v2/isp/panel/money/agent-sub_agent/{agent_id}/{sub_agent_id}/transfer'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      agent_id:
        name: agent_id
        description: 'The ID of the agent.'
        required: true
        example: non
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      sub_agent_id:
        name: sub_agent_id
        description: 'The ID of the sub agent.'
        required: true
        example: nostrum
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      agent_id: non
      sub_agent_id: nostrum
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      balance:
        name: balance
        description: 'Must be at least 0.'
        required: true
        example: 72
        type: number
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      balance: 72
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/v2/isp/panel/{uid}/wallet_to_balance'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      uid:
        name: uid
        description: ''
        required: true
        example: expedita
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      uid: expedita
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/v2/isp/panel/{client_id}/broadband/disable'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      client_id:
        name: client_id
        description: 'The ID of the client.'
        required: true
        example: debitis
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      client_id: debitis
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/v2/isp/panel/{client_id}/broadband/enable'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      client_id:
        name: client_id
        description: 'The ID of the client.'
        required: true
        example: quas
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      client_id: quas
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/v2/isp/panel/{client_id}/{username}/broadband/enable'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      client_id:
        name: client_id
        description: 'The ID of the client.'
        required: true
        example: aut
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      username:
        name: username
        description: ''
        required: true
        example: modi
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      client_id: aut
      username: modi
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/v2/isp/panel/{client_id}/{username}/broadband/disable'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      client_id:
        name: client_id
        description: 'The ID of the client.'
        required: true
        example: ipsum
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      username:
        name: username
        description: ''
        required: true
        example: assumenda
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      client_id: ipsum
      username: assumenda
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v2/isp/broadband/{uid}/internet/user/list'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      uid:
        name: uid
        description: ''
        required: true
        example: eaque
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      uid: eaque
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/v2/isp/client/{client_uid}/broadband/user/create'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      client_uid:
        name: client_uid
        description: ''
        required: true
        example: omnis
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      client_uid: omnis
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      full_name:
        name: full_name
        description: ''
        required: true
        example: hic
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      mobile_number:
        name: mobile_number
        description: ''
        required: true
        example: dolorem
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      nid:
        name: nid
        description: ''
        required: true
        example: doloribus
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      gender:
        name: gender
        description: ''
        required: true
        example: eos
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      division:
        name: division
        description: ''
        required: true
        example: et
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      district:
        name: district
        description: ''
        required: true
        example: est
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      upazila:
        name: upazila
        description: ''
        required: true
        example: qui
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      union:
        name: union
        description: ''
        required: true
        example: voluptas
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      village:
        name: village
        description: ''
        required: true
        example: et
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      house:
        name: house
        description: ''
        required: true
        example: et
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      address:
        name: address
        description: ''
        required: true
        example: sunt
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      latitude:
        name: latitude
        description: ''
        required: true
        example: sit
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      longitude:
        name: longitude
        description: ''
        required: true
        example: animi
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      package:
        name: package
        description: ''
        required: true
        example: eos
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      pop:
        name: pop
        description: ''
        required: true
        example: facere
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      ins_cost:
        name: ins_cost
        description: ''
        required: true
        example: aut
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      connection_media:
        name: connection_media
        description: ''
        required: true
        example: quam
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      user_type:
        name: user_type
        description: ''
        required: true
        example: tempora
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      division_name:
        name: division_name
        description: ''
        required: true
        example: aspernatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      district_name:
        name: district_name
        description: ''
        required: true
        example: nam
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      upazila_name:
        name: upazila_name
        description: ''
        required: true
        example: ea
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      full_name: hic
      mobile_number: dolorem
      nid: doloribus
      gender: eos
      division: et
      district: est
      upazila: qui
      union: voluptas
      village: et
      house: et
      address: sunt
      latitude: sit
      longitude: animi
      package: eos
      pop: facere
      ins_cost: aut
      connection_media: quam
      user_type: tempora
      division_name: aspernatur
      district_name: nam
      upazila_name: ea
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/v2/isp/broadband/{uid}/payment/panel-money'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      uid:
        name: uid
        description: ''
        required: true
        example: natus
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      uid: natus
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/v2/isp/broadband/{editor_id}/{internet_user_id}/update/user'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      editor_id:
        name: editor_id
        description: 'The ID of the editor.'
        required: true
        example: eius
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      internet_user_id:
        name: internet_user_id
        description: 'The ID of the internet user.'
        required: true
        example: quia
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      editor_id: eius
      internet_user_id: quia
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      full_name:
        name: full_name
        description: ''
        required: true
        example: ut
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      password:
        name: password
        description: ''
        required: true
        example: et
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      email:
        name: email
        description: "'whatsapp_number' => 'required',. Must be a valid email address."
        required: true
        example: lionel61@example.com
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      gender:
        name: gender
        description: ''
        required: true
        example: fuga
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      nid:
        name: nid
        description: "'profession' => 'required',."
        required: true
        example: quo
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      division:
        name: division
        description: ''
        required: true
        example: aliquid
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      district:
        name: district
        description: ''
        required: true
        example: impedit
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      upazila:
        name: upazila
        description: ''
        required: true
        example: similique
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      union:
        name: union
        description: ''
        required: true
        example: similique
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      village:
        name: village
        description: ''
        required: true
        example: sequi
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      house:
        name: house
        description: ''
        required: true
        example: rerum
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      address_direction:
        name: address_direction
        description: "'post_code' => 'required',."
        required: true
        example: aut
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      address:
        name: address
        description: ''
        required: true
        example: dolorem
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      latitude:
        name: latitude
        description: ''
        required: true
        example: et
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      longitude:
        name: longitude
        description: ''
        required: true
        example: nihil
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      pop:
        name: pop
        description: ''
        required: true
        example: in
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      division_name:
        name: division_name
        description: ''
        required: true
        example: voluptatum
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      district_name:
        name: district_name
        description: ''
        required: true
        example: ullam
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      upazila_name:
        name: upazila_name
        description: ''
        required: true
        example: qui
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      full_name: ut
      password: et
      email: lionel61@example.com
      gender: fuga
      nid: quo
      division: aliquid
      district: impedit
      upazila: similique
      union: similique
      village: sequi
      house: rerum
      address_direction: aut
      address: dolorem
      latitude: et
      longitude: nihil
      pop: in
      division_name: voluptatum
      district_name: ullam
      upazila_name: qui
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/v2/isp/broadband/{editor_id}/{internet_user_id}/delete/user'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      editor_id:
        name: editor_id
        description: 'The ID of the editor.'
        required: true
        example: consequatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      internet_user_id:
        name: internet_user_id
        description: 'The ID of the internet user.'
        required: true
        example: reiciendis
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      editor_id: consequatur
      internet_user_id: reiciendis
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/v2/isp/broadband/{editor_id}/{internet_user_id}/bill_entry'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      editor_id:
        name: editor_id
        description: 'The ID of the editor.'
        required: true
        example: et
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      internet_user_id:
        name: internet_user_id
        description: 'The ID of the internet user.'
        required: true
        example: sunt
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      editor_id: et
      internet_user_id: sunt
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/v2/isp/client/{client_id}/broadband/existing/user'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      client_id:
        name: client_id
        description: 'The ID of the client.'
        required: true
        example: autem
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      client_id: autem
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/v2/isp/client/{uid}/broadband/package/change'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      uid:
        name: uid
        description: ''
        required: true
        example: doloremque
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      uid: doloremque
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/v2/isp/client/update/connection/status/{mobile}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      mobile:
        name: mobile
        description: ''
        required: true
        example: nam
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      mobile: nam
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v2/isp/hotspot/{uid}/internet/user/list'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      uid:
        name: uid
        description: ''
        required: true
        example: commodi
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      uid: commodi
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v2/isp/paid/hotspot/{uid}/internet/user/list'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      uid:
        name: uid
        description: ''
        required: true
        example: nobis
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      uid: nobis
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v2/isp/hotspot/internet/user/create
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      full_name:
        name: full_name
        description: ''
        required: true
        example: et
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      mobile_number:
        name: mobile_number
        description: ''
        required: true
        example: dolorem
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      full_name: et
      mobile_number: dolorem
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/v2/isp/client/{client_id}/hotspot/existing/user'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      client_id:
        name: client_id
        description: 'The ID of the client.'
        required: true
        example: ipsam
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      client_id: ipsam
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      full_name:
        name: full_name
        description: ''
        required: true
        example: provident
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      mobile_number:
        name: mobile_number
        description: ''
        required: true
        example: velit
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      full_name: provident
      mobile_number: velit
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/v2/isp/hotspot/{editor_id}/{internet_user_id}/update/user'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      editor_id:
        name: editor_id
        description: 'The ID of the editor.'
        required: true
        example: deleniti
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      internet_user_id:
        name: internet_user_id
        description: 'The ID of the internet user.'
        required: true
        example: alias
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      editor_id: deleniti
      internet_user_id: alias
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      full_name:
        name: full_name
        description: ''
        required: true
        example: iste
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      password:
        name: password
        description: ''
        required: true
        example: beatae
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      division:
        name: division
        description: |-
          'whatsapp_number' => 'required',
          'email' => 'required|email',
          'gender' => 'required',
          'profession' => 'required',
          'nid' => 'required',.
        required: true
        example: deserunt
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      district:
        name: district
        description: ''
        required: true
        example: fugit
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      upazila:
        name: upazila
        description: ''
        required: true
        example: molestiae
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      union:
        name: union
        description: ''
        required: true
        example: repellendus
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      village:
        name: village
        description: ''
        required: true
        example: dolor
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      house:
        name: house
        description: ''
        required: true
        example: voluptatibus
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      address:
        name: address
        description: |-
          'post_code' => 'required',
          'address_direction' => 'required',.
        required: true
        example: nemo
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      latitude:
        name: latitude
        description: ''
        required: true
        example: aspernatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      longitude:
        name: longitude
        description: ''
        required: true
        example: harum
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      full_name: iste
      password: beatae
      division: deserunt
      district: fugit
      upazila: molestiae
      union: repellendus
      village: dolor
      house: voluptatibus
      address: nemo
      latitude: aspernatur
      longitude: harum
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/v2/isp/hotspot/{editor_id}/{internet_user_id}/delete/user'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      editor_id:
        name: editor_id
        description: 'The ID of the editor.'
        required: true
        example: id
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      internet_user_id:
        name: internet_user_id
        description: 'The ID of the internet user.'
        required: true
        example: enim
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      editor_id: id
      internet_user_id: enim
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/v2/isp/hotspot/{editor_id}/{internet_user_id}/bill_entry'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      editor_id:
        name: editor_id
        description: 'The ID of the editor.'
        required: true
        example: voluptates
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      internet_user_id:
        name: internet_user_id
        description: 'The ID of the internet user.'
        required: true
        example: est
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      editor_id: voluptates
      internet_user_id: est
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v2/isp/hotspot/package/update/{zone_id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      zone_id:
        name: zone_id
        description: 'The ID of the zone.'
        required: true
        example: dicta
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      zone_id: dicta
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 429
        content: |-
          {
              "message": "Too Many Attempts."
          }
        headers:
          x-ratelimit-limit: '60'
          x-ratelimit-remaining: '0'
          retry-after: '58'
          x-ratelimit-reset: '1749959451'
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v2/isp/hotspot/checking/session/expire
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v2/shadhin/hotspot/checking/session/expire
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v2/isp/hotspot/client/internet/user/create
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      full_name:
        name: full_name
        description: 'Must not be greater than 50 characters.'
        required: true
        example: zeuiwnlakvovytbb
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      mobile_number:
        name: mobile_number
        description: 'Must be 11 digits.'
        required: true
        example: '87285319102'
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      full_name: zeuiwnlakvovytbb
      mobile_number: '87285319102'
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v2/isp/hotspot/bkash/info
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v2/isp/hotspot/create/payment/from/payment/portal
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v2/isp/hotspot/create/payment/from/payment/portal/sslcommerz
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v2/panel/isp_client/bkash/tokenize/payment/create
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v2/isp/hotspot/create/payment/from/portal/bkash/tokenize
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v2/isp/hotspot/login/check
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v2/isp/hotspot/checking/expire/date
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v2/isp/hotspot/change/password
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v2/isp/client/hotspot/user/bulk/upload
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      file:
        name: file
        description: ''
        required: true
        example: voluptatum
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      file: voluptatum
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v2/all/corporate/packages
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v2/broadband/corporate/packages
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v2/edc/packages
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v2/wifi/corporate/packages
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v2/broadband/corporate/client/{uid}/packages'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      uid:
        name: uid
        description: ''
        required: true
        example: quis
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      uid: quis
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v2/wifi/corporate/client/{uid}/packages'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      uid:
        name: uid
        description: ''
        required: true
        example: explicabo
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      uid: explicabo
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v2/create/corporate/client/package
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      en_title:
        name: en_title
        description: ''
        required: true
        example: quia
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      package_type:
        name: package_type
        description: ''
        required: true
        example: nemo
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      bn_title:
        name: bn_title
        description: ''
        required: true
        example: mollitia
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      price:
        name: price
        description: ''
        required: true
        example: et
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      upload_speed:
        name: upload_speed
        description: ''
        required: true
        example: velit
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      download_speed:
        name: download_speed
        description: ''
        required: true
        example: eveniet
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      validity:
        name: validity
        description: ''
        required: true
        example: et
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      en_title: quia
      package_type: nemo
      bn_title: mollitia
      price: et
      upload_speed: velit
      download_speed: eveniet
      validity: et
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/v2/update/corporate/client/package/{id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the package.'
        required: true
        example: dolores
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      id: dolores
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      en_title:
        name: en_title
        description: ''
        required: true
        example: culpa
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      package_type:
        name: package_type
        description: ''
        required: true
        example: est
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      bn_title:
        name: bn_title
        description: ''
        required: true
        example: neque
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      price:
        name: price
        description: ''
        required: true
        example: dignissimos
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      upload_speed:
        name: upload_speed
        description: ''
        required: true
        example: voluptate
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      download_speed:
        name: download_speed
        description: ''
        required: true
        example: alias
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      validity:
        name: validity
        description: ''
        required: true
        example: in
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      en_title: culpa
      package_type: est
      bn_title: neque
      price: dignissimos
      upload_speed: voluptate
      download_speed: alias
      validity: in
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/v2/enable/disable/corporate/client/package/{id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the package.'
        required: true
        example: modi
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      id: modi
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      is_active:
        name: is_active
        description: ''
        required: true
        example: saepe
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      is_active: saepe
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/v2/delete/corporate/client/package/{id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the package.'
        required: true
        example: voluptate
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      id: voluptate
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/v2/assign/corporate/client/{client_id}/package/{id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      client_id:
        name: client_id
        description: 'The ID of the client.'
        required: true
        example: libero
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      id:
        name: id
        description: 'The ID of the package.'
        required: true
        example: quas
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      client_id: libero
      id: quas
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v2/broadband/shadhin/packages
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v2/broadband/packages
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v2/wifi/packages
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v2/broadband/user/register
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      serial:
        name: serial
        description: ''
        required: true
        example: 643771767.0
        type: number
        enumValues: []
        exampleWasSpecified: false
        custom: []
      pop_name:
        name: pop_name
        description: ''
        required: true
        example: illo
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      date:
        name: date
        description: 'Must be a valid date in the format <code>Y-m-d</code>.'
        required: true
        example: '2025-06-15'
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      zone_name:
        name: zone_name
        description: ''
        required: true
        example: aliquid
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      referer_name:
        name: referer_name
        description: ''
        required: true
        example: accusamus
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      referer_mobile:
        name: referer_mobile
        description: ''
        required: true
        example: 153.0
        type: number
        enumValues: []
        exampleWasSpecified: false
        custom: []
      mobile:
        name: mobile
        description: ''
        required: true
        example: 213.740161
        type: number
        enumValues: []
        exampleWasSpecified: false
        custom: []
      package:
        name: package
        description: ''
        required: true
        example: officia
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      customer_name:
        name: customer_name
        description: ''
        required: true
        example: voluptates
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      gender:
        name: gender
        description: ''
        required: true
        example: quam
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      installation_cost:
        name: installation_cost
        description: ''
        required: true
        example: 155.346
        type: number
        enumValues: []
        exampleWasSpecified: false
        custom: []
      billing_address:
        name: billing_address
        description: ''
        required: true
        example: ut
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      village:
        name: village
        description: ''
        required: true
        example: dicta
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      post_code:
        name: post_code
        description: ''
        required: true
        example: voluptas
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      upazila:
        name: upazila
        description: ''
        required: true
        example: voluptatum
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      district:
        name: district
        description: ''
        required: true
        example: amet
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      division:
        name: division
        description: ''
        required: true
        example: fuga
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      nid_passport:
        name: nid_passport
        description: ''
        required: true
        example: aperiam
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      email:
        name: email
        description: 'Must be a valid email address.'
        required: true
        example: erdman.okey@example.org
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      user_type:
        name: user_type
        description: ''
        required: true
        example: sit
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      connection_media:
        name: connection_media
        description: ''
        required: true
        example: quia
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      serial: 643771767.0
      pop_name: illo
      date: '2025-06-15'
      zone_name: aliquid
      referer_name: accusamus
      referer_mobile: 153.0
      mobile: 213.740161
      package: officia
      customer_name: voluptates
      gender: quam
      installation_cost: 155.346
      billing_address: ut
      village: dicta
      post_code: voluptas
      upazila: voluptatum
      district: amet
      division: fuga
      nid_passport: aperiam
      email: erdman.okey@example.org
      user_type: sit
      connection_media: quia
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v2/web/network_support_center/register
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      full_name:
        name: full_name
        description: ''
        required: true
        example: eveniet
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      latitude:
        name: latitude
        description: ''
        required: true
        example: quaerat
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      longitude:
        name: longitude
        description: ''
        required: true
        example: aut
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      coverage_ids:
        name: coverage_ids
        description: ''
        required: true
        example: voluptatem
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      full_name: eveniet
      latitude: quaerat
      longitude: aut
      coverage_ids: voluptatem
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v2/web/isp_business_center/register
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      profile:
        name: profile
        description: ''
        required: false
        example: []
        type: object
        enumValues: []
        exampleWasSpecified: false
        custom: []
      profile.mobile_number:
        name: profile.mobile_number
        description: 'Must match the regex /^([0-9\s\-\+\(\)]*)$/. Must be at least 11 characters. Must not be greater than 13 characters.'
        required: true
        example: svl
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      profile:
        mobile_number: svl
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v2/web/internet_user/register
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v2/web/sales_agent/register
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v2/web/sales_point/register
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v2/web/application/resume
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v2/apps/welcome_screens
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v2/apps/account/basic
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v2/apps/account/profile_update
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v2/apps/get_dashboard_data
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v2/apps/check_wallet_balance
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v2/apps/send_message
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/v2/apps/verify_otp/{mobile_number}/{otp_number}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      mobile_number:
        name: mobile_number
        description: ''
        required: true
        example: sed
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      otp_number:
        name: otp_number
        description: ''
        required: true
        example: nihil
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      mobile_number: sed
      otp_number: nihil
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v2/apps/purchase_internet_package
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v2/apps/get_user_internet_password
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v2/apps/user_internet_package/{user_auth_id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      user_auth_id:
        name: user_auth_id
        description: 'The ID of the user auth.'
        required: true
        example: est
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      user_auth_id: est
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v2/apps/user_internet_zone/{user_auth_id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      user_auth_id:
        name: user_auth_id
        description: 'The ID of the user auth.'
        required: true
        example: et
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      user_auth_id: et
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v2/apps/check_wifi_connection_status
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v2/apps/check_old_broadband_user_existence/{user_auth_id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      user_auth_id:
        name: user_auth_id
        description: 'The ID of the user auth.'
        required: true
        example: est
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      user_auth_id: est
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 429
        content: |-
          {
              "message": "Too Many Attempts."
          }
        headers:
          x-ratelimit-limit: '60'
          x-ratelimit-remaining: '0'
          retry-after: '58'
          x-ratelimit-reset: '1749959451'
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v2/apps/activate_wifi_package
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v2/payments/check_user_zone_id/{user_auth_id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      user_auth_id:
        name: user_auth_id
        description: 'The ID of the user auth.'
        required: true
        example: amet
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      user_auth_id: amet
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 429
        content: |-
          {
              "message": "Too Many Attempts."
          }
        headers:
          x-ratelimit-limit: '60'
          x-ratelimit-remaining: '0'
          retry-after: '58'
          x-ratelimit-reset: '1749959451'
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v2/apps/payments/success
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      vendor_name:
        name: vendor_name
        description: ''
        required: true
        example: temporibus
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      trx_id:
        name: trx_id
        description: ''
        required: true
        example: a
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      invoice_number:
        name: invoice_number
        description: ''
        required: true
        example: officiis
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      amount:
        name: amount
        description: ''
        required: true
        example: perspiciatis
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      payment_id:
        name: payment_id
        description: ''
        required: true
        example: in
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      transaction_status:
        name: transaction_status
        description: ''
        required: true
        example: nesciunt
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      vendor_name: temporibus
      trx_id: a
      invoice_number: officiis
      amount: perspiciatis
      payment_id: in
      transaction_status: nesciunt
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v2/payments/wallet_point/create
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v2/payments/bkash/create
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v2/payments/bkash/execute
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v2/payments/upay/create
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v2/payments/upay/redirect/internet_bill_pay
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 429
        content: |-
          {
              "message": "Too Many Attempts."
          }
        headers:
          x-ratelimit-limit: '60'
          x-ratelimit-remaining: '0'
          retry-after: '58'
          x-ratelimit-reset: '1749959451'
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v2/apps/transactions/{auth_id}/list'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      auth_id:
        name: auth_id
        description: 'The ID of the auth.'
        required: true
        example: id
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      auth_id: id
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v2/apps/products/featured_products_list
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 429
        content: |-
          {
              "message": "Too Many Attempts."
          }
        headers:
          x-ratelimit-limit: '60'
          x-ratelimit-remaining: '0'
          retry-after: '58'
          x-ratelimit-reset: '1749959451'
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v2/apps/products/product_purchase_registration
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v2/apps/affiliate/internet_commission_list/{agent_type}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      agent_type:
        name: agent_type
        description: ''
        required: true
        example: dolor
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      agent_type: dolor
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v2/apps/affiliate/product_commission_list/{agent_type}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      agent_type:
        name: agent_type
        description: ''
        required: true
        example: inventore
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      agent_type: inventore
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v2/apps/affiliate/service_commission_list/{agent_type}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      agent_type:
        name: agent_type
        description: ''
        required: true
        example: harum
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      agent_type: harum
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v2/apps/affiliate/check_account_and_send_otp
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v2/apps/affiliate/internet_user_register
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v2/apps/affiliate/{affiliator_auth_id}/list/{affiliate_type}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      affiliator_auth_id:
        name: affiliator_auth_id
        description: 'The ID of the affiliator auth.'
        required: true
        example: sint
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      affiliate_type:
        name: affiliate_type
        description: ''
        required: true
        example: voluptatem
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      affiliator_auth_id: sint
      affiliate_type: voluptatem
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v2/apps/affiliate/monthly_commission/{agent_type}/{affiliator_auth_id}/{month_year}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      agent_type:
        name: agent_type
        description: ''
        required: true
        example: id
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      affiliator_auth_id:
        name: affiliator_auth_id
        description: 'The ID of the affiliator auth.'
        required: true
        example: eum
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      month_year:
        name: month_year
        description: ''
        required: true
        example: omnis
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      agent_type: id
      affiliator_auth_id: eum
      month_year: omnis
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v2/apps/affiliate/{affiliator_auth_id}/{affiliate_type}/search/{keywords}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      affiliator_auth_id:
        name: affiliator_auth_id
        description: 'The ID of the affiliator auth.'
        required: true
        example: quia
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      affiliate_type:
        name: affiliate_type
        description: ''
        required: true
        example: sit
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      keywords:
        name: keywords
        description: ''
        required: true
        example: corrupti
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      affiliator_auth_id: quia
      affiliate_type: sit
      keywords: corrupti
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v2/apps/internet_user/{partner_auth_id}/user_details/{user_auth_id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      partner_auth_id:
        name: partner_auth_id
        description: 'The ID of the partner auth.'
        required: true
        example: unde
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      user_auth_id:
        name: user_auth_id
        description: 'The ID of the user auth.'
        required: true
        example: aut
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      partner_auth_id: unde
      user_auth_id: aut
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v2/apps/network_support_center/register
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v2/apps/network_support_center/{partner_auth_id}/dashboard'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      partner_auth_id:
        name: partner_auth_id
        description: 'The ID of the partner auth.'
        required: true
        example: 20
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      partner_auth_id: 20
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v2/apps/network_support_center/{partner_auth_id}/user_list/{type}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      partner_auth_id:
        name: partner_auth_id
        description: 'The ID of the partner auth.'
        required: true
        example: 15
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
      type:
        name: type
        description: ''
        required: true
        example: dolor
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      partner_auth_id: 15
      type: dolor
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v2/apps/network_support_center/{partner_auth_id}/user_list/{type}/search/{keywords}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      partner_auth_id:
        name: partner_auth_id
        description: 'The ID of the partner auth.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
      type:
        name: type
        description: ''
        required: true
        example: unde
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      keywords:
        name: keywords
        description: ''
        required: true
        example: autem
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      partner_auth_id: 1
      type: unde
      keywords: autem
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v2/apps/network_support_center/{partner_auth_id}/sales_points_list'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      partner_auth_id:
        name: partner_auth_id
        description: 'The ID of the partner auth.'
        required: true
        example: 18
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      partner_auth_id: 18
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v2/apps/network_support_center/{partner_auth_id}/sales_points_details/{sales_point_uid}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      partner_auth_id:
        name: partner_auth_id
        description: 'The ID of the partner auth.'
        required: true
        example: 6
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
      sales_point_uid:
        name: sales_point_uid
        description: ''
        required: true
        example: quia
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      partner_auth_id: 6
      sales_point_uid: quia
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v2/apps/network_support_center/{partner_auth_id}/sales_agents_list'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      partner_auth_id:
        name: partner_auth_id
        description: 'The ID of the partner auth.'
        required: true
        example: 20
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      partner_auth_id: 20
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v2/apps/network_support_center/{partner_auth_id}/sales_agents_details/{sales_agent_uid}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      partner_auth_id:
        name: partner_auth_id
        description: 'The ID of the partner auth.'
        required: true
        example: 17
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
      sales_agent_uid:
        name: sales_agent_uid
        description: ''
        required: true
        example: voluptates
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      partner_auth_id: 17
      sales_agent_uid: voluptates
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v2/apps/network_support_center/{partner_auth_id}/sales_agents_list/search/{keywords}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      partner_auth_id:
        name: partner_auth_id
        description: 'The ID of the partner auth.'
        required: true
        example: 14
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
      keywords:
        name: keywords
        description: ''
        required: true
        example: alias
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      partner_auth_id: 14
      keywords: alias
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v2/apps/sales_point/register
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v2/apps/sales_point/dashboard/{auth_id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      auth_id:
        name: auth_id
        description: 'The ID of the auth.'
        required: true
        example: accusamus
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      auth_id: accusamus
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v2/apps/sales_agent/register
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v2/apps/sales_agent/dashboard/{auth_id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      auth_id:
        name: auth_id
        description: 'The ID of the auth.'
        required: true
        example: dolore
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      auth_id: dolore
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v2/apps/message/list/{auth_id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      auth_id:
        name: auth_id
        description: 'The ID of the auth.'
        required: true
        example: id
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      auth_id: id
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v2/apps/message/details/{id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the detail.'
        required: true
        example: et
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      id: et
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v2/apps/send_notification
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v2/apps/support/user_support_request
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v2/all/shadhin/packages
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v2/broadband/shadhin/packages/{zone_id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      zone_id:
        name: zone_id
        description: 'The ID of the zone.'
        required: true
        example: id
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      zone_id: id
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v2/wifi/shadhin/packages
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v2/broadband/shadhin/client/{zone_id}/packages'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      zone_id:
        name: zone_id
        description: 'The ID of the zone.'
        required: true
        example: vel
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      zone_id: vel
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v2/wifi/shadhin/client/{zone_id}/packages'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      zone_id:
        name: zone_id
        description: 'The ID of the zone.'
        required: true
        example: veniam
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      zone_id: veniam
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v2/create/shadhin/client/package
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      en_title:
        name: en_title
        description: ''
        required: true
        example: illo
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      bn_title:
        name: bn_title
        description: ''
        required: true
        example: expedita
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      type:
        name: type
        description: ''
        required: true
        example: odit
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      price:
        name: price
        description: ''
        required: true
        example: exercitationem
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      validity:
        name: validity
        description: ''
        required: true
        example: et
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      validity_bn:
        name: validity_bn
        description: ''
        required: true
        example: reiciendis
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      en_title: illo
      bn_title: expedita
      type: odit
      price: exercitationem
      validity: et
      validity_bn: reiciendis
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/v2/update/shadhin/client/package/{id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the package.'
        required: true
        example: cumque
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      id: cumque
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      en_title:
        name: en_title
        description: ''
        required: true
        example: adipisci
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      type:
        name: type
        description: ''
        required: true
        example: voluptatem
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      bn_title:
        name: bn_title
        description: ''
        required: true
        example: aliquid
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      price:
        name: price
        description: ''
        required: true
        example: quo
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      validity:
        name: validity
        description: ''
        required: true
        example: quidem
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      validity_bn:
        name: validity_bn
        description: ''
        required: true
        example: ut
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      en_title: adipisci
      type: voluptatem
      bn_title: aliquid
      price: quo
      validity: quidem
      validity_bn: ut
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/v2/enable/disable/shadhin/client/package/{id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the package.'
        required: true
        example: in
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      id: in
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      is_active:
        name: is_active
        description: ''
        required: true
        example: quae
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      is_active: quae
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/v2/delete/shadhin/client/package/{id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the package.'
        required: true
        example: vel
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      id: vel
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/v2/assign/shadhin/client/{zone_id}/package/{id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      zone_id:
        name: zone_id
        description: 'The ID of the zone.'
        required: true
        example: et
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      id:
        name: id
        description: 'The ID of the package.'
        required: true
        example: rerum
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      zone_id: et
      id: rerum
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v2/shadhin/hotspot/client/internet/user/create
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      full_name:
        name: full_name
        description: ''
        required: true
        example: ipsam
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      mobile_number:
        name: mobile_number
        description: ''
        required: true
        example: et
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      full_name: ipsam
      mobile_number: et
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v2/users/billing/panel/hotspot/login
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      auth_id:
        name: auth_id
        description: ''
        required: true
        example: et
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      password:
        name: password
        description: ''
        required: true
        example: consequuntur
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      auth_id: et
      password: consequuntur
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v2/shadhin/hotspot/payment/bkash/create
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v2/shadhin/hotspot/payment/bkash/callback
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 429
        content: |-
          {
              "message": "Too Many Attempts."
          }
        headers:
          x-ratelimit-limit: '60'
          x-ratelimit-remaining: '0'
          retry-after: '58'
          x-ratelimit-reset: '1749959451'
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v2/shadhin/hotspot/payment/bkash/refund
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v2/shadhin/broadband/client/internet/user/create
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      client_id:
        name: client_id
        description: ''
        required: true
        example: officia
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      full_name:
        name: full_name
        description: ''
        required: true
        example: sunt
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      mobile_number:
        name: mobile_number
        description: ''
        required: true
        example: veritatis
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      nid:
        name: nid
        description: ''
        required: true
        example: officiis
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      gender:
        name: gender
        description: ''
        required: true
        example: quisquam
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      division:
        name: division
        description: ''
        required: true
        example: ratione
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      district:
        name: district
        description: ''
        required: true
        example: est
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      upazila:
        name: upazila
        description: ''
        required: true
        example: et
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      union:
        name: union
        description: ''
        required: true
        example: aliquid
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      village:
        name: village
        description: ''
        required: true
        example: eos
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      house:
        name: house
        description: ''
        required: true
        example: voluptas
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      address:
        name: address
        description: ''
        required: true
        example: quibusdam
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      latitude:
        name: latitude
        description: ''
        required: true
        example: cupiditate
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      longitude:
        name: longitude
        description: ''
        required: true
        example: nihil
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      package:
        name: package
        description: ''
        required: true
        example: ipsa
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      pop:
        name: pop
        description: ''
        required: true
        example: facilis
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      ins_cost:
        name: ins_cost
        description: ''
        required: true
        example: illum
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      connection_media:
        name: connection_media
        description: ''
        required: true
        example: earum
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      user_type:
        name: user_type
        description: ''
        required: true
        example: modi
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      client_id: officia
      full_name: sunt
      mobile_number: veritatis
      nid: officiis
      gender: quisquam
      division: ratione
      district: est
      upazila: et
      union: aliquid
      village: eos
      house: voluptas
      address: quibusdam
      latitude: cupiditate
      longitude: nihil
      package: ipsa
      pop: facilis
      ins_cost: illum
      connection_media: earum
      user_type: modi
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v2/shadhin/broadband/payment/info/{internet_user_id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      internet_user_id:
        name: internet_user_id
        description: 'The ID of the internet user.'
        required: true
        example: ut
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      internet_user_id: ut
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v2/users/billing/panel/broadband/login
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      auth_id:
        name: auth_id
        description: ''
        required: true
        example: iste
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      password:
        name: password
        description: ''
        required: true
        example: ad
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      auth_id: iste
      password: ad
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v2/shadhin/broadband/payment/bkash/create
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v2/shadhin/broadband/payment/bkash/callback
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 429
        content: |-
          {
              "message": "Too Many Attempts."
          }
        headers:
          x-ratelimit-limit: '60'
          x-ratelimit-remaining: '0'
          retry-after: '58'
          x-ratelimit-reset: '1749959451'
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v2/shadhin/broadband/payment/bkash/refund
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v2/trans/radius/filter/{auth_id}/{id}/{type}/{latitude}/{longitude}/{radiation}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      auth_id:
        name: auth_id
        description: 'The ID of the auth.'
        required: true
        example: eum
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      id:
        name: id
        description: 'The ID of the {auth id}.'
        required: true
        example: perferendis
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      type:
        name: type
        description: ''
        required: true
        example: et
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      latitude:
        name: latitude
        description: ''
        required: true
        example: alias
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      longitude:
        name: longitude
        description: ''
        required: true
        example: dolores
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      radiation:
        name: radiation
        description: ''
        required: true
        example: ut
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      auth_id: eum
      id: perferendis
      type: et
      latitude: alias
      longitude: dolores
      radiation: ut
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v2/trans/radius/filter/{latitude}/{longitude}/{radiation}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      latitude:
        name: latitude
        description: ''
        required: true
        example: earum
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      longitude:
        name: longitude
        description: ''
        required: true
        example: nesciunt
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      radiation:
        name: radiation
        description: ''
        required: true
        example: tempora
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      latitude: earum
      longitude: nesciunt
      radiation: tempora
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/v2/trans/{auth_id}/{trans_id}/{type}/image/upload'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      auth_id:
        name: auth_id
        description: 'The ID of the auth.'
        required: true
        example: doloremque
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      trans_id:
        name: trans_id
        description: 'The ID of the trans.'
        required: true
        example: repellendus
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      type:
        name: type
        description: ''
        required: true
        example: tempora
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      auth_id: doloremque
      trans_id: repellendus
      type: tempora
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      images:
        name: images
        description: ''
        required: false
        example: null
        type: 'string[]'
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/v2/trans/{id}/image/remove'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the tran.'
        required: true
        example: aliquam
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      id: aliquam
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v2/trans/customer/connection/path/{id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the path.'
        required: true
        example: tempore
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      id: tempore
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v2/trans/tj_box/connection/path/{id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the path.'
        required: true
        example: modi
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      id: modi
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v2/trans/loop/connection/path/{id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the path.'
        required: true
        example: distinctio
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      id: distinctio
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v2/trans/all/feature/lat/long/{auth_id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      auth_id:
        name: auth_id
        description: 'The ID of the auth.'
        required: true
        example: exercitationem
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      auth_id: exercitationem
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v2/trans/all/feature/summary/{auth_id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      auth_id:
        name: auth_id
        description: 'The ID of the auth.'
        required: true
        example: nesciunt
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      auth_id: nesciunt
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v2/trans/company/list
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Display a listing of the resource.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v2/trans/company/add
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Show the form for creating a new resource.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      company_name:
        name: company_name
        description: ''
        required: true
        example: dolores
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      company_type:
        name: company_type
        description: ''
        required: true
        example: consectetur
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      first_contact_person_name:
        name: first_contact_person_name
        description: ''
        required: true
        example: maxime
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      first_contact_person_mobile:
        name: first_contact_person_mobile
        description: 'Must match the regex /^(01[3456789])(\d{8})$/.'
        required: true
        example: '01746456075'
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      first_contact_person_email:
        name: first_contact_person_email
        description: ''
        required: true
        example: sint
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      first_contact_person_designation:
        name: first_contact_person_designation
        description: ''
        required: true
        example: qui
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      second_contact_person_name:
        name: second_contact_person_name
        description: ''
        required: true
        example: ipsam
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      second_contact_person_mobile:
        name: second_contact_person_mobile
        description: 'Must match the regex /^(01[3456789])(\d{8})$/.'
        required: true
        example: '01485088701'
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      second_contact_person_email:
        name: second_contact_person_email
        description: ''
        required: true
        example: repellendus
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      second_contact_person_designation:
        name: second_contact_person_designation
        description: ''
        required: true
        example: eos
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      vendor_name:
        name: vendor_name
        description: ''
        required: true
        example: et
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      added_by_uid:
        name: added_by_uid
        description: ''
        required: true
        example: pariatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      updated_by_uid:
        name: updated_by_uid
        description: ''
        required: true
        example: quis
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      status:
        name: status
        description: ''
        required: true
        example: dolorem
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      company_name: dolores
      company_type: consectetur
      first_contact_person_name: maxime
      first_contact_person_mobile: '01746456075'
      first_contact_person_email: sint
      first_contact_person_designation: qui
      second_contact_person_name: ipsam
      second_contact_person_mobile: '01485088701'
      second_contact_person_email: repellendus
      second_contact_person_designation: eos
      vendor_name: et
      added_by_uid: pariatur
      updated_by_uid: quis
      status: dolorem
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v2/trans/company/{id}/details'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Display the specified resource.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the company.'
        required: true
        example: amet
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      id: amet
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/v2/trans/company/{id}/edit'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Show the form for editing the specified resource.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the company.'
        required: true
        example: deleniti
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      id: deleniti
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      company_name:
        name: company_name
        description: ''
        required: true
        example: libero
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      company_type:
        name: company_type
        description: ''
        required: true
        example: vitae
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      first_contact_person_name:
        name: first_contact_person_name
        description: ''
        required: true
        example: voluptatem
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      first_contact_person_mobile:
        name: first_contact_person_mobile
        description: 'Must match the regex /^(01[3456789])(\d{8})$/.'
        required: true
        example: '01513194954'
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      first_contact_person_email:
        name: first_contact_person_email
        description: ''
        required: true
        example: voluptates
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      first_contact_person_designation:
        name: first_contact_person_designation
        description: ''
        required: true
        example: blanditiis
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      second_contact_person_name:
        name: second_contact_person_name
        description: ''
        required: true
        example: necessitatibus
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      second_contact_person_mobile:
        name: second_contact_person_mobile
        description: 'Must match the regex /^(01[3456789])(\d{8})$/.'
        required: true
        example: '01758156243'
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      second_contact_person_email:
        name: second_contact_person_email
        description: ''
        required: true
        example: explicabo
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      second_contact_person_designation:
        name: second_contact_person_designation
        description: ''
        required: true
        example: quis
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      vendor_name:
        name: vendor_name
        description: ''
        required: true
        example: voluptas
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      updated_by_uid:
        name: updated_by_uid
        description: "'added_by_uid' => 'required',."
        required: true
        example: dolor
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      status:
        name: status
        description: ''
        required: true
        example: illum
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      company_name: libero
      company_type: vitae
      first_contact_person_name: voluptatem
      first_contact_person_mobile: '01513194954'
      first_contact_person_email: voluptates
      first_contact_person_designation: blanditiis
      second_contact_person_name: necessitatibus
      second_contact_person_mobile: '01758156243'
      second_contact_person_email: explicabo
      second_contact_person_designation: quis
      vendor_name: voluptas
      updated_by_uid: dolor
      status: illum
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/v2/trans/company/{id}/delete'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Remove the specified resource from storage.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the company.'
        required: true
        example: consectetur
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      id: consectetur
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v2/trans/company/status/summary
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v2/trans/nttn/pop/list
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v2/trans/nttn/pops
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v2/trans/nttn/pop/{id}/details'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the pop.'
        required: true
        example: reprehenderit
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      id: reprehenderit
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v2/trans/nttn/pop/create
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      pop_id:
        name: pop_id
        description: ''
        required: true
        example: necessitatibus
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      pop_type:
        name: pop_type
        description: ''
        required: true
        example: ipsam
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      provider_id:
        name: provider_id
        description: ''
        required: true
        example: qui
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      division:
        name: division
        description: ''
        required: true
        example: aliquam
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      district:
        name: district
        description: ''
        required: true
        example: repellat
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      union:
        name: union
        description: ''
        required: true
        example: tempore
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      upazila:
        name: upazila
        description: ''
        required: true
        example: quibusdam
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      village:
        name: village
        description: ''
        required: true
        example: quo
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      latitude:
        name: latitude
        description: ''
        required: true
        example: magnam
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      longitude:
        name: longitude
        description: ''
        required: true
        example: est
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      address_direction:
        name: address_direction
        description: ''
        required: true
        example: nihil
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      worker_name:
        name: worker_name
        description: |-
          'join_core_color' => 'required',
          'join_core_db_signal' => 'required',
          'join_fiber_id_our' => 'required',
          'join_fiber_id_provider' => 'required',
          'our_fiber_id' => 'required',
          'our_fiber_core' => 'required',
          'our_cable_start_meter' => 'required',
          'our_cable_end_meter' => 'required',
          'our_cable_length' => 'required',
          'provider_fiber_id' => 'required',
          'provider_fiber_core' => 'required',
          'provider_core_capacity' => 'required',
          'sfp_type' => 'required',
          'sfp_model' => 'required',
          'sfp_capacity' => 'required',.
        required: true
        example: ex
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      worker_mobile:
        name: worker_mobile
        description: 'Must match the regex /^(01[3456789])(\d{8})$/.'
        required: true
        example: '01989653015'
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      work_type:
        name: work_type
        description: ''
        required: true
        example: perspiciatis
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      pop_id: necessitatibus
      pop_type: ipsam
      provider_id: qui
      division: aliquam
      district: repellat
      union: tempore
      upazila: quibusdam
      village: quo
      latitude: magnam
      longitude: est
      address_direction: nihil
      worker_name: ex
      worker_mobile: '01989653015'
      work_type: perspiciatis
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/v2/trans/nttn/pop/edit/{id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the edit.'
        required: true
        example: quidem
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      id: quidem
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      pop_id:
        name: pop_id
        description: ''
        required: true
        example: aut
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      pop_type:
        name: pop_type
        description: ''
        required: true
        example: voluptatem
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      provider_id:
        name: provider_id
        description: ''
        required: true
        example: dolorem
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      division:
        name: division
        description: ''
        required: true
        example: dolor
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      district:
        name: district
        description: ''
        required: true
        example: eius
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      union:
        name: union
        description: ''
        required: true
        example: vitae
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      upazila:
        name: upazila
        description: ''
        required: true
        example: molestias
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      village:
        name: village
        description: ''
        required: true
        example: ex
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      latitude:
        name: latitude
        description: ''
        required: true
        example: possimus
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      longitude:
        name: longitude
        description: ''
        required: true
        example: veritatis
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      address_direction:
        name: address_direction
        description: ''
        required: true
        example: voluptas
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      worker_name:
        name: worker_name
        description: |-
          'join_core_color' => 'required',
          'join_core_db_signal' => 'required',
          'join_fiber_id_our' => 'required',
          'join_fiber_id_provider' => 'required',
          'our_fiber_id' => 'required',
          'our_fiber_core' => 'required',
          'our_cable_start_meter' => 'required',
          'our_cable_end_meter' => 'required',
          'our_cable_length' => 'required',
          'provider_fiber_id' => 'required',
          'provider_fiber_core' => 'required',
          'provider_core_capacity' => 'required',
          'sfp_type' => 'required',
          'sfp_model' => 'required',
          'sfp_capacity' => 'required',.
        required: true
        example: fuga
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      worker_mobile:
        name: worker_mobile
        description: 'Must match the regex /^(01[3456789])(\d{8})$/.'
        required: true
        example: '01968322814'
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      work_type:
        name: work_type
        description: ''
        required: true
        example: repellat
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      pop_id: aut
      pop_type: voluptatem
      provider_id: dolorem
      division: dolor
      district: eius
      union: vitae
      upazila: molestias
      village: ex
      latitude: possimus
      longitude: veritatis
      address_direction: voluptas
      worker_name: fuga
      worker_mobile: '01968322814'
      work_type: repellat
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/v2/trans/nttn/pop/delete/{id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the delete.'
        required: true
        example: dolores
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      id: dolores
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v2/trans/nttn/pop/status/summary
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v2/trans/nttn/pop/all/lat/long
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v2/trans/nttn/pop/bulk/upload
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      file:
        name: file
        description: ''
        required: true
        example: eveniet
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      file: eveniet
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v2/trans/branch/pop/list/{auth_id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      auth_id:
        name: auth_id
        description: 'The ID of the auth.'
        required: true
        example: et
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      auth_id: et
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v2/trans/branch/pops/{auth_id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      auth_id:
        name: auth_id
        description: 'The ID of the auth.'
        required: true
        example: et
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      auth_id: et
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v2/trans/branch/pops/shadhin/list
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v2/trans/branch/pops/tree/list/{auth_id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      auth_id:
        name: auth_id
        description: 'The ID of the auth.'
        required: true
        example: illum
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      auth_id: illum
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v2/trans/branch/pop/{auth_id}/{id}/details'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      auth_id:
        name: auth_id
        description: 'The ID of the auth.'
        required: true
        example: dolores
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      id:
        name: id
        description: 'The ID of the {auth id}.'
        required: true
        example: totam
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      auth_id: dolores
      id: totam
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/v2/trans/branch/pop/create/{auth_id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      auth_id:
        name: auth_id
        description: 'The ID of the auth.'
        required: true
        example: fugit
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      auth_id: fugit
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      pop_id:
        name: pop_id
        description: ''
        required: true
        example: molestiae
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      pop_type:
        name: pop_type
        description: ''
        required: true
        example: itaque
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      provider_id:
        name: provider_id
        description: ''
        required: true
        example: sed
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      nttn_pop_id:
        name: nttn_pop_id
        description: ''
        required: true
        example: et
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      pop_sl_no:
        name: pop_sl_no
        description: ''
        required: true
        example: sit
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      division:
        name: division
        description: ''
        required: true
        example: sapiente
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      district:
        name: district
        description: ''
        required: true
        example: ipsam
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      union:
        name: union
        description: ''
        required: true
        example: provident
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      upazila:
        name: upazila
        description: ''
        required: true
        example: quasi
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      village:
        name: village
        description: ''
        required: true
        example: vero
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      latitude:
        name: latitude
        description: ''
        required: true
        example: esse
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      longitude:
        name: longitude
        description: ''
        required: true
        example: non
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      address_direction:
        name: address_direction
        description: ''
        required: true
        example: ipsam
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      added_by_uid:
        name: added_by_uid
        description: ''
        required: true
        example: a
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      updated_by_uid:
        name: updated_by_uid
        description: ''
        required: true
        example: quis
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      input_sfp_mc_model:
        name: input_sfp_mc_model
        description: ''
        required: true
        example: dolores
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      input_device_port_type:
        name: input_device_port_type
        description: ''
        required: true
        example: amet
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      incoming_fiber_connected_port_number:
        name: incoming_fiber_connected_port_number
        description: ''
        required: true
        example: eos
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      worker_name:
        name: worker_name
        description: ''
        required: true
        example: id
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      worker_mobile:
        name: worker_mobile
        description: 'Must match the regex /^(01[3456789])(\d{8})$/.'
        required: true
        example: '01738578823'
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      work_type:
        name: work_type
        description: ''
        required: true
        example: quos
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      pop_id: molestiae
      pop_type: itaque
      provider_id: sed
      nttn_pop_id: et
      pop_sl_no: sit
      division: sapiente
      district: ipsam
      union: provident
      upazila: quasi
      village: vero
      latitude: esse
      longitude: non
      address_direction: ipsam
      added_by_uid: a
      updated_by_uid: quis
      input_sfp_mc_model: dolores
      input_device_port_type: amet
      incoming_fiber_connected_port_number: eos
      worker_name: id
      worker_mobile: '01738578823'
      work_type: quos
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/v2/trans/branch/pop/edit/{auth_id}/{id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      auth_id:
        name: auth_id
        description: 'The ID of the auth.'
        required: true
        example: dolorem
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      id:
        name: id
        description: 'The ID of the {auth id}.'
        required: true
        example: possimus
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      auth_id: dolorem
      id: possimus
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      pop_id:
        name: pop_id
        description: ''
        required: true
        example: rerum
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      pop_type:
        name: pop_type
        description: ''
        required: true
        example: earum
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      provider_id:
        name: provider_id
        description: ''
        required: true
        example: qui
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      nttn_pop_id:
        name: nttn_pop_id
        description: ''
        required: true
        example: vel
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      pop_sl_no:
        name: pop_sl_no
        description: ''
        required: true
        example: cupiditate
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      division:
        name: division
        description: ''
        required: true
        example: ullam
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      district:
        name: district
        description: ''
        required: true
        example: facere
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      union:
        name: union
        description: ''
        required: true
        example: sit
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      upazila:
        name: upazila
        description: ''
        required: true
        example: dolore
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      village:
        name: village
        description: ''
        required: true
        example: tempore
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      latitude:
        name: latitude
        description: ''
        required: true
        example: et
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      longitude:
        name: longitude
        description: ''
        required: true
        example: nobis
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      address_direction:
        name: address_direction
        description: ''
        required: true
        example: optio
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      added_by_uid:
        name: added_by_uid
        description: ''
        required: true
        example: cumque
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      updated_by_uid:
        name: updated_by_uid
        description: ''
        required: true
        example: a
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      input_sfp_mc_model:
        name: input_sfp_mc_model
        description: ''
        required: true
        example: repudiandae
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      input_device_port_type:
        name: input_device_port_type
        description: ''
        required: true
        example: autem
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      incoming_fiber_connected_port_number:
        name: incoming_fiber_connected_port_number
        description: ''
        required: true
        example: error
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      worker_name:
        name: worker_name
        description: ''
        required: true
        example: aut
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      worker_mobile:
        name: worker_mobile
        description: 'Must match the regex /^(01[3456789])(\d{8})$/.'
        required: true
        example: '01539712053'
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      work_type:
        name: work_type
        description: ''
        required: true
        example: porro
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      pop_id: rerum
      pop_type: earum
      provider_id: qui
      nttn_pop_id: vel
      pop_sl_no: cupiditate
      division: ullam
      district: facere
      union: sit
      upazila: dolore
      village: tempore
      latitude: et
      longitude: nobis
      address_direction: optio
      added_by_uid: cumque
      updated_by_uid: a
      input_sfp_mc_model: repudiandae
      input_device_port_type: autem
      incoming_fiber_connected_port_number: error
      worker_name: aut
      worker_mobile: '01539712053'
      work_type: porro
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/v2/trans/branch/pop/delete/{auth_id}/{id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      auth_id:
        name: auth_id
        description: 'The ID of the auth.'
        required: true
        example: omnis
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      id:
        name: id
        description: 'The ID of the {auth id}.'
        required: true
        example: natus
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      auth_id: omnis
      id: natus
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v2/trans/branch/pop/status/summary/{auth_id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      auth_id:
        name: auth_id
        description: 'The ID of the auth.'
        required: true
        example: molestias
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      auth_id: molestias
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v2/trans/branch/pop/all/lat/long/{auth_id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      auth_id:
        name: auth_id
        description: 'The ID of the auth.'
        required: true
        example: quis
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      auth_id: quis
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v2/trans/branch/pop/bulk/upload
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      file:
        name: file
        description: ''
        required: true
        example: illo
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      file: illo
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v2/trans/all/lat/long/{auth_id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      auth_id:
        name: auth_id
        description: 'The ID of the auth.'
        required: true
        example: sit
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      auth_id: sit
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 429
        content: |-
          {
              "message": "Too Many Attempts."
          }
        headers:
          x-ratelimit-limit: '60'
          x-ratelimit-remaining: '0'
          retry-after: '58'
          x-ratelimit-reset: '1749959451'
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v2/trans/sub_branch/pop/list/{auth_id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      auth_id:
        name: auth_id
        description: 'The ID of the auth.'
        required: true
        example: quam
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      auth_id: quam
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v2/trans/sub_branch/pop/{auth_id}/{id}/details'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      auth_id:
        name: auth_id
        description: 'The ID of the auth.'
        required: true
        example: alias
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      id:
        name: id
        description: 'The ID of the {auth id}.'
        required: true
        example: aut
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      auth_id: alias
      id: aut
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/v2/trans/sub_branch/pop/create/{auth_id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      auth_id:
        name: auth_id
        description: 'The ID of the auth.'
        required: true
        example: odit
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      auth_id: odit
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      pop_id:
        name: pop_id
        description: ''
        required: true
        example: ratione
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      pop_type:
        name: pop_type
        description: ''
        required: true
        example: voluptas
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      provider_id:
        name: provider_id
        description: ''
        required: true
        example: quo
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      parent_pop_id:
        name: parent_pop_id
        description: "'nttn_pop_id' => 'required',."
        required: true
        example: qui
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      division:
        name: division
        description: ''
        required: true
        example: animi
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      district:
        name: district
        description: ''
        required: true
        example: voluptatibus
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      union:
        name: union
        description: ''
        required: true
        example: minus
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      upazila:
        name: upazila
        description: ''
        required: true
        example: cumque
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      village:
        name: village
        description: ''
        required: true
        example: recusandae
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      latitude:
        name: latitude
        description: ''
        required: true
        example: at
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      longitude:
        name: longitude
        description: ''
        required: true
        example: dicta
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      address_direction:
        name: address_direction
        description: ''
        required: true
        example: vero
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      input_sfp_mc_model:
        name: input_sfp_mc_model
        description: ''
        required: true
        example: molestiae
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      input_device_port_type:
        name: input_device_port_type
        description: ''
        required: true
        example: officia
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      incoming_fiber_connected_port_number:
        name: incoming_fiber_connected_port_number
        description: ''
        required: true
        example: tenetur
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      worker_name:
        name: worker_name
        description: ''
        required: true
        example: accusamus
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      worker_mobile:
        name: worker_mobile
        description: 'Must match the regex /^(01[3456789])(\d{8})$/.'
        required: true
        example: '01304564011'
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      work_type:
        name: work_type
        description: ''
        required: true
        example: ex
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      pop_id: ratione
      pop_type: voluptas
      provider_id: quo
      parent_pop_id: qui
      division: animi
      district: voluptatibus
      union: minus
      upazila: cumque
      village: recusandae
      latitude: at
      longitude: dicta
      address_direction: vero
      input_sfp_mc_model: molestiae
      input_device_port_type: officia
      incoming_fiber_connected_port_number: tenetur
      worker_name: accusamus
      worker_mobile: '01304564011'
      work_type: ex
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/v2/trans/sub_branch/pop/edit/{auth_id}/{id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      auth_id:
        name: auth_id
        description: 'The ID of the auth.'
        required: true
        example: voluptatem
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      id:
        name: id
        description: 'The ID of the {auth id}.'
        required: true
        example: facilis
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      auth_id: voluptatem
      id: facilis
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      pop_id:
        name: pop_id
        description: ''
        required: true
        example: quo
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      pop_type:
        name: pop_type
        description: ''
        required: true
        example: ut
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      provider_id:
        name: provider_id
        description: ''
        required: true
        example: id
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      parent_pop_id:
        name: parent_pop_id
        description: "'nttn_pop_id' => 'required',."
        required: true
        example: aut
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      division:
        name: division
        description: ''
        required: true
        example: ea
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      district:
        name: district
        description: ''
        required: true
        example: necessitatibus
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      union:
        name: union
        description: ''
        required: true
        example: officiis
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      upazila:
        name: upazila
        description: ''
        required: true
        example: perferendis
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      village:
        name: village
        description: ''
        required: true
        example: qui
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      latitude:
        name: latitude
        description: ''
        required: true
        example: aut
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      longitude:
        name: longitude
        description: ''
        required: true
        example: qui
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      address_direction:
        name: address_direction
        description: ''
        required: true
        example: quas
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      input_sfp_mc_model:
        name: input_sfp_mc_model
        description: ''
        required: true
        example: et
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      input_device_port_type:
        name: input_device_port_type
        description: ''
        required: true
        example: dolor
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      incoming_fiber_connected_port_number:
        name: incoming_fiber_connected_port_number
        description: ''
        required: true
        example: explicabo
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      worker_name:
        name: worker_name
        description: ''
        required: true
        example: unde
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      worker_mobile:
        name: worker_mobile
        description: 'Must match the regex /^(01[3456789])(\d{8})$/.'
        required: true
        example: '01637111078'
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      work_type:
        name: work_type
        description: ''
        required: true
        example: et
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      pop_id: quo
      pop_type: ut
      provider_id: id
      parent_pop_id: aut
      division: ea
      district: necessitatibus
      union: officiis
      upazila: perferendis
      village: qui
      latitude: aut
      longitude: qui
      address_direction: quas
      input_sfp_mc_model: et
      input_device_port_type: dolor
      incoming_fiber_connected_port_number: explicabo
      worker_name: unde
      worker_mobile: '01637111078'
      work_type: et
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/v2/trans/sub_branch/pop/delete/{auth_id}/{id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      auth_id:
        name: auth_id
        description: 'The ID of the auth.'
        required: true
        example: ut
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      id:
        name: id
        description: 'The ID of the {auth id}.'
        required: true
        example: voluptatum
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      auth_id: ut
      id: voluptatum
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v2/trans/sub_branch/pop/status/summary/{auth_id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      auth_id:
        name: auth_id
        description: 'The ID of the auth.'
        required: true
        example: labore
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      auth_id: labore
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v2/trans/sub_branch/pop/all/lat/long/{auth_id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      auth_id:
        name: auth_id
        description: 'The ID of the auth.'
        required: true
        example: doloribus
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      auth_id: doloribus
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v2/trans/sub_branch/pop/bulk/upload
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      file:
        name: file
        description: ''
        required: true
        example: pariatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      file: pariatur
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v2/trans/tj_box/list/{auth_id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      auth_id:
        name: auth_id
        description: 'The ID of the auth.'
        required: true
        example: et
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      auth_id: et
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v2/trans/tj_boxes/{auth_id}/{pop_id}/{olt_port}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      auth_id:
        name: auth_id
        description: 'The ID of the auth.'
        required: true
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      pop_id:
        name: pop_id
        description: 'The ID of the pop.'
        required: true
        example: voluptas
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      olt_port:
        name: olt_port
        description: ''
        required: true
        example: quidem
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      auth_id: architecto
      pop_id: voluptas
      olt_port: quidem
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v2/trans/tree/{auth_id}/{tj_type}/{pop_id}/{parent_tj_id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      auth_id:
        name: auth_id
        description: 'The ID of the auth.'
        required: true
        example: laborum
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      tj_type:
        name: tj_type
        description: ''
        required: true
        example: reprehenderit
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      pop_id:
        name: pop_id
        description: 'The ID of the pop.'
        required: true
        example: ducimus
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      parent_tj_id:
        name: parent_tj_id
        description: 'The ID of the parent tj.'
        required: true
        example: illum
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      auth_id: laborum
      tj_type: reprehenderit
      pop_id: ducimus
      parent_tj_id: illum
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v2/trans/nttn/tj_boxes/{auth_id}/{pop_id}/{tj_id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      auth_id:
        name: auth_id
        description: 'The ID of the auth.'
        required: true
        example: unde
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      pop_id:
        name: pop_id
        description: 'The ID of the pop.'
        required: true
        example: eaque
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      tj_id:
        name: tj_id
        description: 'The ID of the tj.'
        required: true
        example: ipsam
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      auth_id: unde
      pop_id: eaque
      tj_id: ipsam
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v2/trans/tj_box/status/summary/{auth_id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      auth_id:
        name: auth_id
        description: 'The ID of the auth.'
        required: true
        example: sed
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      auth_id: sed
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v2/trans/tj_box/all/lat/long/{auth_id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      auth_id:
        name: auth_id
        description: 'The ID of the auth.'
        required: true
        example: aut
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      auth_id: aut
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v2/trans/tj_box/{tj_type}/latest/id'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      tj_type:
        name: tj_type
        description: ''
        required: true
        example: inventore
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      tj_type: inventore
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v2/trans/backbone/tj_box/list/{auth_id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      auth_id:
        name: auth_id
        description: 'The ID of the auth.'
        required: true
        example: deleniti
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      auth_id: deleniti
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v2/trans/backbone/tj_box/{auth_id}/{id}/details'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      auth_id:
        name: auth_id
        description: 'The ID of the auth.'
        required: true
        example: at
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      id:
        name: id
        description: 'The ID of the {auth id}.'
        required: true
        example: sit
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      auth_id: at
      id: sit
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/v2/trans/backbone/tj_box/create/{auth_id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      auth_id:
        name: auth_id
        description: 'The ID of the auth.'
        required: true
        example: quia
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      auth_id: quia
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      tj_box_id:
        name: tj_box_id
        description: ''
        required: true
        example: cupiditate
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      parent_pop_id:
        name: parent_pop_id
        description: ''
        required: true
        example: molestias
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      latitude:
        name: latitude
        description: "'parent_tj_box_id' => 'required',."
        required: true
        example: consequatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      longitude:
        name: longitude
        description: ''
        required: true
        example: exercitationem
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      worker_name:
        name: worker_name
        description: ''
        required: true
        example: culpa
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      worker_mobile:
        name: worker_mobile
        description: 'Must match the regex /^(01[3456789])(\d{8})$/.'
        required: true
        example: '01524545669'
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      work_type:
        name: work_type
        description: ''
        required: true
        example: delectus
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      tj_box_id: cupiditate
      parent_pop_id: molestias
      latitude: consequatur
      longitude: exercitationem
      worker_name: culpa
      worker_mobile: '01524545669'
      work_type: delectus
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/v2/trans/backbone/tj_box/edit/{auth_id}/{id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      auth_id:
        name: auth_id
        description: 'The ID of the auth.'
        required: true
        example: quaerat
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      id:
        name: id
        description: 'The ID of the {auth id}.'
        required: true
        example: enim
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      auth_id: quaerat
      id: enim
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      tj_box_id:
        name: tj_box_id
        description: ''
        required: true
        example: est
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      parent_pop_id:
        name: parent_pop_id
        description: ''
        required: true
        example: aut
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      latitude:
        name: latitude
        description: "'parent_tj_box_id' => 'required',."
        required: true
        example: autem
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      longitude:
        name: longitude
        description: ''
        required: true
        example: fuga
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      worker_name:
        name: worker_name
        description: ''
        required: true
        example: laborum
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      worker_mobile:
        name: worker_mobile
        description: 'Must match the regex /^(01[3456789])(\d{8})$/.'
        required: true
        example: '01359973024'
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      work_type:
        name: work_type
        description: ''
        required: true
        example: adipisci
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      tj_box_id: est
      parent_pop_id: aut
      latitude: autem
      longitude: fuga
      worker_name: laborum
      worker_mobile: '01359973024'
      work_type: adipisci
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/v2/trans/backbone/tj_box/delete/{auth_id}/{id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      auth_id:
        name: auth_id
        description: 'The ID of the auth.'
        required: true
        example: doloribus
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      id:
        name: id
        description: 'The ID of the {auth id}.'
        required: true
        example: tenetur
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      auth_id: doloribus
      id: tenetur
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v2/trans/backbone/tj_box/status/summary/{auth_id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      auth_id:
        name: auth_id
        description: 'The ID of the auth.'
        required: true
        example: sint
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      auth_id: sint
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v2/trans/backbone/tj_box/all/lat/long/{auth_id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      auth_id:
        name: auth_id
        description: 'The ID of the auth.'
        required: true
        example: asperiores
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      auth_id: asperiores
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v2/trans/backbone/tj_box/bulk/upload
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      file:
        name: file
        description: ''
        required: true
        example: possimus
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      file: possimus
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v2/trans/backbone_join/tj_box/list/{auth_id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      auth_id:
        name: auth_id
        description: 'The ID of the auth.'
        required: true
        example: laudantium
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      auth_id: laudantium
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v2/trans/backbone_join/tj_box/{auth_id}/{id}/details'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      auth_id:
        name: auth_id
        description: 'The ID of the auth.'
        required: true
        example: explicabo
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      id:
        name: id
        description: 'The ID of the {auth id}.'
        required: true
        example: sit
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      auth_id: explicabo
      id: sit
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/v2/trans/backbone_join/tj_box/create/{auth_id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      auth_id:
        name: auth_id
        description: 'The ID of the auth.'
        required: true
        example: incidunt
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      auth_id: incidunt
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      tj_box_id:
        name: tj_box_id
        description: ''
        required: true
        example: nihil
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      parent_pop_id:
        name: parent_pop_id
        description: ''
        required: true
        example: eos
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      latitude:
        name: latitude
        description: "'parent_tj_box_id' => 'required',."
        required: true
        example: est
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      longitude:
        name: longitude
        description: ''
        required: true
        example: illum
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      worker_name:
        name: worker_name
        description: ''
        required: true
        example: est
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      worker_mobile:
        name: worker_mobile
        description: 'Must match the regex /^(01[3456789])(\d{8})$/.'
        required: true
        example: '01674070585'
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      work_type:
        name: work_type
        description: ''
        required: true
        example: consequatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      tj_box_id: nihil
      parent_pop_id: eos
      latitude: est
      longitude: illum
      worker_name: est
      worker_mobile: '01674070585'
      work_type: consequatur
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/v2/trans/backbone_join/tj_box/edit/{auth_id}/{id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      auth_id:
        name: auth_id
        description: 'The ID of the auth.'
        required: true
        example: possimus
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      id:
        name: id
        description: 'The ID of the {auth id}.'
        required: true
        example: quos
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      auth_id: possimus
      id: quos
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      tj_box_id:
        name: tj_box_id
        description: ''
        required: true
        example: minima
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      parent_pop_id:
        name: parent_pop_id
        description: ''
        required: true
        example: placeat
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      latitude:
        name: latitude
        description: "'parent_tj_box_id' => 'required',."
        required: true
        example: quidem
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      longitude:
        name: longitude
        description: ''
        required: true
        example: deleniti
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      worker_name:
        name: worker_name
        description: ''
        required: true
        example: officia
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      worker_mobile:
        name: worker_mobile
        description: 'Must match the regex /^(01[3456789])(\d{8})$/.'
        required: true
        example: '01328993982'
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      work_type:
        name: work_type
        description: ''
        required: true
        example: et
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      tj_box_id: minima
      parent_pop_id: placeat
      latitude: quidem
      longitude: deleniti
      worker_name: officia
      worker_mobile: '01328993982'
      work_type: et
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/v2/trans/backbone_join/tj_box/delete/{auth_id}/{id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      auth_id:
        name: auth_id
        description: 'The ID of the auth.'
        required: true
        example: ipsam
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      id:
        name: id
        description: 'The ID of the {auth id}.'
        required: true
        example: sit
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      auth_id: ipsam
      id: sit
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v2/trans/backbone_join/tj_box/status/summary/{auth_id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      auth_id:
        name: auth_id
        description: 'The ID of the auth.'
        required: true
        example: a
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      auth_id: a
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v2/trans/backbone_join/tj_box/all/lat/long/{auth_id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      auth_id:
        name: auth_id
        description: 'The ID of the auth.'
        required: true
        example: autem
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      auth_id: autem
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v2/trans/backbone_join/tj_box/bulk/upload
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      file:
        name: file
        description: ''
        required: true
        example: nihil
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      file: nihil
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v2/trans/joining/tj_box/list/{auth_id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      auth_id:
        name: auth_id
        description: 'The ID of the auth.'
        required: true
        example: enim
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      auth_id: enim
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v2/trans/joining/tj_box/{auth_id}/{id}/details'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      auth_id:
        name: auth_id
        description: 'The ID of the auth.'
        required: true
        example: quis
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      id:
        name: id
        description: 'The ID of the {auth id}.'
        required: true
        example: amet
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      auth_id: quis
      id: amet
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/v2/trans/joining/tj_box/create/{auth_id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      auth_id:
        name: auth_id
        description: 'The ID of the auth.'
        required: true
        example: nemo
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      auth_id: nemo
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      tj_box_id:
        name: tj_box_id
        description: ''
        required: true
        example: rerum
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      parent_pop_id:
        name: parent_pop_id
        description: ''
        required: true
        example: voluptatem
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      olt_port:
        name: olt_port
        description: ''
        required: true
        example: maiores
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      latitude:
        name: latitude
        description: "'parent_tj_box_id' => 'required',."
        required: true
        example: aut
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      longitude:
        name: longitude
        description: ''
        required: true
        example: consequatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      worker_name:
        name: worker_name
        description: ''
        required: true
        example: aut
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      worker_mobile:
        name: worker_mobile
        description: 'Must match the regex /^(01[3456789])(\d{8})$/.'
        required: true
        example: '01755230821'
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      work_type:
        name: work_type
        description: ''
        required: true
        example: quasi
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      tj_box_id: rerum
      parent_pop_id: voluptatem
      olt_port: maiores
      latitude: aut
      longitude: consequatur
      worker_name: aut
      worker_mobile: '01755230821'
      work_type: quasi
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/v2/trans/joining/tj_box/edit/{auth_id}/{id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      auth_id:
        name: auth_id
        description: 'The ID of the auth.'
        required: true
        example: officia
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      id:
        name: id
        description: 'The ID of the {auth id}.'
        required: true
        example: voluptatum
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      auth_id: officia
      id: voluptatum
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      tj_box_id:
        name: tj_box_id
        description: ''
        required: true
        example: ea
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      parent_pop_id:
        name: parent_pop_id
        description: ''
        required: true
        example: non
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      olt_port:
        name: olt_port
        description: ''
        required: true
        example: eum
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      latitude:
        name: latitude
        description: "'parent_tj_box_id' => 'required',."
        required: true
        example: ut
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      longitude:
        name: longitude
        description: ''
        required: true
        example: magnam
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      worker_name:
        name: worker_name
        description: ''
        required: true
        example: expedita
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      worker_mobile:
        name: worker_mobile
        description: 'Must match the regex /^(01[3456789])(\d{8})$/.'
        required: true
        example: '01855881979'
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      work_type:
        name: work_type
        description: ''
        required: true
        example: similique
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      tj_box_id: ea
      parent_pop_id: non
      olt_port: eum
      latitude: ut
      longitude: magnam
      worker_name: expedita
      worker_mobile: '01855881979'
      work_type: similique
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/v2/trans/joining/tj_box/delete/{auth_id}/{id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      auth_id:
        name: auth_id
        description: 'The ID of the auth.'
        required: true
        example: eum
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      id:
        name: id
        description: 'The ID of the {auth id}.'
        required: true
        example: fuga
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      auth_id: eum
      id: fuga
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v2/trans/joining/tj_box/status/summary/{auth_id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      auth_id:
        name: auth_id
        description: 'The ID of the auth.'
        required: true
        example: ratione
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      auth_id: ratione
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v2/trans/joining/tj_box/all/lat/long/{auth_id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      auth_id:
        name: auth_id
        description: 'The ID of the auth.'
        required: true
        example: ad
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      auth_id: ad
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v2/trans/joining/tj_box/bulk/upload
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      file:
        name: file
        description: ''
        required: true
        example: enim
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      file: enim
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v2/trans/distribution/tj_box/list/{auth_id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      auth_id:
        name: auth_id
        description: 'The ID of the auth.'
        required: true
        example: totam
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      auth_id: totam
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v2/trans/distribution/tj_box/{auth_id}/{id}/details'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      auth_id:
        name: auth_id
        description: 'The ID of the auth.'
        required: true
        example: veniam
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      id:
        name: id
        description: 'The ID of the {auth id}.'
        required: true
        example: rerum
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      auth_id: veniam
      id: rerum
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/v2/trans/distribution/tj_box/create/{auth_id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      auth_id:
        name: auth_id
        description: 'The ID of the auth.'
        required: true
        example: et
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      auth_id: et
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      tj_box_id:
        name: tj_box_id
        description: ''
        required: true
        example: aliquam
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      parent_pop_id:
        name: parent_pop_id
        description: ''
        required: true
        example: ullam
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      olt_port:
        name: olt_port
        description: ''
        required: true
        example: qui
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      latitude:
        name: latitude
        description: "'parent_tj_box_id' => 'required',."
        required: true
        example: tempora
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      longitude:
        name: longitude
        description: ''
        required: true
        example: vel
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      address_direction:
        name: address_direction
        description: ''
        required: true
        example: est
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      worker_name:
        name: worker_name
        description: |-
          'splitter_information.[*].splitter_id' => 'required',
          'splitter_information.[*].splitter_type' => 'required',
          'splitter_information.[*].splitter_joining_core_color' => 'required',
          'splitter_information.[*].splitter_model' => 'required',.
        required: true
        example: veritatis
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      worker_mobile:
        name: worker_mobile
        description: 'Must match the regex /^(01[3456789])(\d{8})$/.'
        required: true
        example: '01406802711'
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      work_type:
        name: work_type
        description: ''
        required: true
        example: dicta
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      tj_box_id: aliquam
      parent_pop_id: ullam
      olt_port: qui
      latitude: tempora
      longitude: vel
      address_direction: est
      worker_name: veritatis
      worker_mobile: '01406802711'
      work_type: dicta
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/v2/trans/distribution/tj_box/edit/{auth_id}/{id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      auth_id:
        name: auth_id
        description: 'The ID of the auth.'
        required: true
        example: et
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      id:
        name: id
        description: 'The ID of the {auth id}.'
        required: true
        example: temporibus
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      auth_id: et
      id: temporibus
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      tj_box_id:
        name: tj_box_id
        description: ''
        required: true
        example: et
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      parent_pop_id:
        name: parent_pop_id
        description: ''
        required: true
        example: ea
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      olt_port:
        name: olt_port
        description: ''
        required: true
        example: cum
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      latitude:
        name: latitude
        description: "'parent_tj_box_id' => 'required',."
        required: true
        example: qui
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      longitude:
        name: longitude
        description: ''
        required: true
        example: sit
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      worker_name:
        name: worker_name
        description: |-
          'splitter_information.[*].splitter_id' => 'required',
          'splitter_information.[*].splitter_type' => 'required',
          'splitter_information.[*].splitter_joining_core_color' => 'required',
          'splitter_information.[*].splitter_model' => 'required',.
        required: true
        example: eos
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      worker_mobile:
        name: worker_mobile
        description: 'Must match the regex /^(01[3456789])(\d{8})$/.'
        required: true
        example: '01523351698'
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      work_type:
        name: work_type
        description: ''
        required: true
        example: exercitationem
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      tj_box_id: et
      parent_pop_id: ea
      olt_port: cum
      latitude: qui
      longitude: sit
      worker_name: eos
      worker_mobile: '01523351698'
      work_type: exercitationem
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/v2/trans/distribution/tj_box/delete/{auth_id}/{id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      auth_id:
        name: auth_id
        description: 'The ID of the auth.'
        required: true
        example: consequuntur
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      id:
        name: id
        description: 'The ID of the {auth id}.'
        required: true
        example: commodi
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      auth_id: consequuntur
      id: commodi
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v2/trans/distribution/tj_box/status/summary/{auth_id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      auth_id:
        name: auth_id
        description: 'The ID of the auth.'
        required: true
        example: accusamus
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      auth_id: accusamus
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v2/trans/distribution/tj_box/latest/splitter/id
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v2/trans/distribution/tj_box/all/lat/long/{auth_id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      auth_id:
        name: auth_id
        description: 'The ID of the auth.'
        required: true
        example: beatae
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      auth_id: beatae
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v2/trans/distribution/tj_box/bulk/upload
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      file:
        name: file
        description: ''
        required: true
        example: iste
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      file: iste
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v2/trans/customer/tj_box/list/{auth_id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      auth_id:
        name: auth_id
        description: 'The ID of the auth.'
        required: true
        example: quam
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      auth_id: quam
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v2/trans/customer/tj_box/{auth_id}/{id}/details'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      auth_id:
        name: auth_id
        description: 'The ID of the auth.'
        required: true
        example: in
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      id:
        name: id
        description: 'The ID of the {auth id}.'
        required: true
        example: iusto
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      auth_id: in
      id: iusto
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/v2/trans/customer/tj_box/create/{auth_id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      auth_id:
        name: auth_id
        description: 'The ID of the auth.'
        required: true
        example: laudantium
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      auth_id: laudantium
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      tj_box_id:
        name: tj_box_id
        description: ''
        required: true
        example: quasi
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      parent_pop_id:
        name: parent_pop_id
        description: ''
        required: true
        example: eos
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      olt_port:
        name: olt_port
        description: ''
        required: true
        example: dolorem
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      customer_name:
        name: customer_name
        description: "'parent_tj_box_id' => 'required',."
        required: true
        example: tenetur
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      customer_mobile:
        name: customer_mobile
        description: ''
        required: true
        example: soluta
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      latitude:
        name: latitude
        description: ''
        required: true
        example: occaecati
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      longitude:
        name: longitude
        description: ''
        required: true
        example: dignissimos
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      address_direction:
        name: address_direction
        description: ''
        required: true
        example: quae
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      in_fiber_id:
        name: in_fiber_id
        description: ''
        required: true
        example: est
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      in_fiber_core:
        name: in_fiber_core
        description: ''
        required: true
        example: illum
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      in_fiber_start_meter:
        name: in_fiber_start_meter
        description: ''
        required: true
        example: tempora
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      in_fiber_end_meter:
        name: in_fiber_end_meter
        description: ''
        required: true
        example: corporis
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      in_fiber_length:
        name: in_fiber_length
        description: ''
        required: true
        example: sed
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      core_join_in_fiber_id:
        name: core_join_in_fiber_id
        description: ''
        required: true
        example: possimus
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      core_join_joining_core_color:
        name: core_join_joining_core_color
        description: ''
        required: true
        example: odit
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      core_join_db_signal:
        name: core_join_db_signal
        description: ''
        required: true
        example: assumenda
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      worker_name:
        name: worker_name
        description: ''
        required: true
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      worker_mobile:
        name: worker_mobile
        description: 'Must match the regex /^(01[3456789])(\d{8})$/.'
        required: true
        example: '01470458737'
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      work_type:
        name: work_type
        description: ''
        required: true
        example: qui
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      tj_box_id: quasi
      parent_pop_id: eos
      olt_port: dolorem
      customer_name: tenetur
      customer_mobile: soluta
      latitude: occaecati
      longitude: dignissimos
      address_direction: quae
      in_fiber_id: est
      in_fiber_core: illum
      in_fiber_start_meter: tempora
      in_fiber_end_meter: corporis
      in_fiber_length: sed
      core_join_in_fiber_id: possimus
      core_join_joining_core_color: odit
      core_join_db_signal: assumenda
      worker_name: architecto
      worker_mobile: '01470458737'
      work_type: qui
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/v2/trans/customer/tj_box/edit/{auth_id}/{id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      auth_id:
        name: auth_id
        description: 'The ID of the auth.'
        required: true
        example: maiores
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      id:
        name: id
        description: 'The ID of the {auth id}.'
        required: true
        example: quaerat
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      auth_id: maiores
      id: quaerat
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      tj_box_id:
        name: tj_box_id
        description: ''
        required: true
        example: est
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      parent_pop_id:
        name: parent_pop_id
        description: ''
        required: true
        example: sit
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      olt_port:
        name: olt_port
        description: ''
        required: true
        example: voluptas
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      customer_name:
        name: customer_name
        description: "'parent_tj_box_id' => 'required',."
        required: true
        example: ad
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      customer_mobile:
        name: customer_mobile
        description: 'Must match the regex /^(01[3456789])(\d{8})$/.'
        required: true
        example: '01593453514'
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      latitude:
        name: latitude
        description: ''
        required: true
        example: voluptates
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      longitude:
        name: longitude
        description: ''
        required: true
        example: alias
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      address_direction:
        name: address_direction
        description: ''
        required: true
        example: aspernatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      in_fiber_id:
        name: in_fiber_id
        description: ''
        required: true
        example: eos
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      in_fiber_core:
        name: in_fiber_core
        description: ''
        required: true
        example: ex
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      in_fiber_start_meter:
        name: in_fiber_start_meter
        description: ''
        required: true
        example: vero
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      in_fiber_end_meter:
        name: in_fiber_end_meter
        description: ''
        required: true
        example: nulla
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      in_fiber_length:
        name: in_fiber_length
        description: ''
        required: true
        example: similique
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      core_join_in_fiber_id:
        name: core_join_in_fiber_id
        description: ''
        required: true
        example: deserunt
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      core_join_joining_core_color:
        name: core_join_joining_core_color
        description: ''
        required: true
        example: quia
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      core_join_db_signal:
        name: core_join_db_signal
        description: ''
        required: true
        example: autem
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      worker_name:
        name: worker_name
        description: ''
        required: true
        example: id
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      worker_mobile:
        name: worker_mobile
        description: 'Must match the regex /^(01[3456789])(\d{8})$/.'
        required: true
        example: '01689917258'
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      work_type:
        name: work_type
        description: ''
        required: true
        example: tempore
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      tj_box_id: est
      parent_pop_id: sit
      olt_port: voluptas
      customer_name: ad
      customer_mobile: '01593453514'
      latitude: voluptates
      longitude: alias
      address_direction: aspernatur
      in_fiber_id: eos
      in_fiber_core: ex
      in_fiber_start_meter: vero
      in_fiber_end_meter: nulla
      in_fiber_length: similique
      core_join_in_fiber_id: deserunt
      core_join_joining_core_color: quia
      core_join_db_signal: autem
      worker_name: id
      worker_mobile: '01689917258'
      work_type: tempore
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/v2/trans/customer/tj_box/delete/{auth_id}/{id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      auth_id:
        name: auth_id
        description: 'The ID of the auth.'
        required: true
        example: itaque
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      id:
        name: id
        description: 'The ID of the {auth id}.'
        required: true
        example: corrupti
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      auth_id: itaque
      id: corrupti
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v2/trans/customer/tj_box/status/summary/{auth_id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      auth_id:
        name: auth_id
        description: 'The ID of the auth.'
        required: true
        example: odio
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      auth_id: odio
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v2/trans/customer/tj_box/all/lat/long/{auth_id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      auth_id:
        name: auth_id
        description: 'The ID of the auth.'
        required: true
        example: voluptatem
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      auth_id: voluptatem
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v2/trans/customer/tj_box/bulk/upload
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      file:
        name: file
        description: ''
        required: true
        example: dolores
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      file: dolores
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v2/trans/loop/list/{auth_id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      auth_id:
        name: auth_id
        description: 'The ID of the auth.'
        required: true
        example: consequatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      auth_id: consequatur
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v2/trans/loop/status/summary/{auth_id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      auth_id:
        name: auth_id
        description: 'The ID of the auth.'
        required: true
        example: qui
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      auth_id: qui
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v2/trans/loop/all/lat/long/{auth_id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      auth_id:
        name: auth_id
        description: 'The ID of the auth.'
        required: true
        example: at
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      auth_id: at
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v2/trans/loop/{loop_type}/latest/id'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      loop_type:
        name: loop_type
        description: ''
        required: true
        example: repellat
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      loop_type: repellat
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v2/trans/reserved/loop/list/{auth_id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      auth_id:
        name: auth_id
        description: 'The ID of the auth.'
        required: true
        example: et
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      auth_id: et
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v2/trans/reserved/loop/{auth_id}/{id}/details'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      auth_id:
        name: auth_id
        description: 'The ID of the auth.'
        required: true
        example: omnis
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      id:
        name: id
        description: 'The ID of the {auth id}.'
        required: true
        example: molestiae
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      auth_id: omnis
      id: molestiae
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/v2/trans/reserved/loop/create/{auth_id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      auth_id:
        name: auth_id
        description: 'The ID of the auth.'
        required: true
        example: ipsam
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      auth_id: ipsam
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      loop_id:
        name: loop_id
        description: ''
        required: true
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      parent_pop_id:
        name: parent_pop_id
        description: ''
        required: true
        example: corrupti
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      olt_port:
        name: olt_port
        description: ''
        required: true
        example: debitis
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      latitude:
        name: latitude
        description: "'parent_tj_box_id' => 'required',."
        required: true
        example: et
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      longitude:
        name: longitude
        description: ''
        required: true
        example: vero
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      address_direction:
        name: address_direction
        description: ''
        required: true
        example: iusto
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      fiber_id:
        name: fiber_id
        description: ''
        required: true
        example: sit
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      fiber_core:
        name: fiber_core
        description: ''
        required: true
        example: delectus
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      looped_fiber_start_meter:
        name: looped_fiber_start_meter
        description: ''
        required: true
        example: sint
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      looped_fiber_end_meter:
        name: looped_fiber_end_meter
        description: ''
        required: true
        example: aspernatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      looped_fiber_length:
        name: looped_fiber_length
        description: ''
        required: true
        example: dolor
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      worker_name:
        name: worker_name
        description: ''
        required: true
        example: doloremque
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      worker_mobile:
        name: worker_mobile
        description: 'Must match the regex /^(01[3456789])(\d{8})$/.'
        required: true
        example: '01796688457'
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      work_type:
        name: work_type
        description: ''
        required: true
        example: odio
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      loop_id: architecto
      parent_pop_id: corrupti
      olt_port: debitis
      latitude: et
      longitude: vero
      address_direction: iusto
      fiber_id: sit
      fiber_core: delectus
      looped_fiber_start_meter: sint
      looped_fiber_end_meter: aspernatur
      looped_fiber_length: dolor
      worker_name: doloremque
      worker_mobile: '01796688457'
      work_type: odio
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/v2/trans/reserved/loop/edit/{auth_id}/{id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      auth_id:
        name: auth_id
        description: 'The ID of the auth.'
        required: true
        example: doloremque
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      id:
        name: id
        description: 'The ID of the {auth id}.'
        required: true
        example: enim
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      auth_id: doloremque
      id: enim
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      loop_id:
        name: loop_id
        description: ''
        required: true
        example: qui
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      parent_pop_id:
        name: parent_pop_id
        description: ''
        required: true
        example: quaerat
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      olt_port:
        name: olt_port
        description: ''
        required: true
        example: distinctio
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      latitude:
        name: latitude
        description: "'parent_tj_box_id' => 'required',."
        required: true
        example: atque
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      longitude:
        name: longitude
        description: ''
        required: true
        example: aut
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      address_direction:
        name: address_direction
        description: ''
        required: true
        example: deserunt
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      fiber_id:
        name: fiber_id
        description: ''
        required: true
        example: nemo
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      fiber_core:
        name: fiber_core
        description: ''
        required: true
        example: sunt
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      looped_fiber_start_meter:
        name: looped_fiber_start_meter
        description: ''
        required: true
        example: voluptatum
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      looped_fiber_end_meter:
        name: looped_fiber_end_meter
        description: ''
        required: true
        example: sit
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      looped_fiber_length:
        name: looped_fiber_length
        description: ''
        required: true
        example: amet
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      worker_name:
        name: worker_name
        description: ''
        required: true
        example: quia
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      worker_mobile:
        name: worker_mobile
        description: 'Must match the regex /^(01[3456789])(\d{8})$/.'
        required: true
        example: '01547481184'
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      work_type:
        name: work_type
        description: ''
        required: true
        example: officiis
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      loop_id: qui
      parent_pop_id: quaerat
      olt_port: distinctio
      latitude: atque
      longitude: aut
      address_direction: deserunt
      fiber_id: nemo
      fiber_core: sunt
      looped_fiber_start_meter: voluptatum
      looped_fiber_end_meter: sit
      looped_fiber_length: amet
      worker_name: quia
      worker_mobile: '01547481184'
      work_type: officiis
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/v2/trans/reserved/loop/delete/{auth_id}/{id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      auth_id:
        name: auth_id
        description: 'The ID of the auth.'
        required: true
        example: beatae
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      id:
        name: id
        description: 'The ID of the {auth id}.'
        required: true
        example: assumenda
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      auth_id: beatae
      id: assumenda
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v2/trans/reserved/loop/status/summary/{auth_id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      auth_id:
        name: auth_id
        description: 'The ID of the auth.'
        required: true
        example: vel
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      auth_id: vel
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v2/trans/reserved/loop/all/lat/long/{auth_id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      auth_id:
        name: auth_id
        description: 'The ID of the auth.'
        required: true
        example: aliquid
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      auth_id: aliquid
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v2/trans/reserved/loop/bulk/upload
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      file:
        name: file
        description: ''
        required: true
        example: magni
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      file: magni
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v2/trans/distribution/loop/list/{auth_id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      auth_id:
        name: auth_id
        description: 'The ID of the auth.'
        required: true
        example: soluta
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      auth_id: soluta
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v2/trans/distribution/loop/{auth_id}/{id}/details'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      auth_id:
        name: auth_id
        description: 'The ID of the auth.'
        required: true
        example: enim
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      id:
        name: id
        description: 'The ID of the {auth id}.'
        required: true
        example: dolores
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      auth_id: enim
      id: dolores
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/v2/trans/distribution/loop/create/{auth_id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      auth_id:
        name: auth_id
        description: 'The ID of the auth.'
        required: true
        example: et
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      auth_id: et
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      loop_id:
        name: loop_id
        description: ''
        required: true
        example: similique
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      parent_pop_id:
        name: parent_pop_id
        description: ''
        required: true
        example: harum
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      olt_port:
        name: olt_port
        description: ''
        required: true
        example: molestias
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      latitude:
        name: latitude
        description: "'parent_tj_box_id' => 'required',."
        required: true
        example: laudantium
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      longitude:
        name: longitude
        description: ''
        required: true
        example: iusto
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      address_direction:
        name: address_direction
        description: ''
        required: true
        example: qui
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      fiber_id:
        name: fiber_id
        description: ''
        required: true
        example: ratione
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      fiber_core:
        name: fiber_core
        description: ''
        required: true
        example: perferendis
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      looped_fiber_start_meter:
        name: looped_fiber_start_meter
        description: ''
        required: true
        example: saepe
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      looped_fiber_end_meter:
        name: looped_fiber_end_meter
        description: ''
        required: true
        example: et
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      looped_fiber_length:
        name: looped_fiber_length
        description: ''
        required: true
        example: at
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      worker_name:
        name: worker_name
        description: ''
        required: true
        example: iste
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      worker_mobile:
        name: worker_mobile
        description: 'Must match the regex /^(01[3456789])(\d{8})$/.'
        required: true
        example: '01662067237'
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      work_type:
        name: work_type
        description: ''
        required: true
        example: quia
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      loop_id: similique
      parent_pop_id: harum
      olt_port: molestias
      latitude: laudantium
      longitude: iusto
      address_direction: qui
      fiber_id: ratione
      fiber_core: perferendis
      looped_fiber_start_meter: saepe
      looped_fiber_end_meter: et
      looped_fiber_length: at
      worker_name: iste
      worker_mobile: '01662067237'
      work_type: quia
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/v2/trans/distribution/loop/edit/{auth_id}/{id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      auth_id:
        name: auth_id
        description: 'The ID of the auth.'
        required: true
        example: minus
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      id:
        name: id
        description: 'The ID of the {auth id}.'
        required: true
        example: corrupti
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      auth_id: minus
      id: corrupti
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      loop_id:
        name: loop_id
        description: ''
        required: true
        example: eum
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      parent_pop_id:
        name: parent_pop_id
        description: ''
        required: true
        example: tempore
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      olt_port:
        name: olt_port
        description: ''
        required: true
        example: ullam
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      latitude:
        name: latitude
        description: "'parent_tj_box_id' => 'required',."
        required: true
        example: veritatis
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      longitude:
        name: longitude
        description: ''
        required: true
        example: aut
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      address_direction:
        name: address_direction
        description: ''
        required: true
        example: aspernatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      fiber_id:
        name: fiber_id
        description: ''
        required: true
        example: aut
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      fiber_core:
        name: fiber_core
        description: ''
        required: true
        example: fugiat
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      looped_fiber_start_meter:
        name: looped_fiber_start_meter
        description: ''
        required: true
        example: corrupti
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      looped_fiber_end_meter:
        name: looped_fiber_end_meter
        description: ''
        required: true
        example: sunt
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      looped_fiber_length:
        name: looped_fiber_length
        description: ''
        required: true
        example: quam
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      worker_name:
        name: worker_name
        description: ''
        required: true
        example: et
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      worker_mobile:
        name: worker_mobile
        description: 'Must match the regex /^(01[3456789])(\d{8})$/.'
        required: true
        example: '01861368450'
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      work_type:
        name: work_type
        description: ''
        required: true
        example: qui
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      loop_id: eum
      parent_pop_id: tempore
      olt_port: ullam
      latitude: veritatis
      longitude: aut
      address_direction: aspernatur
      fiber_id: aut
      fiber_core: fugiat
      looped_fiber_start_meter: corrupti
      looped_fiber_end_meter: sunt
      looped_fiber_length: quam
      worker_name: et
      worker_mobile: '01861368450'
      work_type: qui
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/v2/trans/distribution/loop/delete/{auth_id}/{id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      auth_id:
        name: auth_id
        description: 'The ID of the auth.'
        required: true
        example: at
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      id:
        name: id
        description: 'The ID of the {auth id}.'
        required: true
        example: dolorem
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      auth_id: at
      id: dolorem
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v2/trans/distribution/loop/status/summary/{auth_id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      auth_id:
        name: auth_id
        description: 'The ID of the auth.'
        required: true
        example: amet
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      auth_id: amet
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v2/trans/distribution/loop/all/lat/long/{auth_id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      auth_id:
        name: auth_id
        description: 'The ID of the auth.'
        required: true
        example: deleniti
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      auth_id: deleniti
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v2/trans/distribution/loop/bulk/upload
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      file:
        name: file
        description: ''
        required: true
        example: repellendus
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      file: repellendus
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v2/trans/customer/list/{auth_id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      auth_id:
        name: auth_id
        description: 'The ID of the auth.'
        required: true
        example: aut
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      auth_id: aut
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v2/trans/customer/{auth_id}/{id}/details'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      auth_id:
        name: auth_id
        description: 'The ID of the auth.'
        required: true
        example: sit
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      id:
        name: id
        description: 'The ID of the {auth id}.'
        required: true
        example: cupiditate
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      auth_id: sit
      id: cupiditate
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/v2/trans/customer/create/{auth_id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      auth_id:
        name: auth_id
        description: 'The ID of the auth.'
        required: true
        example: nam
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      auth_id: nam
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      customer_name:
        name: customer_name
        description: ''
        required: true
        example: expedita
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      customer_mobile:
        name: customer_mobile
        description: 'Must match the regex /^(01[3456789])(\d{8})$/.'
        required: true
        example: '01425874706'
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      customer_email:
        name: customer_email
        description: ''
        required: true
        example: repellat
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      customer_organization:
        name: customer_organization
        description: ''
        required: true
        example: fugit
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      customer_pop_id:
        name: customer_pop_id
        description: ''
        required: true
        example: consequatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      customer_tj_box_id:
        name: customer_tj_box_id
        description: ''
        required: true
        example: corrupti
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      olt_port:
        name: olt_port
        description: ''
        required: true
        example: in
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      contact_person_name:
        name: contact_person_name
        description: ''
        required: true
        example: vel
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      contact_person_primary_mobile:
        name: contact_person_primary_mobile
        description: 'Must match the regex /^(01[3456789])(\d{8})$/.'
        required: true
        example: '01347625483'
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      contact_person_designation:
        name: contact_person_designation
        description: "'contact_person_secondary_mobile' => ['required', 'regex:/^(01[3456789])(\\d{8})$/'],."
        required: true
        example: ut
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      division:
        name: division
        description: |-
          'contact_person_whatsapp_mobile' => ['required', 'regex:/^(01[3456789])(\d{8})$/'],
          'contact_person_email' => 'required',.
        required: true
        example: et
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      district:
        name: district
        description: ''
        required: true
        example: praesentium
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      upazila:
        name: upazila
        description: ''
        required: true
        example: sit
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      union:
        name: union
        description: ''
        required: true
        example: dolorem
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      village:
        name: village
        description: ''
        required: true
        example: non
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      latitude:
        name: latitude
        description: ''
        required: true
        example: autem
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      longitude:
        name: longitude
        description: ''
        required: true
        example: quisquam
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      address_direction:
        name: address_direction
        description: ''
        required: true
        example: laborum
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      worker_name:
        name: worker_name
        description: ''
        required: true
        example: id
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      worker_mobile:
        name: worker_mobile
        description: 'Must match the regex /^(01[3456789])(\d{8})$/.'
        required: true
        example: '01658759763'
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      work_type:
        name: work_type
        description: ''
        required: true
        example: voluptatem
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      customer_name: expedita
      customer_mobile: '01425874706'
      customer_email: repellat
      customer_organization: fugit
      customer_pop_id: consequatur
      customer_tj_box_id: corrupti
      olt_port: in
      contact_person_name: vel
      contact_person_primary_mobile: '01347625483'
      contact_person_designation: ut
      division: et
      district: praesentium
      upazila: sit
      union: dolorem
      village: non
      latitude: autem
      longitude: quisquam
      address_direction: laborum
      worker_name: id
      worker_mobile: '01658759763'
      work_type: voluptatem
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/v2/trans/customer/edit/{auth_id}/{id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      auth_id:
        name: auth_id
        description: 'The ID of the auth.'
        required: true
        example: quis
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      id:
        name: id
        description: 'The ID of the {auth id}.'
        required: true
        example: ducimus
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      auth_id: quis
      id: ducimus
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      customer_name:
        name: customer_name
        description: ''
        required: true
        example: voluptatem
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      customer_mobile:
        name: customer_mobile
        description: 'Must match the regex /^(01[3456789])(\d{8})$/.'
        required: true
        example: '01495315786'
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      customer_email:
        name: customer_email
        description: ''
        required: true
        example: vitae
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      customer_organization:
        name: customer_organization
        description: ''
        required: true
        example: cupiditate
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      customer_pop_id:
        name: customer_pop_id
        description: ''
        required: true
        example: minima
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      customer_tj_box_id:
        name: customer_tj_box_id
        description: ''
        required: true
        example: adipisci
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      olt_port:
        name: olt_port
        description: ''
        required: true
        example: rem
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      contact_person_name:
        name: contact_person_name
        description: ''
        required: true
        example: et
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      contact_person_primary_mobile:
        name: contact_person_primary_mobile
        description: 'Must match the regex /^(01[3456789])(\d{8})$/.'
        required: true
        example: '01341099898'
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      contact_person_designation:
        name: contact_person_designation
        description: "'contact_person_secondary_mobile' => ['required', 'regex:/^(01[3456789])(\\d{8})$/'],."
        required: true
        example: saepe
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      division:
        name: division
        description: |-
          'contact_person_whatsapp_mobile' => ['required', 'regex:/^(01[3456789])(\d{8})$/'],
          'contact_person_email' => 'required',.
        required: true
        example: labore
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      district:
        name: district
        description: ''
        required: true
        example: excepturi
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      upazila:
        name: upazila
        description: ''
        required: true
        example: tenetur
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      union:
        name: union
        description: ''
        required: true
        example: omnis
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      village:
        name: village
        description: ''
        required: true
        example: expedita
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      latitude:
        name: latitude
        description: ''
        required: true
        example: officiis
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      longitude:
        name: longitude
        description: ''
        required: true
        example: aperiam
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      address_direction:
        name: address_direction
        description: ''
        required: true
        example: ab
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      worker_name:
        name: worker_name
        description: ''
        required: true
        example: labore
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      worker_mobile:
        name: worker_mobile
        description: 'Must match the regex /^(01[3456789])(\d{8})$/.'
        required: true
        example: '01467960762'
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      work_type:
        name: work_type
        description: ''
        required: true
        example: sapiente
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      customer_name: voluptatem
      customer_mobile: '01495315786'
      customer_email: vitae
      customer_organization: cupiditate
      customer_pop_id: minima
      customer_tj_box_id: adipisci
      olt_port: rem
      contact_person_name: et
      contact_person_primary_mobile: '01341099898'
      contact_person_designation: saepe
      division: labore
      district: excepturi
      upazila: tenetur
      union: omnis
      village: expedita
      latitude: officiis
      longitude: aperiam
      address_direction: ab
      worker_name: labore
      worker_mobile: '01467960762'
      work_type: sapiente
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/v2/trans/customer/delete/{auth_id}/{id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      auth_id:
        name: auth_id
        description: 'The ID of the auth.'
        required: true
        example: veritatis
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      id:
        name: id
        description: 'The ID of the {auth id}.'
        required: true
        example: ex
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      auth_id: veritatis
      id: ex
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v2/trans/customer/status/summary/{auth_id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      auth_id:
        name: auth_id
        description: 'The ID of the auth.'
        required: true
        example: sit
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      auth_id: sit
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v2/trans/customer/all/lat/long/{auth_id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      auth_id:
        name: auth_id
        description: 'The ID of the auth.'
        required: true
        example: quae
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      auth_id: quae
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v2/trans/customer/bulk/upload
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      file:
        name: file
        description: ''
        required: true
        example: sed
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      file: sed
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v2/trans/geo/json/list/{auth_id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Display a listing of the resource.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      auth_id:
        name: auth_id
        description: 'The ID of the auth.'
        required: true
        example: molestias
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      auth_id: molestias
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v2/trans/geo/json/details/{auth_id}/{pop_code}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Display the specified resource.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      auth_id:
        name: auth_id
        description: 'The ID of the auth.'
        required: true
        example: autem
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      pop_code:
        name: pop_code
        description: ''
        required: true
        example: et
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      auth_id: autem
      pop_code: et
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/v2/trans/geo/json/create/{auth_id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      auth_id:
        name: auth_id
        description: 'The ID of the auth.'
        required: true
        example: culpa
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      auth_id: culpa
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      file:
        name: file
        description: ''
        required: false
        example: null
        type: 'string[]'
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/v2/trans/geo/json/delete/{auth_id}/{id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Display the specified resource.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      auth_id:
        name: auth_id
        description: 'The ID of the auth.'
        required: true
        example: officiis
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      id:
        name: id
        description: 'The ID of the {auth id}.'
        required: true
        example: id
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      auth_id: officiis
      id: id
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v2/trans/info/sarkar/pop/list
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v2/schools/{type}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      type:
        name: type
        description: ''
        required: true
        example: autem
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      type: autem
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v2/schools/without/mk/{type}/{c_status}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      type:
        name: type
        description: ''
        required: true
        example: voluptas
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      c_status:
        name: c_status
        description: ''
        required: true
        example: tempora
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      type: voluptas
      c_status: tempora
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v2/schools/by/institution/type/{type}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      type:
        name: type
        description: 'The type.'
        required: true
        example: placeat
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      type: placeat
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v2/nms/lot/admin/top/sheet
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v2/nms/lot/admin/invoice
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v2/schools/fiber/length/{type}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      type:
        name: type
        description: ''
        required: true
        example: asperiores
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      type: asperiores
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v2/schools/map/{auth_id}/{type}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      auth_id:
        name: auth_id
        description: 'The ID of the auth.'
        required: true
        example: est
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      type:
        name: type
        description: ''
        required: true
        example: quibusdam
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      auth_id: est
      type: quibusdam
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v2/schools/all/map/{auth_id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      auth_id:
        name: auth_id
        description: 'The ID of the auth.'
        required: true
        example: consequatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      auth_id: consequatur
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v2/school/create
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      mobile_number:
        name: mobile_number
        description: ''
        required: true
        example: blanditiis
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      whatsapp_number:
        name: whatsapp_number
        description: 'Must not be greater than 15 characters.'
        required: false
        example: ur
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      name:
        name: name
        description: 'Must not be greater than 255 characters.'
        required: true
        example: iddwkfuesmriecxhvzh
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      connection_code:
        name: connection_code
        description: 'Must not be greater than 255 characters.'
        required: true
        example: yvvdtwruqjgybjimqahfawoo
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      division:
        name: division
        description: 'Must not be greater than 10 characters.'
        required: true
        example: djl
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      district:
        name: district
        description: 'Must not be greater than 10 characters.'
        required: true
        example: kyykxlxb
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      upazila:
        name: upazila
        description: 'Must not be greater than 10 characters.'
        required: true
        example: ob
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      union:
        name: union
        description: 'Must not be greater than 10 characters.'
        required: true
        example: khytfeuf
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      village:
        name: village
        description: 'Must not be greater than 20 characters.'
        required: true
        example: lttpgpdg
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      latitude:
        name: latitude
        description: 'Must not be greater than 20 characters.'
        required: true
        example: laagartafozzogrluuo
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      longitude:
        name: longitude
        description: 'Must not be greater than 20 characters.'
        required: true
        example: wxdfyc
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      address_direction:
        name: address_direction
        description: ''
        required: true
        example: et
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      auth_id:
        name: auth_id
        description: ''
        required: true
        example: 67733.5112162
        type: number
        enumValues: []
        exampleWasSpecified: false
        custom: []
      package_id:
        name: package_id
        description: 'Must not be greater than 20 characters.'
        required: true
        example: c
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      head_teacher_name:
        name: head_teacher_name
        description: 'Must not be greater than 200 characters.'
        required: true
        example: rhwowugvtwkmg
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      head_teacher_mobile:
        name: head_teacher_mobile
        description: 'Must not be greater than 20 characters.'
        required: true
        example: ckmkzapl
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      fiber_id:
        name: fiber_id
        description: 'Must not be greater than 50 characters.'
        required: true
        example: vflrpkeebozxiumg
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      fiber_core:
        name: fiber_core
        description: 'Must not be greater than 50 characters.'
        required: true
        example: klpxfiqvnjsyleavvmr
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      db_signal:
        name: db_signal
        description: 'Must not be greater than 50 characters.'
        required: true
        example: aebyuvxvtfesqvyqytacohcj
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      fiber_start_meter:
        name: fiber_start_meter
        description: 'Must not be greater than 20 characters.'
        required: true
        example: hqmgpxhmjziiuybmeeoq
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      fiber_end_meter:
        name: fiber_end_meter
        description: 'Must not be greater than 20 characters.'
        required: true
        example: kozheacbfj
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      fiber_length:
        name: fiber_length
        description: 'Must not be greater than 20 characters.'
        required: true
        example: hpcxsvfnattghylqfuiu
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      onu_mac:
        name: onu_mac
        description: 'Must not be greater than 50 characters.'
        required: true
        example: pkcicwnxegsuszqm
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      router_login_username:
        name: router_login_username
        description: 'Must not be greater than 50 characters.'
        required: true
        example: gkrndxjjbswrwivzrjijwqkdp
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      router_login_password:
        name: router_login_password
        description: 'Must not be greater than 50 characters.'
        required: true
        example: vqsugtigebuefucvquwb
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      router_login_mac:
        name: router_login_mac
        description: 'Must not be greater than 50 characters.'
        required: true
        example: ivgoxjlc
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      router_remote_management_port:
        name: router_remote_management_port
        description: 'Must not be greater than 50 characters.'
        required: true
        example: vyxgccdzuceyuesiyzymgwmjs
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      gateway:
        name: gateway
        description: 'Must not be greater than 50 characters.'
        required: true
        example: mgpsoiohlhdjrydyaacznl
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      subnet_mask:
        name: subnet_mask
        description: 'Must not be greater than 50 characters.'
        required: true
        example: cxak
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      dnsv4_primary:
        name: dnsv4_primary
        description: 'Must not be greater than 50 characters.'
        required: true
        example: johopepdegipmnlwas
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      dnsv4_secondary:
        name: dnsv4_secondary
        description: 'Must not be greater than 50 characters.'
        required: true
        example: idnj
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      ipv4_ip:
        name: ipv4_ip
        description: 'Must not be greater than 50 characters.'
        required: true
        example: osdkketpwtbdswak
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      ipv6_ip:
        name: ipv6_ip
        description: 'Must not be greater than 50 characters.'
        required: true
        example: aglssmsum
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      slaac_enabled:
        name: slaac_enabled
        description: ''
        required: true
        example: 'yes'
        type: string
        enumValues:
          - 'yes'
          - 'no'
          - others
        exampleWasSpecified: false
        custom: []
      icmp_enabled:
        name: icmp_enabled
        description: ''
        required: true
        example: 'no'
        type: string
        enumValues:
          - 'yes'
          - 'no'
          - others
        exampleWasSpecified: false
        custom: []
      router_model:
        name: router_model
        description: 'Must not be greater than 50 characters.'
        required: true
        example: lxjgkxznaplwhwelzwnc
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      router_serial_number:
        name: router_serial_number
        description: 'Must not be greater than 50 characters.'
        required: true
        example: goefnadgtwag
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      tj_box_quantity:
        name: tj_box_quantity
        description: 'Must not be greater than 10 characters.'
        required: true
        example: fixdbwopf
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      fiber_patch_cord_quantity:
        name: fiber_patch_cord_quantity
        description: 'Must not be greater than 10 characters.'
        required: true
        example: eq
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      mobile_number: blanditiis
      whatsapp_number: ur
      name: iddwkfuesmriecxhvzh
      connection_code: yvvdtwruqjgybjimqahfawoo
      division: djl
      district: kyykxlxb
      upazila: ob
      union: khytfeuf
      village: lttpgpdg
      latitude: laagartafozzogrluuo
      longitude: wxdfyc
      address_direction: et
      auth_id: 67733.5112162
      package_id: c
      head_teacher_name: rhwowugvtwkmg
      head_teacher_mobile: ckmkzapl
      fiber_id: vflrpkeebozxiumg
      fiber_core: klpxfiqvnjsyleavvmr
      db_signal: aebyuvxvtfesqvyqytacohcj
      fiber_start_meter: hqmgpxhmjziiuybmeeoq
      fiber_end_meter: kozheacbfj
      fiber_length: hpcxsvfnattghylqfuiu
      onu_mac: pkcicwnxegsuszqm
      router_login_username: gkrndxjjbswrwivzrjijwqkdp
      router_login_password: vqsugtigebuefucvquwb
      router_login_mac: ivgoxjlc
      router_remote_management_port: vyxgccdzuceyuesiyzymgwmjs
      gateway: mgpsoiohlhdjrydyaacznl
      subnet_mask: cxak
      dnsv4_primary: johopepdegipmnlwas
      dnsv4_secondary: idnj
      ipv4_ip: osdkketpwtbdswak
      ipv6_ip: aglssmsum
      slaac_enabled: 'yes'
      icmp_enabled: 'no'
      router_model: lxjgkxznaplwhwelzwnc
      router_serial_number: goefnadgtwag
      tj_box_quantity: fixdbwopf
      fiber_patch_cord_quantity: eq
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v2/school/show/{id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Display the specified resource.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the show.'
        required: true
        example: tenetur
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      id: tenetur
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
    uri: 'api/v2/school/update/{id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the update.'
        required: true
        example: blanditiis
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      id: blanditiis
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'Must not be greater than 200 characters.'
        required: true
        example: pzqtejxaqztqkcfmuwkogykb
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      connection_code:
        name: connection_code
        description: 'Must not be greater than 255 characters.'
        required: true
        example: ofnuzpjgduggbnhsndjoel
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      division:
        name: division
        description: 'Must not be greater than 10 characters.'
        required: true
        example: jp
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      district:
        name: district
        description: 'Must not be greater than 10 characters.'
        required: true
        example: 'y'
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      upazila:
        name: upazila
        description: 'Must not be greater than 10 characters.'
        required: true
        example: k
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      union:
        name: union
        description: 'Must not be greater than 10 characters.'
        required: true
        example: fhutazdudk
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      village:
        name: village
        description: 'Must not be greater than 20 characters.'
        required: true
        example: orvdfettvvvssnzhsph
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      latitude:
        name: latitude
        description: 'Must not be greater than 20 characters.'
        required: true
        example: igqzxrv
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      longitude:
        name: longitude
        description: 'Must not be greater than 20 characters.'
        required: true
        example: quurdbagjhoq
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      auth_id:
        name: auth_id
        description: ''
        required: true
        example: 655672614.311
        type: number
        enumValues: []
        exampleWasSpecified: false
        custom: []
      package_id:
        name: package_id
        description: 'Must not be greater than 20 characters.'
        required: true
        example: jxxcpzjsesyy
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      head_teacher_name:
        name: head_teacher_name
        description: 'Must not be greater than 200 characters.'
        required: true
        example: iwnrkwpdcshemkyvbchamkaw
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      head_teacher_mobile:
        name: head_teacher_mobile
        description: 'Must not be greater than 20 characters.'
        required: true
        example: ptyuckwfxm
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      fiber_id:
        name: fiber_id
        description: 'Must not be greater than 50 characters.'
        required: true
        example: lxteudczmeqgdfcgusetujhj
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      fiber_core:
        name: fiber_core
        description: 'Must not be greater than 50 characters.'
        required: true
        example: vrufrrhlzckoi
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      db_signal:
        name: db_signal
        description: 'Must not be greater than 50 characters.'
        required: true
        example: ijiqncfra
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      fiber_start_meter:
        name: fiber_start_meter
        description: 'Must not be greater than 20 characters.'
        required: true
        example: awrelulivxecdblkjttn
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      fiber_end_meter:
        name: fiber_end_meter
        description: 'Must not be greater than 20 characters.'
        required: true
        example: tez
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      fiber_length:
        name: fiber_length
        description: 'Must not be greater than 20 characters.'
        required: true
        example: kofnsrmxhpkidzmocv
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      onu_mac:
        name: onu_mac
        description: 'Must not be greater than 50 characters.'
        required: true
        example: elktrlekwqtkjnuzggrll
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      router_login_username:
        name: router_login_username
        description: 'Must not be greater than 50 characters.'
        required: true
        example: dywtc
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      router_login_password:
        name: router_login_password
        description: 'Must not be greater than 50 characters.'
        required: true
        example: lzpwsivlpwo
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      router_login_mac:
        name: router_login_mac
        description: 'Must not be greater than 50 characters.'
        required: true
        example: xsafmdhapmfzcepqoqqvx
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      router_remote_management_port:
        name: router_remote_management_port
        description: 'Must not be greater than 50 characters.'
        required: true
        example: kiccxopylhg
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      gateway:
        name: gateway
        description: 'Must not be greater than 50 characters.'
        required: true
        example: gbxtadv
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      subnet_mask:
        name: subnet_mask
        description: 'Must not be greater than 50 characters.'
        required: true
        example: tiifzemrjohi
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      dnsv4_primary:
        name: dnsv4_primary
        description: 'Must not be greater than 50 characters.'
        required: true
        example: ojexxsmn
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      dnsv4_secondary:
        name: dnsv4_secondary
        description: 'Must not be greater than 50 characters.'
        required: true
        example: ybzpsyfegefiqrlwmylftt
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      ipv4_ip:
        name: ipv4_ip
        description: 'Must not be greater than 50 characters.'
        required: true
        example: rgvehwcapzatckkkdruzqvzp
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      ipv6_ip:
        name: ipv6_ip
        description: 'Must not be greater than 50 characters.'
        required: true
        example: nimctctyggkldjxglej
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      slaac_enabled:
        name: slaac_enabled
        description: ''
        required: true
        example: 'no'
        type: string
        enumValues:
          - 'yes'
          - 'no'
          - others
        exampleWasSpecified: false
        custom: []
      icmp_enabled:
        name: icmp_enabled
        description: ''
        required: true
        example: 'yes'
        type: string
        enumValues:
          - 'yes'
          - 'no'
          - others
        exampleWasSpecified: false
        custom: []
      router_model:
        name: router_model
        description: 'Must not be greater than 50 characters.'
        required: true
        example: xggoijevqeqlkjo
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      router_serial_number:
        name: router_serial_number
        description: 'Must not be greater than 50 characters.'
        required: true
        example: mletxbchazfbvreiolc
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      tj_box_quantity:
        name: tj_box_quantity
        description: 'Must not be greater than 10 characters.'
        required: true
        example: axy
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      fiber_patch_cord_quantity:
        name: fiber_patch_cord_quantity
        description: 'Must not be greater than 10 characters.'
        required: true
        example: gk
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      name: pzqtejxaqztqkcfmuwkogykb
      connection_code: ofnuzpjgduggbnhsndjoel
      division: jp
      district: 'y'
      upazila: k
      union: fhutazdudk
      village: orvdfettvvvssnzhsph
      latitude: igqzxrv
      longitude: quurdbagjhoq
      auth_id: 655672614.311
      package_id: jxxcpzjsesyy
      head_teacher_name: iwnrkwpdcshemkyvbchamkaw
      head_teacher_mobile: ptyuckwfxm
      fiber_id: lxteudczmeqgdfcgusetujhj
      fiber_core: vrufrrhlzckoi
      db_signal: ijiqncfra
      fiber_start_meter: awrelulivxecdblkjttn
      fiber_end_meter: tez
      fiber_length: kofnsrmxhpkidzmocv
      onu_mac: elktrlekwqtkjnuzggrll
      router_login_username: dywtc
      router_login_password: lzpwsivlpwo
      router_login_mac: xsafmdhapmfzcepqoqqvx
      router_remote_management_port: kiccxopylhg
      gateway: gbxtadv
      subnet_mask: tiifzemrjohi
      dnsv4_primary: ojexxsmn
      dnsv4_secondary: ybzpsyfegefiqrlwmylftt
      ipv4_ip: rgvehwcapzatckkkdruzqvzp
      ipv6_ip: nimctctyggkldjxglej
      slaac_enabled: 'no'
      icmp_enabled: 'yes'
      router_model: xggoijevqeqlkjo
      router_serial_number: mletxbchazfbvreiolc
      tj_box_quantity: axy
      fiber_patch_cord_quantity: gk
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/v2/school/delete/{id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the delete.'
        required: true
        example: quia
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      id: quia
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v2/school/bulk/import
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      file:
        name: file
        description: ''
        required: true
        example: quod
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      file: quod
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/v2/change/school/status/{id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the status.'
        required: true
        example: et
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      id: et
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v2/bandwidth/usages/school/{uid}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      uid:
        name: uid
        description: ''
        required: true
        example: fugit
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      uid: fugit
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v2/get/school/info/sarkar/pop/distance/{latitude}/{longitude}/{radiation}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      latitude:
        name: latitude
        description: ''
        required: true
        example: esse
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      longitude:
        name: longitude
        description: ''
        required: true
        example: amet
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      radiation:
        name: radiation
        description: ''
        required: true
        example: velit
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      latitude: esse
      longitude: amet
      radiation: velit
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v2/school/managers
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v2/school/managers/{auth_id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      auth_id:
        name: auth_id
        description: 'The ID of the auth.'
        required: true
        example: nesciunt
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      auth_id: nesciunt
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v2/school/manager/create
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      mobile_number:
        name: mobile_number
        description: ''
        required: true
        example: enim
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      whatsapp:
        name: whatsapp
        description: 'Must not be greater than 15 characters.'
        required: false
        example: ddgpicyui
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      name:
        name: name
        description: 'Must not be greater than 255 characters.'
        required: true
        example: vwbndyailcaqnluune
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      email:
        name: email
        description: 'Must be a valid email address.'
        required: true
        example: west.allan@example.org
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      division:
        name: division
        description: 'Must not be greater than 10 characters.'
        required: true
        example: dfhcqehq
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      district:
        name: district
        description: 'Must not be greater than 10 characters.'
        required: true
        example: xczwmjrk
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      upazila:
        name: upazila
        description: 'Must not be greater than 10 characters.'
        required: true
        example: bl
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      union:
        name: union
        description: 'Must not be greater than 10 characters.'
        required: true
        example: hhyfnxtagl
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      village:
        name: village
        description: 'Must not be greater than 20 characters.'
        required: true
        example: loxzrnx
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      latitude:
        name: latitude
        description: 'Must not be greater than 20 characters.'
        required: true
        example: woybpzs
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      longitude:
        name: longitude
        description: 'Must not be greater than 20 characters.'
        required: true
        example: cqesbszutdleze
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      address_direction:
        name: address_direction
        description: ''
        required: false
        example: quia
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      auth_id:
        name: auth_id
        description: ''
        required: true
        example: 121671714.824
        type: number
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      mobile_number: enim
      whatsapp: ddgpicyui
      name: vwbndyailcaqnluune
      email: west.allan@example.org
      division: dfhcqehq
      district: xczwmjrk
      upazila: bl
      union: hhyfnxtagl
      village: loxzrnx
      latitude: woybpzs
      longitude: cqesbszutdleze
      address_direction: quia
      auth_id: 121671714.824
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v2/school/manager/show/{uid}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      uid:
        name: uid
        description: ''
        required: true
        example: magnam
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      uid: magnam
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
    uri: 'api/v2/school/manager/update/{uid}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      uid:
        name: uid
        description: ''
        required: true
        example: sed
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      uid: sed
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      mobile_number:
        name: mobile_number
        description: ''
        required: false
        example: odio
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      whatsapp:
        name: whatsapp
        description: 'Must not be greater than 15 characters.'
        required: false
        example: tw
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      name:
        name: name
        description: 'Must not be greater than 255 characters.'
        required: true
        example: ebohgsbvdhbkfomamlafjehkj
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      email:
        name: email
        description: ''
        required: false
        example: buster15@example.com
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      division:
        name: division
        description: 'Must not be greater than 10 characters.'
        required: true
        example: s
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      district:
        name: district
        description: 'Must not be greater than 10 characters.'
        required: true
        example: fjfkpvq
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      upazila:
        name: upazila
        description: 'Must not be greater than 10 characters.'
        required: true
        example: lkrdsrl
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      union:
        name: union
        description: 'Must not be greater than 10 characters.'
        required: true
        example: vxqfsvuup
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      village:
        name: village
        description: 'Must not be greater than 20 characters.'
        required: true
        example: veerhuvs
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      latitude:
        name: latitude
        description: 'Must not be greater than 20 characters.'
        required: true
        example: jlcpahdgz
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      longitude:
        name: longitude
        description: 'Must not be greater than 20 characters.'
        required: true
        example: tvz
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      address_direction:
        name: address_direction
        description: ''
        required: false
        example: quas
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      auth_id:
        name: auth_id
        description: ''
        required: true
        example: 2262.05
        type: number
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      mobile_number: odio
      whatsapp: tw
      name: ebohgsbvdhbkfomamlafjehkj
      email: buster15@example.com
      division: s
      district: fjfkpvq
      upazila: lkrdsrl
      union: vxqfsvuup
      village: veerhuvs
      latitude: jlcpahdgz
      longitude: tvz
      address_direction: quas
      auth_id: 2262.05
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/v2/school/manager/delete/{uid}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      uid:
        name: uid
        description: ''
        required: true
        example: soluta
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      uid: soluta
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v2/school/managers/permissions
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
    uri: 'api/v2/school/managers/permissions/access/{uid}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      uid:
        name: uid
        description: ''
        required: true
        example: corporis
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      uid: corporis
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/v2/school/managers/profile/update/{uid}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      uid:
        name: uid
        description: ''
        required: true
        example: inventore
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      uid: inventore
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
    uri: api/v2/school/managers/change/password
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v2/school/auth/profile/{uid}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      uid:
        name: uid
        description: ''
        required: true
        example: dicta
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      uid: dicta
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v2/nms/total/status/summary/{lot_id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Total Status Summary'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      lot_id:
        name: lot_id
        description: 'The ID of the lot.'
        required: true
        example: consectetur
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      lot_id: consectetur
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v2/nms/category/wise/status/summary/{lot_id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Total Status Summary'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      lot_id:
        name: lot_id
        description: 'The ID of the lot.'
        required: true
        example: magnam
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      lot_id: magnam
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v2/nms/lot/admin/list
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Display a listing of the resource.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v2/nms/lot/admin/less/data/list
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v2/nms/lot/admin/show/{uid}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Display the specified resource.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      uid:
        name: uid
        description: ''
        required: true
        example: alias
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      uid: alias
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v2/nms/lot/admin/create
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Store a newly created resource in storage.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      mobile_number:
        name: mobile_number
        description: ''
        required: false
        example: sint
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      whatsapp_number:
        name: whatsapp_number
        description: 'Must not be greater than 15 characters.'
        required: false
        example: jwunxms
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      name:
        name: name
        description: 'Must not be greater than 50 characters.'
        required: true
        example: rue
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      email:
        name: email
        description: 'Must be a valid email address.'
        required: true
        example: huels.ivy@example.com
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      lot_username:
        name: lot_username
        description: 'Must not be greater than 50 characters.'
        required: true
        example: qzkvfmyvechhpjpc
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      lot_isp_name:
        name: lot_isp_name
        description: 'Must not be greater than 50 characters.'
        required: true
        example: gonjixurzfxwyejo
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      proprietor_name:
        name: proprietor_name
        description: 'Must not be greater than 50 characters.'
        required: true
        example: pwivfsos
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      proprietor_mobile:
        name: proprietor_mobile
        description: 'Must not be greater than 15 characters.'
        required: true
        example: exkcpkxm
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      proprietor_email:
        name: proprietor_email
        description: 'Must not be greater than 50 characters.'
        required: true
        example: beer.sam@example.org
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      bank_name:
        name: bank_name
        description: 'Must not be greater than 50 characters.'
        required: true
        example: gureydfbm
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      bank_account_name:
        name: bank_account_name
        description: 'Must not be greater than 50 characters.'
        required: true
        example: xlp
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      bank_account_number:
        name: bank_account_number
        description: 'Must not be greater than 50 characters.'
        required: true
        example: k
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      bank_branch_address:
        name: bank_branch_address
        description: 'Must not be greater than 256 characters.'
        required: true
        example: mkwzxqtdacyx
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      installation_cost:
        name: installation_cost
        description: ''
        required: true
        example: 2
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
      package_id:
        name: package_id
        description: ''
        required: true
        example: corrupti
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      division:
        name: division
        description: 'Must not be greater than 10 characters.'
        required: true
        example: wr
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      district:
        name: district
        description: 'Must not be greater than 10 characters.'
        required: true
        example: oz
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      upazila:
        name: upazila
        description: 'Must not be greater than 10 characters.'
        required: true
        example: mpirdp
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      union:
        name: union
        description: 'Must not be greater than 10 characters.'
        required: true
        example: uavfj
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      village:
        name: village
        description: 'Must not be greater than 20 characters.'
        required: true
        example: oiaup
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      address_direction:
        name: address_direction
        description: ''
        required: false
        example: tempora
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      latitude:
        name: latitude
        description: 'Must not be greater than 20 characters.'
        required: true
        example: ovyzgownnoojepovfuus
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      longitude:
        name: longitude
        description: 'Must not be greater than 20 characters.'
        required: true
        example: ksuplxvpguqmkx
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      auth_id:
        name: auth_id
        description: ''
        required: true
        example: 4.0
        type: number
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      mobile_number: sint
      whatsapp_number: jwunxms
      name: rue
      email: huels.ivy@example.com
      lot_username: qzkvfmyvechhpjpc
      lot_isp_name: gonjixurzfxwyejo
      proprietor_name: pwivfsos
      proprietor_mobile: exkcpkxm
      proprietor_email: beer.sam@example.org
      bank_name: gureydfbm
      bank_account_name: xlp
      bank_account_number: k
      bank_branch_address: mkwzxqtdacyx
      installation_cost: 2
      package_id: corrupti
      division: wr
      district: oz
      upazila: mpirdp
      union: uavfj
      village: oiaup
      address_direction: tempora
      latitude: ovyzgownnoojepovfuus
      longitude: ksuplxvpguqmkx
      auth_id: 4.0
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
    uri: 'api/v2/nms/lot/admin/update/{uid}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Update the specified resource in storage.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      uid:
        name: uid
        description: ''
        required: true
        example: id
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      uid: id
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      mobile_number:
        name: mobile_number
        description: 'Must not be greater than 15 characters.'
        required: false
        example: i
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      whatsapp_number:
        name: whatsapp_number
        description: 'Must not be greater than 15 characters.'
        required: false
        example: tpk
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      name:
        name: name
        description: 'Must not be greater than 50 characters.'
        required: true
        example: mgsae
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      email:
        name: email
        description: 'Must be a valid email address.'
        required: true
        example: lferry@example.net
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      lot_isp_name:
        name: lot_isp_name
        description: 'Must not be greater than 50 characters.'
        required: true
        example: h
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      proprietor_name:
        name: proprietor_name
        description: 'Must not be greater than 50 characters.'
        required: true
        example: jffv
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      proprietor_mobile:
        name: proprietor_mobile
        description: 'Must not be greater than 15 characters.'
        required: true
        example: lgmwoeegrirf
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      proprietor_email:
        name: proprietor_email
        description: 'Must not be greater than 50 characters.'
        required: true
        example: xander.christiansen@example.net
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      bank_name:
        name: bank_name
        description: 'Must not be greater than 50 characters.'
        required: true
        example: qb
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      bank_account_name:
        name: bank_account_name
        description: 'Must not be greater than 50 characters.'
        required: true
        example: dnimcjvjgidveebhookurbb
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      bank_account_number:
        name: bank_account_number
        description: 'Must not be greater than 50 characters.'
        required: true
        example: hrev
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      bank_branch_address:
        name: bank_branch_address
        description: 'Must not be greater than 256 characters.'
        required: true
        example: ee
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      installation_cost:
        name: installation_cost
        description: ''
        required: true
        example: 11
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
      package_id:
        name: package_id
        description: ''
        required: true
        example: ut
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      division:
        name: division
        description: 'Must not be greater than 10 characters.'
        required: true
        example: mdsdi
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      district:
        name: district
        description: 'Must not be greater than 10 characters.'
        required: true
        example: mtov
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      upazila:
        name: upazila
        description: 'Must not be greater than 10 characters.'
        required: true
        example: rcjgmi
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      union:
        name: union
        description: 'Must not be greater than 10 characters.'
        required: true
        example: eawzjjsgv
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      village:
        name: village
        description: 'Must not be greater than 20 characters.'
        required: true
        example: xsoykuvskc
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      address_direction:
        name: address_direction
        description: ''
        required: false
        example: dolorem
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      latitude:
        name: latitude
        description: 'Must not be greater than 20 characters.'
        required: true
        example: nlqcdgjszbfotpqw
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      longitude:
        name: longitude
        description: 'Must not be greater than 20 characters.'
        required: true
        example: fdwbjnwvxyqzovdu
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      auth_id:
        name: auth_id
        description: ''
        required: true
        example: 660693.4095
        type: number
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      mobile_number: i
      whatsapp_number: tpk
      name: mgsae
      email: lferry@example.net
      lot_isp_name: h
      proprietor_name: jffv
      proprietor_mobile: lgmwoeegrirf
      proprietor_email: xander.christiansen@example.net
      bank_name: qb
      bank_account_name: dnimcjvjgidveebhookurbb
      bank_account_number: hrev
      bank_branch_address: ee
      installation_cost: 11
      package_id: ut
      division: mdsdi
      district: mtov
      upazila: rcjgmi
      union: eawzjjsgv
      village: xsoykuvskc
      address_direction: dolorem
      latitude: nlqcdgjszbfotpqw
      longitude: fdwbjnwvxyqzovdu
      auth_id: 660693.4095
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/v2/nms/lot/admin/delete/{id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Remove the specified resource from storage.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the delete.'
        required: true
        example: fugit
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      id: fugit
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v2/nms/category/based/admin/list
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v2/nms/category/based/admin/show/{uid}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      uid:
        name: uid
        description: ''
        required: true
        example: labore
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      uid: labore
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v2/nms/category/based/admin/create
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      mobile_number:
        name: mobile_number
        description: ''
        required: false
        example: ut
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      whatsapp_number:
        name: whatsapp_number
        description: ''
        required: false
        example: maiores
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      name:
        name: name
        description: 'Must not be greater than 50 characters.'
        required: true
        example: tqbcpzkxiocahnnfyjhkbm
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      email:
        name: email
        description: 'Must be a valid email address.'
        required: true
        example: hardy43@example.com
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      username:
        name: username
        description: 'Must not be greater than 50 characters.'
        required: true
        example: idazmaqgtujtlqcixhahmvqaq
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      division:
        name: division
        description: 'Must not be greater than 10 characters.'
        required: true
        example: ohn
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      district:
        name: district
        description: 'Must not be greater than 10 characters.'
        required: true
        example: ohkc
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      upazila:
        name: upazila
        description: 'Must not be greater than 10 characters.'
        required: true
        example: syp
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      union:
        name: union
        description: 'Must not be greater than 10 characters.'
        required: true
        example: u
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      village:
        name: village
        description: 'Must not be greater than 20 characters.'
        required: true
        example: qeqflk
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      address_direction:
        name: address_direction
        description: ''
        required: false
        example: iure
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      latitude:
        name: latitude
        description: 'Must not be greater than 20 characters.'
        required: true
        example: gu
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      longitude:
        name: longitude
        description: 'Must not be greater than 20 characters.'
        required: true
        example: tlprxpcwfcmykz
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      auth_id:
        name: auth_id
        description: ''
        required: true
        example: 664841508.0
        type: number
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      mobile_number: ut
      whatsapp_number: maiores
      name: tqbcpzkxiocahnnfyjhkbm
      email: hardy43@example.com
      username: idazmaqgtujtlqcixhahmvqaq
      division: ohn
      district: ohkc
      upazila: syp
      union: u
      village: qeqflk
      address_direction: iure
      latitude: gu
      longitude: tlprxpcwfcmykz
      auth_id: 664841508.0
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
    uri: 'api/v2/nms/category/based/admin/update/{uid}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      uid:
        name: uid
        description: ''
        required: true
        example: quaerat
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      uid: quaerat
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      mobile_number:
        name: mobile_number
        description: ''
        required: false
        example: repudiandae
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      whatsapp_number:
        name: whatsapp_number
        description: ''
        required: false
        example: molestiae
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      name:
        name: name
        description: 'Must not be greater than 50 characters.'
        required: true
        example: ksnitceuplynmepeosatt
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      email:
        name: email
        description: 'Must be a valid email address.'
        required: true
        example: melyna05@example.net
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      division:
        name: division
        description: 'Must not be greater than 10 characters.'
        required: true
        example: rrmn
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      district:
        name: district
        description: 'Must not be greater than 10 characters.'
        required: true
        example: bhjtgop
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      upazila:
        name: upazila
        description: 'Must not be greater than 10 characters.'
        required: true
        example: etp
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      union:
        name: union
        description: 'Must not be greater than 10 characters.'
        required: true
        example: sfajexuxq
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      village:
        name: village
        description: 'Must not be greater than 20 characters.'
        required: true
        example: ydcihb
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      address_direction:
        name: address_direction
        description: ''
        required: false
        example: aut
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      latitude:
        name: latitude
        description: 'Must not be greater than 20 characters.'
        required: true
        example: fhtaqqk
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      longitude:
        name: longitude
        description: 'Must not be greater than 20 characters.'
        required: true
        example: vzopsugstlbpgjtdee
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      auth_id:
        name: auth_id
        description: ''
        required: true
        example: 1112626.137
        type: number
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      mobile_number: repudiandae
      whatsapp_number: molestiae
      name: ksnitceuplynmepeosatt
      email: melyna05@example.net
      division: rrmn
      district: bhjtgop
      upazila: etp
      union: sfajexuxq
      village: ydcihb
      address_direction: aut
      latitude: fhtaqqk
      longitude: vzopsugstlbpgjtdee
      auth_id: 1112626.137
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/v2/nms/category/based/admin/delete/{id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the delete.'
        required: true
        example: adipisci
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      id: adipisci
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v2/nms/geo/json/list/{institution_type}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      institution_type:
        name: institution_type
        description: ''
        required: true
        example: praesentium
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      institution_type: praesentium
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v2/nms/geo/json/list/by/types/{lot_uid}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      lot_uid:
        name: lot_uid
        description: ''
        required: true
        example: qui
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      lot_uid: qui
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v2/nms/geo/json/details/{lot_id}/{institution_type}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Display the specified resource.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      lot_id:
        name: lot_id
        description: 'The ID of the lot.'
        required: true
        example: odit
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      institution_type:
        name: institution_type
        description: ''
        required: true
        example: harum
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      lot_id: odit
      institution_type: harum
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/v2/nms/geo/json/create/{auth_id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      auth_id:
        name: auth_id
        description: 'The ID of the auth.'
        required: true
        example: alias
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      auth_id: alias
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      file:
        name: file
        description: ''
        required: false
        example: null
        type: 'string[]'
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/v2/nms/geo/json/delete/{auth_id}/{id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Display the specified resource.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      auth_id:
        name: auth_id
        description: 'The ID of the auth.'
        required: true
        example: sed
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      id:
        name: id
        description: 'The ID of the {auth id}.'
        required: true
        example: consequatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      auth_id: sed
      id: consequatur
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v2/pay
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v2/success
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v2/fail
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v2/cancel
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v2/ipn
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v2/hotspot/pay
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v2/hotspot/success
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v2/hotspot/fail
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v2/hotspot/cancel
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v2/hotspot/ipn
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
